---
openapi: 3.0.3
info:
  title: BFT Documentation API
  description: OpenApi documentation for Briix Application.
  contact:
    name: Briix IT Support
    url: http://briix.com
    email: it-support@briix.com
  version: 1.0.0-SNAPSHOT
  x-logo:
    url: "https://res.cloudinary.com/ekosutrisno/image/upload/v1696327725/atrium-assets/openapi_j13vkj.png"
    altText: "Briix logo"
    padding: "25px"
  servers:
  - url: https://app.test.briix.com
    description: Environment Test
  - url: https://app.stg.briix.com
    description: Environment Staging
  - url: https://app.briix.com
    description: Environment Production
paths:
  /api/admin/v1/academy:
    get:
      tags:
      - Academy Admin Api V 1
      summary: List Academy
      description: List Academy.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Academy'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Academy Admin Api V 1
      summary: Update Academy
      description: "Update Academy, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademyRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Academy'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Academy Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Academy Admin Api V 1
      summary: Add Academy
      description: Add Academy with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademyRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Academy'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/academy/{code}:
    get:
      tags:
      - Academy Admin Api V 1
      summary: Get an Academy detail
      description: Get an Academy detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Academy'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Academy Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Academy Admin Api V 1
      summary: Delete Academy
      description: Delete Academy.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/academy/{code}/pdf:
    post:
      tags:
      - Academy Admin Api V 1
      summary: Add pdf to academy
      description: Add pdf to academy.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Academy Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/academy/{code}/video:
    post:
      tags:
      - Academy Admin Api V 1
      summary: Add video to academy
      description: Add video to academy.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Academy Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/accounts:
    get:
      tags:
      - Account Admin Api V 1
      summary: List Accounts
      description: List Accounts.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Account Admin Api V 1
      summary: Put a account detail
      description: Put a account detail.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Account Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Account Admin Api V 1
      summary: Post a account detail
      description: Post a account detail.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Account Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/accounts/completed:
    get:
      tags:
      - Account Admin Api V 1
      summary: Get an account detail
      description: Get an account detail.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/accounts/{code}/detail:
    get:
      tags:
      - Account Admin Api V 1
      summary: Get an account detail
      description: Get an account detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Account Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/amenities:
    get:
      tags:
      - Amenity Admin Api V 1
      summary: List Amenities
      description: List Amenities.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenity'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Amenity Admin Api V 1
      summary: Update Amenity
      description: "Update Amenity, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amenity'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenity'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Amenity Code Not Found or Company Code\
            \ Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Amenity Admin Api V 1
      summary: Add Amenity
      description: Add Amenity with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amenity'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenity'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Amenity Admin Api V 1
      summary: Delete Amenities
      description: Delete Amenities.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Amenity'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/amenities/{code}:
    get:
      tags:
      - Amenity Admin Api V 1
      summary: Get an Amenity detail
      description: Get an Amenity detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amenity'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Amenity Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/analytic/download/{params}:
    get:
      tags:
      - Google Analytic Report Admin Api V 1
      parameters:
      - name: params
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ReportDownLoadDate'
      security:
      - jwt: []
  /api/admin/v1/analytic/realtimeUser:
    get:
      tags:
      - Google Analytic Report Admin Api V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportDownLoadDate'
      security:
      - jwt: []
  /api/admin/v1/announcements:
    get:
      tags:
      - Announcement Admin Api V 1
      summary: List Announcements
      description: List Announcements.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Announcement Admin Api V 1
      summary: Update Announcements
      description: "Update Announcements, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Announcement Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Announcement Admin Api V 1
      summary: Add Announcements
      description: Add Announcements with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/announcements/{code}:
    get:
      tags:
      - Announcement Admin Api V 1
      summary: Get a Announcement detail
      description: Get a Announcement detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Announcement Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Announcement Admin Api V 1
      summary: Delete Announcements
      description: Delete Announcements.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/assets:
    get:
      tags:
      - Assets Admin Api V 1
      summary: List Assets
      description: List Assets.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetsResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Assets Admin Api V 1
      summary: Update Assets
      description: "Update Assets, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assets'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Assets Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Assets Admin Api V 1
      summary: Add Assets
      description: Add Assets with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assets'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/assets/unlinked-non-room:
    get:
      tags:
      - Assets Admin Api V 1
      summary: List unlinked non room
      description: List unlinked non room
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NonRoom1'
  /api/admin/v1/assets/unlinked-room:
    get:
      tags:
      - Assets Admin Api V 1
      summary: List unlinked room
      description: List unlinked room
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  /api/admin/v1/assets/{code}:
    delete:
      tags:
      - Assets Admin Api V 1
      summary: Delete Assets
      description: Delete Assets.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/assets/{code}/detail:
    get:
      tags:
      - Assets Admin Api V 1
      summary: Get a Non Room detail
      description: Get a Non Room detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Assets Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/assets/{code}/medias:
    post:
      tags:
      - Assets Admin Api V 1
      summary: Add a media to a property
      description: Add a media to a property.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Property Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/auth:
    get:
      tags:
      - Auth Admin Api V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffResponse_Simple_Nats'
    delete:
      tags:
      - Auth Admin Api V 1
      responses:
        "204":
          description: No Content
  /api/admin/v1/auth/firebase:
    post:
      tags:
      - Auth Admin Api V 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffResponse_Simple_Nats'
  /api/admin/v1/auth/mock:
    post:
      tags:
      - Auth Admin Api V 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffResponse_Simple_Nats'
  /api/admin/v1/billing-invoice:
    get:
      tags:
      - Billing Invoice Admin Api V 1
      summary: List Billing Invoice.
      description: List Billing Invoice.
      parameters:
      - name: asset
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingInvoice'
    post:
      tags:
      - Billing Invoice Admin Api V 1
      summary: Create Invoice Payment.
      description: Create Invoice Payment.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingInvoiceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInvoice'
  /api/admin/v1/billing-invoice/{code}:
    get:
      tags:
      - Billing Invoice Admin Api V 1
      summary: get Invoice by code .
      description: get Invoice by code .
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInvoice'
  /api/admin/v1/billing-invoice/{code}/evidences:
    post:
      tags:
      - Billing Invoice Admin Api V 1
      summary: Add invoice payment proof .
      description: Add invoice payment proof .
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/admin/v1/billing-invoice/{invoiceCode}/invoice:
    get:
      tags:
      - Billing Invoice Admin Api V 1
      summary: get Invoice by Invoice code .
      description: get Invoice by Invoice code .
      parameters:
      - name: invoiceCode
        in: path
        required: true
        schema:
          type: string
      - name: asset
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingInvoice'
  /api/admin/v1/brands:
    get:
      tags:
      - Brand Admin Api V 1
      summary: List Brands
      description: List Brands.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Brand Admin Api V 1
      summary: Update Brand
      description: "Update Brand, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Brand'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Brand Code or Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Brand Admin Api V 1
      summary: Add Brand
      description: Add Brand with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Brand'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Brand Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Brand Admin Api V 1
      summary: Delete Brand
      description: Delete Brand.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Brand'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/brands/{code}:
    get:
      tags:
      - Brand Admin Api V 1
      summary: Get an Brand detail
      description: Get an Brand detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Brand Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/brands/{code}/logo:
    post:
      tags:
      - Brand Admin Api V 1
      summary: Add a logo to Brand
      description: Add a logo to Brand.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Brand Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/company:
    get:
      tags:
      - Company Admin Api V 1
      summary: List Company
      description: List Company
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
    put:
      tags:
      - Company Admin Api V 1
      summary: Update Company
      description: "Update Company, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
    post:
      tags:
      - Company Admin Api V 1
      summary: Add Company
      description: Add Company with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
    delete:
      tags:
      - Company Admin Api V 1
      summary: Delete Company
      description: Delete Company
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Company'
        required: true
      responses:
        "204":
          description: No Content
  /api/admin/v1/company/area:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Area Ward Company
      description: get Area Ward Company
      parameters:
      - name: city
        in: query
        schema:
          type: string
      - name: province
        in: query
        schema:
          type: string
      - name: subdistrict
        in: query
        schema:
          type: string
      - name: ward
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/area/city:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Area City Company
      description: get Area City Company
      parameters:
      - name: province
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/area/province:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Area Province Company
      description: get Area Province Company
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/area/subdistrict:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Area Sub District Company
      description: get Area Sub District Company
      parameters:
      - name: city
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/area/ward:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Area Ward Company
      description: get Area Ward Company
      parameters:
      - name: subdistrict
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/request-loan:
    post:
      tags:
      - Company Admin Api V 1
      summary: Request Company Loan To BFS
      description: Request Company Loan To BFS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BessLoanResponse'
  /api/admin/v1/company/sector:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Sector Company
      description: Get Sector Company
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/sector/economy:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get Sector Company
      description: Get Sector Company
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/admin/v1/company/{code}/detail:
    get:
      tags:
      - Company Admin Api V 1
      summary: Get a Company
      description: Get a Company
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
  /api/admin/v1/corporation:
    get:
      tags:
      - Corporation Admin Api V 1
      summary: List corporation for property
      description: List corporation for property.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Corporation_Expanded_Simple_Nats'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException_Expanded_Simple_Nats'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Corporation Admin Api V 1
      summary: Update corporation for property
      description: "Update corporation for property, overwriting all attributes except\
        \ `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Corporation'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corporation_Expanded_Simple_Nats'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Corporation Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException_Expanded_Simple_Nats'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Corporation Admin Api V 1
      summary: Add corporation for property
      description: Add corporation for property with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Corporation'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corporation_Expanded_Simple_Nats'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Corporation Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException_Expanded_Simple_Nats'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Corporation Admin Api V 1
      summary: Delete corporation for property
      description: Delete corporation for property.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Corporation'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/corporation/{code}:
    get:
      tags:
      - Corporation Admin Api V 1
      summary: Get a corporation for property detail
      description: Get a corporation for property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corporation_Expanded_Simple_Nats'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Corporation Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException_Expanded_Simple_Nats'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/customer-accounts:
    get:
      tags:
      - Customer Account Api V 1
      summary: List Customer Detail Account
      description: List Customer Detail Account
      parameters:
      - name: pageNumber
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 10
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Account Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Customer Account Api V 1
      summary: Update for Customer Detail Account
      description: "Update for Customer Detail Account, overwriting all attributes\
        \ except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccount'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
    post:
      tags:
      - Customer Account Api V 1
      summary: Add for Customer Detail Account
      description: Add for Customer Detail Account with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccount'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Account Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Customer Account Api V 1
      summary: Delete Customer Detail Account
      description: Delete Customer Detail Account.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccount'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/customer-accounts/{code}:
    get:
      tags:
      - Customer Account Api V 1
      summary: Get a Customer Detail Account
      description: Get a Customer Detail Account.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Account Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/customers:
    get:
      tags:
      - Customer Admin Api V 1
      summary: List Customer
      description: List Customer.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Customer Admin Api V 1
      summary: Put a customer detail
      description: Put a customer detail.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Wallet Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Customer Admin Api V 1
      summary: Post a customer detail
      description: Post a customer detail.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: It could be Email Already Exist or Mobile\
            \ Phone Number Already Exist."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/customers/passed:
    get:
      tags:
      - Customer Admin Api V 1
      summary: "List customers passed kyc,rdf,whitelist"
      description: "List customers passed kyc,rdf,whitelist."
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/customers/updateWhitelist:
    put:
      tags:
      - Customer Admin Api V 1
      summary: Put a customer whitelist
      description: Put a customer whitelist.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/customers/{code}:
    get:
      tags:
      - Customer Admin Api V 1
      summary: Get an account detail
      description: Get an account detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/dashboard/balance:
    get:
      tags:
      - Dashboard Api V 1
      summary: New dashboard data balance customer
      description: New dashboard data balance customer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/admin/v1/dashboard/balance/{params}:
    get:
      tags:
      - Dashboard Api V 1
      summary: "Total balance customer weekly, monthly and yearly"
      description: "Total balance customer weekly, monthly and yearly."
      parameters:
      - name: params
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/admin/v1/dashboard/customer-foreigner/{params}:
    get:
      tags:
      - Dashboard Api V 1
      summary: "Total customer foreigner weekly, monthly and yearly"
      description: "Total customer foreigner weekly, monthly and yearly."
      parameters:
      - name: params
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/admin/v1/dashboard/customer-local/{params}:
    get:
      tags:
      - Dashboard Api V 1
      summary: "Total customer local weekly, monthly and yearly"
      description: "Total customer local weekly, monthly and yearly."
      parameters:
      - name: params
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/admin/v1/dashboard/customers:
    get:
      tags:
      - Dashboard Api V 1
      summary: New dashboard data Total Customer Local and Foreigner
      description: New dashboard data Total Customer Local and Foreigner
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/admin/v1/dashboard/unused-balance/{params}:
    get:
      tags:
      - Dashboard Api V 1
      summary: "Total balance customer weekly, monthly and yearly"
      description: "Total balance customer weekly, monthly and yearly."
      parameters:
      - name: params
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/admin/v1/dividend/property/monthly:
    post:
      tags:
      - Dividend Property Monthly Admin Api V 1
      summary: Add dividend Property Monthly and send amount to wallet and wallet
        loan
      description: Add dividend Property Monthly and send amount to wallet and wallet
        loan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DividendPropertyMonthly'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DividendPropertyMonthly'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: It could be Revenue Property Daily data\
            \ doesn't exist, Revenue Property Daily hasn't completed a full month,\
            \ or Revenue Property Monthly already exist and paid."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/dividend/property/monthly/{code}:
    get:
      tags:
      - Dividend Property Monthly Admin Api V 1
      summary: List dividend monthly by Invoice Property code
      description: List dividend monthly by Invoice Property code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DividendPropertyMonthly'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/due-diligence:
    get:
      tags:
      - Due Diligence Admin Api V 1
      summary: List due diligence.
      description: List due diligence.
      parameters:
      - name: invoiceOnly
        in: query
        schema:
          type: boolean
      - name: pageNumber
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 10
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/due-diligence/detail/{code}:
    delete:
      tags:
      - Due Diligence Admin Api V 1
      summary: delete timeline in due diligence detail
      description: delete timeline in due diligence detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: domain
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/due-diligence/{code}:
    get:
      tags:
      - Due Diligence Admin Api V 1
      summary: Get due diligence detail
      description: Get due diligence detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DueDiligence'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Due Diligence Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Due Diligence Admin Api V 1
      summary: Update due diligence detail
      description: Get a due diligence detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DueDiligenceRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Due Diligence Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/eoi/non-room:
    get:
      tags:
      - Eoi Non Room Admin Api V 1
      summary: List Non Room Eoi.
      description: List Non Room Eoi.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EoiNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Eoi Non Room Admin Api V 1
      summary: Add a Non Room transaction
      description: "Add a Non Room transaction. In the app, this is the Enquire button."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiNonRoom'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiNonRoom'
  /api/admin/v1/eoi/non-room/valid:
    put:
      tags:
      - Eoi Non Room Admin Api V 1
      summary: 'Set Customer has valid invoice '
      description: Set Customer has valid invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiNonRoom'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiNonRoom'
  /api/admin/v1/eoi/non-room/{code}/project:
    get:
      tags:
      - Eoi Non Room Admin Api V 1
      summary: Get Non Room Eoi by Non Room code.
      description: Get Non Room Eoi by Non Room code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EoiNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/eoi/non-room/{eoiCode}:
    get:
      tags:
      - Eoi Non Room Admin Api V 1
      summary: Get Non Room Eoi by code.
      description: Get Non Room Eoi by code.
      parameters:
      - name: eoiCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: EOI Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/eoi/properties:
    get:
      tags:
      - Eoi Property Admin Api V 1
      summary: List Property eoi.
      description: List Property eoi.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EoiProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Eoi Property Admin Api V 1
      summary: Add a property transaction
      description: "Add a property transaction. In the app, this is the Enquire button."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiProperty'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Property Code or Account Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/eoi/properties/id/{id}:
    get:
      tags:
      - Eoi Property Admin Api V 1
      summary: get Property eoi by id.
      description: get Property eoi by id.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiProperty'
  /api/admin/v1/eoi/properties/valid:
    put:
      tags:
      - Eoi Property Admin Api V 1
      summary: 'Set Customer has valid invoice '
      description: Set Customer has valid invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiProperty'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: EOI Property Code or Account Code Not\
            \ Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/eoi/properties/{code}:
    get:
      tags:
      - Eoi Property Admin Api V 1
      summary: get Property eoi by code.
      description: get Property eoi by code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: EOI Property Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/eoi/properties/{code}/property:
    get:
      tags:
      - Eoi Property Admin Api V 1
      summary: get Property eoi by Property code.
      description: get Property eoi by Property code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EoiProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/fcms:
    post:
      tags:
      - Fcms Admin Api V 1
      summary: Add FCM token to current staff
      description: Add FCM token to current staff.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fcm'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/fixed-income-banks:
    get:
      tags:
      - Fixed Income Bank Admin Api V 1
      summary: List banks
      description: List banks.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FixedIncomeBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Fixed Income Bank Admin Api V 1
      summary: Update banks
      description: "Update banks, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FixedIncomeBank'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FixedIncomeBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Bank Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Fixed Income Bank Admin Api V 1
      summary: Add banks
      description: Add banks.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FixedIncomeBank'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FixedIncomeBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Fixed Income Bank Admin Api V 1
      summary: Delete banks
      description: Delete banks.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FixedIncomeBank'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/fixed-income-banks/{code}:
    get:
      tags:
      - Fixed Income Bank Admin Api V 1
      summary: Get a bank detail
      description: Get a bank detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedIncomeBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Bank Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/fixed-income-banks/{code}/logo:
    post:
      tags:
      - Fixed Income Bank Admin Api V 1
      summary: Add a logo to a bank
      description: Add a logo to a bank.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Bank Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/history-voucher/{code}:
    get:
      tags:
      - History Voucher Admin Api V 1
      summary: List History Voucher by Promotion Code
      description: List History Voucher by Promotion Code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryVoucher'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/invoice-payment/hospitality:
    get:
      tags:
      - Invoice Payment Hospitality Admin Api V 1
      summary: List Invoice Payment hospitality.
      description: List Invoice Payment hospitality.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentHospitality'
    post:
      tags:
      - Invoice Payment Hospitality Admin Api V 1
      summary: Create Invoice Payment Hospitality.
      description: Create Invoice Payment Hospitality.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentHospitality'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentHospitality'
  /api/admin/v1/invoice-payment/hospitality/{code}:
    get:
      tags:
      - Invoice Payment Hospitality Admin Api V 1
      summary: get InvoicePayment Hospitality by code .
      description: get InvoicePayment Hospitality by code .
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentHospitality'
  /api/admin/v1/invoice-payment/hospitality/{code}/evidences:
    post:
      tags:
      - Invoice Payment Hospitality Admin Api V 1
      summary: Add payment proof Hospitality.
      description: Add payment proof Hospitality.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/admin/v1/invoice-payment/hospitality/{code}/invoice:
    get:
      tags:
      - Invoice Payment Hospitality Admin Api V 1
      summary: get InvoicePayment Hospitality by Invoice code .
      description: get InvoicePayment Hospitality by Invoice code .
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentHospitality'
  /api/admin/v1/invoice-payment/property:
    get:
      tags:
      - Invoice Payment Property Admin Api V 1
      summary: List InvoicePayment Property.
      description: List InvoicePayment Property.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentProperty'
    post:
      tags:
      - Invoice Payment Property Admin Api V 1
      summary: Create Invoice Payment Property.
      description: Create Invoice Payment Property.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentProperty'
  /api/admin/v1/invoice-payment/property/{code}:
    get:
      tags:
      - Invoice Payment Property Admin Api V 1
      summary: get InvoicePayment Property by code .
      description: get InvoicePayment Property by code .
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentProperty'
  /api/admin/v1/invoice-payment/property/{code}/evidences:
    post:
      tags:
      - Invoice Payment Property Admin Api V 1
      summary: Add payment proof Property.
      description: Add payment proof Property.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/admin/v1/invoice-payment/property/{code}/invoice:
    get:
      tags:
      - Invoice Payment Property Admin Api V 1
      summary: get InvoicePayment Property by Invoice code .
      description: get InvoicePayment Property by Invoice code .
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentProperty'
  /api/admin/v1/invoice/loan-history:
    post:
      tags:
      - Invoice Property Admin Api V 1
      summary: Get Loan History
      description: Get Loan History
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceLoanRemaining'
  /api/admin/v1/invoice/loan-history-date:
    post:
      tags:
      - Invoice Property Admin Api V 1
      summary: Loan History specific date
      description: Loan History specific date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceLoanRemaining'
  /api/admin/v1/invoice/modular:
    get:
      tags:
      - Invoice Modular Admin Api V 1
      summary: List Invoice modular.
      description: List Invoice modular.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceModular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/invoice/modular/{invoiceCode}:
    get:
      tags:
      - Invoice Modular Admin Api V 1
      summary: Get a Property detail
      description: Get a Property detail.
      parameters:
      - name: invoiceCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceModular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Invoice Modular Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/invoice/non-room:
    get:
      tags:
      - Invoice Non Room Admin Api V 1
      summary: List Invoice Non Room pagination.
      description: List Invoice Non Room pagination.
      parameters:
      - name: pageNumber
        in: query
        schema:
          format: int32
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Invoice Non Room Admin Api V 1
      summary: Create Invoice Customer Non Room.
      description: Create Invoice Customer Non Room.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceNonRoom'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Invoice Non Room Code Not Found, \n\n\
            EOI is not eligible to hava an invoice, or\n\n Invoice already exist."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/invoice/non-room/{code}:
    get:
      tags:
      - Invoice Non Room Admin Api V 1
      summary: Get a Non Room detail
      description: Get a Non Room detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Invoice Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/invoice/non-room/{code}/project:
    get:
      tags:
      - Invoice Non Room Admin Api V 1
      summary: Get list invoice non room by invoice non room code
      description: Get list invoice non room by invoice non room code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Invoice Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/invoice/properties:
    get:
      tags:
      - Invoice Property Admin Api V 1
      summary: List Invoice property.
      description: List Invoice property.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceProperty'
    post:
      tags:
      - Invoice Property Admin Api V 1
      summary: Create Invoice Customer Room.
      description: Create Invoice Customer Room.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProperty'
  /api/admin/v1/invoice/properties/loan:
    get:
      tags:
      - Invoice Property Admin Api V 1
      summary: List Loan Invoice property.
      description: List Loan Invoice property.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanInvoicePropertyResponse'
  /api/admin/v1/invoice/properties/pagination:
    get:
      tags:
      - Invoice Property Admin Api V 1
      summary: List Invoice property pagination.
      description: List Invoice property pagination.
      parameters:
      - name: pageNumber
        in: query
        schema:
          format: int32
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
  /api/admin/v1/invoice/property/{invoiceCode}:
    get:
      tags:
      - Invoice Property Admin Api V 1
      summary: Get a Property detail
      description: Get a Property detail.
      parameters:
      - name: invoiceCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProperty'
  /api/admin/v1/invoice/{propertyCode}/property:
    get:
      tags:
      - Invoice Property Admin Api V 1
      summary: Get invoice property by property code
      description: Get invoice property by property code.
      parameters:
      - name: propertyCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProperty'
  /api/admin/v1/kyc:
    get:
      tags:
      - Kyc Admin Api V 1
      summary: List customers foreigner
      description: List customers. foreigner
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Kyc Admin Api V 1
      summary: Update KYC customer
      description: "Update KYC customer, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Kyc Admin Api V 1
      summary: Put a customer detail approval Kyc
      description: Put a customer detail.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KycApprovalRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Status should be either 'REJECTED' or\
            \ 'COMPLETED', Face Comparison Status or Xendit KYC Status should be 'COMPLETED'."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/kyc/resubmit:
    get:
      tags:
      - Kyc Admin Api V 1
      summary: List customers KYC failed or rejected
      description: List customers KYC failed or rejected.
      parameters:
      - name: name
        in: query
        schema:
          default: ""
          type: string
      - name: pageNumber
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 10
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/kyc/{code}:
    get:
      tags:
      - Kyc Admin Api V 1
      summary: Get kyc customer detail
      description: Get kyc customer detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/loan/callback:
    post:
      tags:
      - Loan Admin V 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApproval'
      security:
      - jwt: []
  /api/admin/v1/loan/invoice-interest:
    post:
      tags:
      - Loan Admin V 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentBessRequest'
        required: true
      responses:
        "201":
          description: Created
      security:
      - jwt: []
  /api/admin/v1/loan/invoice-interest-callback:
    post:
      tags:
      - Loan Admin V 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentBessRequest'
        required: true
      responses:
        "201":
          description: Created
      security:
      - jwt: []
  /api/admin/v1/media-cnf:
    get:
      tags:
      - Media Cnf Admin Api V 1
      summary: Get Media Service Protection url
      description: Get Media Service Protection url
      parameters:
      - name: url
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/admin/v1/media-cnf/{accountCode}/documents:
    post:
      tags:
      - Media Cnf Admin Api V 1
      summary: Post Media Service Protection url
      description: Post Media Service Protection url
      parameters:
      - name: accountCode
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/admin/v1/menu-authorities:
    get:
      tags:
      - Menu Authority Admin Api V 1
      summary: List menu authorities
      description: List menu authorities.
      parameters:
      - name: companyCode
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuAuthority'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Menu Authority Admin Api V 1
      summary: Put menu authorities
      description: Put menu authorities.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MenuAuthority'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuAuthority'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found or Menu Authority\
            \ Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Menu Authority Admin Api V 1
      summary: Add menu authorities
      description: Add menu authorities.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MenuAuthority'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuAuthority'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Modular Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Menu Authority Admin Api V 1
      summary: Delete menu authorities
      description: Delete menu authorities.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MenuAuthority'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/modulars:
    get:
      tags:
      - Modular Admin Api V 1
      summary: List Modulars
      description: List Modulars.
      parameters:
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Modular Admin Api V 1
      summary: Update Modular
      description: "Update Modular, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modular'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found or Modular Code\
            \ Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Modular Admin Api V 1
      summary: Add Modular
      description: Add Modular with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modular'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Modular Admin Api V 1
      summary: Delete Modular
      description: Delete Modular.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modular'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/modulars/{code}:
    get:
      tags:
      - Modular Admin Api V 1
      summary: Get an Variant Modular detail
      description: Get an Variant Modular detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Modular Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/modulars/{code}/videos:
    post:
      tags:
      - Modular Admin Api V 1
      summary: Add a video to a Modular
      description: Add a video to a Modular.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/non-room:
    get:
      tags:
      - Non Room Admin Api V 1
      summary: List Non Room
      description: List Non Room.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Non Room Admin Api V 1
      summary: Update Non Room
      description: "Update Non Room, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonRoom'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found or Non Room Code\
            \ Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Non Room Admin Api V 1
      summary: Add Non Room
      description: Add Non Room with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonRoom'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Non Room Admin Api V 1
      summary: Delete Non Room
      description: Delete Non Room.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NonRoom'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/non-room/yoda:
    get:
      tags:
      - Non Room Admin Api V 1
      summary: Get an item category list from yoda
      description: Get an item category list from yoda.
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/non-room/{code}/detail:
    get:
      tags:
      - Non Room Admin Api V 1
      summary: Get a Non Room detail
      description: Get a Non Room detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/non-room/{code}/medias:
    post:
      tags:
      - Non Room Admin Api V 1
      summary: Add a media to a Non Room
      description: Add a media to a Non Room.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/notifications:
    get:
      tags:
      - Notification Admin Api V 1
      summary: List notifications by staff
      description: List notifications by staff.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponseStaff'
  /api/admin/v1/notifications/{code}:
    get:
      tags:
      - Notification Admin Api V 1
      summary: Get a notification detail
      description: Get a notification detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStaff'
  /api/admin/v1/notifications/{code}/read:
    post:
      tags:
      - Notification Admin Api V 1
      summary: Notification read by staff
      description: Notification read by staff.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created
  /api/admin/v1/pay-loan:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List Pay Loan
      description: List Pay Loan.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayLoan'
      deprecated: true
    post:
      tags:
      - Pay Loan Admin Api V 1
      summary: Add pay loan
      description: Add pay loan with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayLoan'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayLoan'
      deprecated: true
      security:
      - jwt: []
  /api/admin/v1/pay-loan/approved:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List Pay Loan Approved
      description: List Pay Loan Approved.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayLoan'
      deprecated: true
  /api/admin/v1/pay-loan/customer:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List Customer Loan
      description: List Customer Loan.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
      deprecated: true
  /api/admin/v1/pay-loan/interest/{code}:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List shared code and total loan interest
      description: List shared code and total loan interest.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionLoanInterestResponse'
      deprecated: true
  /api/admin/v1/pay-loan/loan-interest:
    post:
      tags:
      - Pay Loan Admin Api V 1
      summary: Add pay loan interest
      description: Add pay loan interest with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayLoan'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayLoan'
      deprecated: true
      security:
      - jwt: []
  /api/admin/v1/pay-loan/payment/{code}:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List invoice code and total loan
      description: List invoice code and total loan.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionLoanResponse'
      deprecated: true
      security:
      - jwt: []
  /api/admin/v1/pay-loan/pending:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List Pay Loan Pending
      description: List Pay Loan Pending.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayLoan'
      deprecated: true
  /api/admin/v1/pay-loan/property/{code}:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: List pay loan property
      description: List pay loan property.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayLoanResponse'
      deprecated: true
  /api/admin/v1/pay-loan/{code}:
    get:
      tags:
      - Pay Loan Admin Api V 1
      summary: Get a pay loan detail
      description: Get a pay loan detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayLoan'
      deprecated: true
  /api/admin/v1/pay-loan/{code}/approval:
    post:
      tags:
      - Pay Loan Admin Api V 1
      summary: Approval for pay loan
      description: Approval for pay loan
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayLoan'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayLoan'
      deprecated: true
      security:
      - jwt: []
  /api/admin/v1/pay-loan/{code}/evidence:
    post:
      tags:
      - Pay Loan Admin Api V 1
      summary: Add evidence of pay loan
      description: Add evidence of pay loan.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
      deprecated: true
      security:
      - jwt: []
  /api/admin/v1/promo-budgeting:
    get:
      tags:
      - Promo Budgeting Admin Api V 1
      summary: List Promo Budgeting
      description: List Promo Budgeting.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromoBudgeting'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Promo Budgeting Admin Api V 1
      summary: Add Promo Budgeting
      description: Add Promo Budgeting with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoBudgeting'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoBudgeting'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Staff Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promo-budgeting/{code}:
    get:
      tags:
      - Promo Budgeting Admin Api V 1
      summary: Get a Promo Budgeting detail
      description: Get a Promo Budgeting detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoBudgeting'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Promo Budgeting Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promo-budgeting/{code}/history:
    get:
      tags:
      - Promo Budgeting Admin Api V 1
      summary: Get list Promo Budgeting History
      description: Get list Promo Budgeting History.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromoBudgetingHistory'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promo-budgeting/{code}/staff:
    get:
      tags:
      - Promo Budgeting Admin Api V 1
      summary: Get a Promo Budgeting detail by Staff Code
      description: Get a Promo Budgeting detail by Staff Code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoBudgeting'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promo-program:
    get:
      tags:
      - Promo Program Admin Api V 1
      summary: List Promo Program
      description: List Promo Program.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromoProgram'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Promo Program Admin Api V 1
      summary: Update Promo Program
      description: "Update Promo Program, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PromoProgram'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromoProgram'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Promo Program Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Promo Program Admin Api V 1
      summary: Add Promo Program
      description: Add Promo Program with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PromoProgram'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PromoProgram'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Promo Program Admin Api V 1
      summary: Delete Promo Program
      description: Delete Promo Program.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PromoProgram'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promo-program/{code}:
    get:
      tags:
      - Promo Program Admin Api V 1
      summary: Get a Promo Program detail
      description: Get a Promo Program detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoProgram'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Promo Program Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promotions:
    get:
      tags:
      - Promotion Admin Api V 1
      summary: List Promotions
      description: List Promotions.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Promotion Admin Api V 1
      summary: Update Promotions
      description: "Update Promotions, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionVoucherRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: It could be Cannot update the data during\
            \ an ongoing promotional period, Cannot update the data because this promotion/voucher\
            \ has expired, Amount for promotion exceeds the nominal budget, Promotion\
            \ Code Not Found, Promo Program Code Not Found or Promo Budgeting Code\
            \ Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Promotion Admin Api V 1
      summary: Add Promotions
      description: Add Promotions with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionVoucherRequest'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Promo Program Code Not Found or Promo\
            \ Budgeting Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promotions/{code}:
    get:
      tags:
      - Promotion Admin Api V 1
      summary: Get a Promotions detail
      description: Get a Promotions detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Promotion Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promotions/{code}/deactive:
    put:
      tags:
      - Promotion Admin Api V 1
      summary: Deactivate Promotions
      description: Deactivate Promotions.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Promotion Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/promotions/{code}/staff:
    get:
      tags:
      - Promotion Admin Api V 1
      summary: Get list Promotions by Staff Code
      description: Get list Promotions by Staff Code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/properties:
    get:
      tags:
      - Property Admin Api V 1
      summary: List properties
      description: List properties.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Property Admin Api V 1
      summary: Update properties
      description: "Update properties, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Property'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Corporation Code Not Found, Company\
            \ Code Not Found or Property Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Property Admin Api V 1
      summary: Add properties
      description: Add properties with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Property'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Corporation Code Not Found or Company\
            \ Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Property Admin Api V 1
      summary: Delete properties
      description: Delete properties.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Property'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/properties/yoda:
    get:
      tags:
      - Property Admin Api V 1
      summary: Get list room from yoda
      description: Get list room from yoda.
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/properties/{code}/detail:
    get:
      tags:
      - Property Admin Api V 1
      summary: Get a property detail
      description: Get a property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Property Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/properties/{code}/medias:
    post:
      tags:
      - Property Admin Api V 1
      summary: Add a media to a property
      description: Add a media to a property.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Property Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/rdf-customers:
    get:
      tags:
      - Rdf Api V 1
      summary: List customers
      description: List customers.
      parameters:
      - name: name
        in: query
        schema:
          default: ""
          type: string
      - name: pageNumber
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 10
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Rdf Api V 1
      summary: Update RDF customer
      description: "Update RDF customer, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Error creating rdf for customer or User\
            \ Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/rdf-customers/support:
    get:
      tags:
      - Rdf Api V 1
      summary: Support data for RDF account creation
      description: List support data for RDF account creation. The data is fetched
        from `Info` with code `RSD_*`.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RdfSupportResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenue/non-room:
    get:
      tags:
      - Revenue Non Room Admin Api V 1
      summary: List Revenue Non Room
      description: List Revenue Non Room.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Revenue Non Room Admin Api V 1
      summary: Update Revenue Non Room
      description: "Update Revenue Non Room, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevenueNonRoom'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Invoice Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Revenue Non Room Admin Api V 1
      summary: Add Revenue Non Room
      description: Add Revenue Non Room with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevenueNonRoom'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue date already exist in database\
            \ or Invoice Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/revenue/non-room/monthly:
    post:
      tags:
      - Revenue Non Room Monthly Admin Api V 1
      summary: Add dividend Non Room Monthly and send amount to wallet and wallet
        loan
      description: Add dividend Non Room Monthly and send amount to wallet and wallet
        loan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevenueNonRoomMonthly'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueNonRoomMonthly'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: It could be Revenue Non Room Daily data\
            \ doesn't exist, Revenue Non Room Daily hasn't completed a full month,\
            \ or Revenue Non Room Monthly already exist and paid."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenue/non-room/monthly/{code}:
    get:
      tags:
      - Revenue Non Room Monthly Admin Api V 1
      summary: List dividend monthly by Invoice Non Room code
      description: List dividend monthly by Invoice Non Room code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueNonRoomMonthly'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenue/non-room/{code}:
    get:
      tags:
      - Revenue Non Room Admin Api V 1
      summary: Get a Revenue Non Room detail
      description: Get a Revenue Non Room detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueNonRoom'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue Non Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Revenue Non Room Admin Api V 1
      summary: Delete Revenue Non Room
      description: Delete Revenue Non Room.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/revenue/non-room/{code}/projects:
    get:
      tags:
      - Revenue Non Room Admin Api V 1
      summary: List Revenue Non Room by Non Room code pagination
      description: List Revenue Non Room by Non Room code pagination.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: date
        in: query
        schema:
          type: string
      - name: pageNumber
        in: query
        schema:
          format: int32
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          type: integer
      - name: status
        in: query
        schema:
          $ref: '#/components/schemas/DividendPropertyStatus'
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/revenue/property:
    get:
      tags:
      - Revenue Property Admin Api V 1
      summary: List dividend Property
      description: List dividend Property.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DividendProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Revenue Property Admin Api V 1
      summary: Update dividend Property
      description: "Update dividend Property, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DividendProperty'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DividendProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue date already exist in database,\
            \ The provided status (CANCEL or SUCCESS) is not allowed for this operation\
            \ or Invoice Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Revenue Property Admin Api V 1
      summary: Add dividend Property
      description: Add dividend Property with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DividendProperty'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DividendProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue date already exist in database,\
            \ The provided status (CANCEL or SUCCESS) is not allowed for this operation\
            \ or Invoice Room Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Revenue Property Admin Api V 1
      summary: Delete dividend Property
      description: Delete dividend Property.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DividendProperty'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenue/property/download/{code}:
    get:
      tags:
      - Revenue Property Admin Api V 1
      summary: Download template excel dividend Property by customer code
      description: Download template excel dividend Property by customer code
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - jwt: []
  /api/admin/v1/revenue/property/upload:
    post:
      tags:
      - Revenue Property Admin Api V 1
      summary: Upload template excel dividend Property
      description: Upload template excel dividend Property
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
      security:
      - jwt: []
  /api/admin/v1/revenue/property/{code}:
    get:
      tags:
      - Revenue Property Admin Api V 1
      summary: Get a dividend Property detail
      description: Get a dividend Property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DividendProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue Property Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenue/property/{code}/projects:
    get:
      tags:
      - Revenue Property Admin Api V 1
      summary: List dividend by Property code
      description: List dividend by Property code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DividendProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenue/property/{code}/projects/pagination:
    get:
      tags:
      - Revenue Property Admin Api V 1
      summary: List dividend by Property code pagination
      description: List dividend by Property code pagination.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: date
        in: query
        schema:
          type: string
      - name: pageNumber
        in: query
        schema:
          format: int32
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          type: integer
      - name: status
        in: query
        schema:
          $ref: '#/components/schemas/DividendPropertyStatus'
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/revenues:
    get:
      tags:
      - Revenue Admin Api V 1
      summary: List Revenues
      description: List Revenues.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Revenue'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Revenue Admin Api V 1
      summary: Update Revenue
      description: "Update Revenue, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revenue'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue Code Not Found or Company Code\
            \ Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Revenue Admin Api V 1
      summary: Add Revenue
      description: Add Revenue with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revenue'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Revenue Admin Api V 1
      summary: Delete Revenues
      description: Delete Revenues.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Revenue'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/revenues/{code}/detail:
    get:
      tags:
      - Revenue Admin Api V 1
      summary: Get a Revenue detail
      description: Get a Revenue detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Revenue Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/role-company:
    get:
      tags:
      - Role Company Admin Api V 1
      summary: List Role Company
      description: List Role Company
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      - name: pageNumber
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Account Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Role Company Admin Api V 1
      summary: Update for Role Company
      description: "Update for Role Company, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCompany'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCompany'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Role Company Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Role Company Admin Api V 1
      summary: Add for Role Company
      description: Add for Role Company with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCompany'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCompany'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Role Code or Company Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Role Company Admin Api V 1
      summary: Delete Role Company
      description: Delete Role Company.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RoleCompany'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/role-company/{code}:
    get:
      tags:
      - Role Company Admin Api V 1
      summary: Get a Role Company
      description: Get a Role Company.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCompany'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Role Company Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/roles:
    get:
      tags:
      - Role Admin Api V 1
      summary: List roles
      description: List roles.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Role Admin Api V 1
      summary: Update roles
      description: "Update roles, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Role Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Role Admin Api V 1
      summary: Add roles
      description: Add roles with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Customer Account Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Role Admin Api V 1
      summary: Delete roles
      description: Delete roles.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/roles/{code}:
    get:
      tags:
      - Role Admin Api V 1
      summary: Get a role detail
      description: Get a role detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Role Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/screener-property:
    post:
      tags:
      - Screener Property Admin Api V 1
      summary: Add a screener
      description: Add a screener with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenerProperty'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenerProperty'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/specification/medias:
    post:
      tags:
      - Specification Property Admin Api V 1
      summary: Add a media to a specification
      description: Add a media to a specification.
      parameters:
      - name: index
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/staff-company:
    get:
      tags:
      - Staff Company Admin Api V 1
      summary: List Staff Company
      description: List Staff Company
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      - name: pageNumber
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 10
          type: integer
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Staff Company Admin Api V 1
      summary: Update Staff Company
      description: "Update Staff Company, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCompany'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCompany'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Staff Company Code or Company Code Not\
            \ Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Staff Company Admin Api V 1
      summary: Add Staff Company
      description: Add Staff Company with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCompany'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCompany'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: It could be Staff Already Exist, Failed\
            \ to create an account on Firebase, or Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Staff Company Admin Api V 1
      summary: Delete Staff Company
      description: Delete Staff Company.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StaffCompany'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/staff-company/{code}:
    get:
      tags:
      - Staff Company Admin Api V 1
      summary: Get a Staff Company detail
      description: Get a Staff Company detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCompany'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Staff Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/staffs:
    get:
      tags:
      - Staff Admin Api V 1
      summary: List staffs
      description: List staffs.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Staff Admin Api V 1
      summary: Update staffs
      description: "Update staffs, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Staff'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    post:
      tags:
      - Staff Admin Api V 1
      summary: Add staffs
      description: Add staffs with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Staff'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: It could be Staff Code Not Found or\
            \ Failed to create an account on Firebase."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    delete:
      tags:
      - Staff Admin Api V 1
      summary: Delete staffs
      description: Delete staffs.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Staff'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/staffs/{code}:
    get:
      tags:
      - Staff Admin Api V 1
      summary: Get a staff detail
      description: Get a staff detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Staff Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/travel-agencies:
    get:
      tags:
      - Online Travel Agency Admin Api V 1
      summary: List online travel agencies
      description: List online travel agencies.
      parameters:
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnlineTravelAgency'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
    put:
      tags:
      - Online Travel Agency Admin Api V 1
      summary: Update online travel agencies
      description: "Update online travel agencies, overwriting all attributes except\
        \ `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OnlineTravelAgency'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnlineTravelAgency'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Online Travel Agency Code or Company\
            \ Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Online Travel Agency Admin Api V 1
      summary: Add online travel agencies
      description: Add online travel agencies with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OnlineTravelAgency'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnlineTravelAgency'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Online Travel Agency Admin Api V 1
      summary: Delete online travel agencies
      description: Delete online travel agencies.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OnlineTravelAgency'
        required: true
      responses:
        "204":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/travel-agencies/{code}:
    get:
      tags:
      - Online Travel Agency Admin Api V 1
      summary: Get an online travel agency detail
      description: Get an online travel agency detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlineTravelAgency'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Online Travel Agency Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/travel-agencies/{code}/image:
    post:
      tags:
      - Online Travel Agency Admin Api V 1
      summary: Add an image to a online travel agencies
      description: Add an image to a online travel agencies.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Online Travel Agency Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/updates-property:
    get:
      tags:
      - Project Monthly Update Property Admin Api V 1
      summary: List project monthly update for property
      description: List project monthly update for property.
      parameters:
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
      deprecated: true
    put:
      tags:
      - Project Monthly Update Property Admin Api V 1
      summary: Update project monthly update property
      description: "Update project monthly update property, overwriting all attributes\
        \ except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
      deprecated: true
    post:
      tags:
      - Project Monthly Update Property Admin Api V 1
      summary: Add project monthly update property
      description: Add project monthly update property with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
      deprecated: true
    delete:
      tags:
      - Project Monthly Update Property Admin Api V 1
      summary: Delete project monthly update property
      description: Delete project monthly update property.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
        required: true
      responses:
        "204":
          description: No Content
      deprecated: true
  /api/admin/v1/updates-property/{code}:
    get:
      tags:
      - Project Monthly Update Property Admin Api V 1
      summary: Get a project monthly update property detail
      description: Get a project monthly property update detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
      deprecated: true
  /api/admin/v1/updates-property/{code}/projects:
    get:
      tags:
      - Project Monthly Update Property Admin Api V 1
      summary: List project monthly update by Property code
      description: List project monthly update by Property code.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
      deprecated: true
  /api/admin/v1/variant-modular:
    get:
      tags:
      - Variant Modular Admin Api V 1
      summary: List Variant Modulars
      description: List Variant Modulars.
      parameters:
      - name: companyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantModular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Variant Modular Admin Api V 1
      summary: Update Variant Modular
      description: "Update Variant Modular, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VariantModular'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantModular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Variant Modular Admin Api V 1
      summary: Add Variant Modular
      description: Add Variant Modular with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VariantModular'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantModular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Company Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Variant Modular Admin Api V 1
      summary: Delete Variant Modular
      description: Delete Variant Modular.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VariantModular'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/variant-modular/{code}:
    get:
      tags:
      - Variant Modular Admin Api V 1
      summary: Get an Variant Modular detail
      description: Get an Variant Modular detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: companyCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantModular'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Variant Modular Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/verify/email:
    post:
      tags:
      - Verify Admin Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "200":
          description: OK
  /api/admin/v1/verify/pin/email:
    post:
      tags:
      - Verify Admin Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                pin:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/admin/v1/vouchers:
    get:
      tags:
      - Voucher Admin Api V 1
      summary: List Voucher
      description: List Voucher.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/vouchers/{code}:
    get:
      tags:
      - Voucher Admin Api V 1
      summary: Get a Voucher detail
      description: Get a Voucher detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/wallet:
    get:
      tags:
      - Wallet Api V 1
      summary: List of Wallet
      description: List of Wallet
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Wallet Api V 1
      summary: Update Wallet
      description: Update Wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Wallet Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Wallet Api V 1
      summary: Add Wallet
      description: Add Wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/wallet/top-ups:
    get:
      tags:
      - Wallet Api V 1
      summary: List request top up wallet for a Foreigner or wallet manual kind
      description: List request wallet.Kind is manual and walletTx.status is Pending
        need approve
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTxAdminResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
  /api/admin/v1/wallet/top-ups/{code}:
    get:
      tags:
      - Wallet Api V 1
      summary: Get a top up request detail
      description: Get a top up request detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTx'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Wallet Transaction Top Up Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/wallet/top-ups/{code}/approval:
    post:
      tags:
      - Wallet Api V 1
      summary: Approval for a request top up
      description: Approval for a request top up
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletTx'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTx'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: |-
            Unprocessable Entity: Wallet Transaction Kind should be 'TOP_UP',

            Wallet Kind should be 'MANUAL', or

            Wallet Status shouldn't be 'REJECTED' or 'SUCCESSFUL'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/wallet/withdrawals:
    get:
      tags:
      - Wallet Api V 1
      summary: List request withdraw request
      description: List request withdraw request
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTxAdminResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/wallet/withdrawals/{code}:
    get:
      tags:
      - Wallet Api V 1
      summary: Get a withdraw request detail
      description: Get a withdraw request detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTx'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Wallet Transaction Withdrawal Code Not\
            \ Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/wallet/withdrawals/{code}/approval:
    post:
      tags:
      - Wallet Api V 1
      summary: Approval for a request withdraw
      description: Approval for a request withdraw
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletTx'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTx'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Wallet Transaction Kind should be 'WITHDRAWAL'\
            \ or Wallet Status shouldn't be 'REJECTED' or 'SUCCESSFUL'."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/wallet/{code}:
    get:
      tags:
      - Wallet Api V 1
      summary: Detail of Wallet
      description: Detail of Wallet
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Wallet Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/withdrawal-banks:
    get:
      tags:
      - Withdrawal Bank Admin Api V 1
      summary: List banks
      description: List banks.
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WithdrawalBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    put:
      tags:
      - Withdrawal Bank Admin Api V 1
      summary: Update banks
      description: "Update banks, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WithdrawalBank'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WithdrawalBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Bank Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    post:
      tags:
      - Withdrawal Bank Admin Api V 1
      summary: Add banks
      description: Add banks.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WithdrawalBank'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WithdrawalBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
    delete:
      tags:
      - Withdrawal Bank Admin Api V 1
      summary: Delete banks
      description: Delete banks.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WithdrawalBank'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/withdrawal-banks/{code}:
    get:
      tags:
      - Withdrawal Bank Admin Api V 1
      summary: Get a bank detail
      description: Get a bank detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalBank'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Bank Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/withdrawal-banks/{code}/logo:
    post:
      tags:
      - Withdrawal Bank Admin Api V 1
      summary: Add a logo to a bank
      description: Add a logo to a bank.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: Expected response if request successfully processed.
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "422":
          description: "Unprocessable Entity: Bank Code Not Found."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/admin/v1/youtrack/issue:
    get:
      tags:
      - You Track Api V 1
      summary: List issue
      description: List issue youtrack.
      parameters:
      - name: project
        in: query
        schema:
          default: ""
          type: string
      - name: type
        in: query
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: Expected response if request successfully processed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/YouTrackIssueResponse'
        "403":
          description: "Forbidden Access: You do not have permission to access this\
            \ URL."
        "500":
          description: The server encountered an internal error and was unable to
            complete your request.
      security:
      - jwt: []
  /api/client/v1/eoi-hospitalities:
    get:
      tags:
      - Eoi Hospitality Client Api V 1
      summary: List EOI hospitalities
      description: List EOI hospitalities.
      parameters:
      - name: status
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PanacheEntityBase'
      deprecated: true
    post:
      tags:
      - Eoi Hospitality Client Api V 1
      summary: Change status EOI hospitality
      description: Change status EOI hospitality with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiNonRoom'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiNonRoom'
      deprecated: true
  /api/client/v1/eoi-hospitalities/{code}:
    get:
      tags:
      - Eoi Hospitality Client Api V 1
      summary: Get an EOI hospitality detail
      description: Get an EOI hospitality detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiNonRoom'
      deprecated: true
  /api/client/v1/eoi-properties:
    get:
      tags:
      - Eoi Property Client Api V 1
      summary: List EOI properties
      description: List EOI properties.
      parameters:
      - name: status
        in: query
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PanacheEntityBase'
      deprecated: true
    post:
      tags:
      - Eoi Property Client Api V 1
      summary: Change status EOI property
      description: Change status EOI property with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiProperty'
      deprecated: true
  /api/client/v1/eoi-properties/{code}:
    get:
      tags:
      - Eoi Property Client Api V 1
      summary: Get an EOI property detail
      description: Get an EOI property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EoiProperty'
      deprecated: true
  /api/client/v1/hospitalities:
    post:
      tags:
      - Hospitality Client V 1
      summary: Update and add hospitalities
      description: "Update and add hospitalities, overwriting all attributes except\
        \ `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NonRoom'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NonRoom'
      deprecated: true
  /api/client/v1/invoice-hospitalities:
    get:
      tags:
      - Invoice Hospitality Client Api V 1
      summary: List invoices hospitality
      description: List invoices hospitality.
      parameters:
      - name: pageNumber
        in: query
        schema:
          format: int32
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
      deprecated: true
    post:
      tags:
      - Invoice Hospitality Client Api V 1
      summary: Create invoice hospitality
      description: Create invoice hospitality with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceNonRoom'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNonRoom'
      deprecated: true
  /api/client/v1/invoice-hospitalities/{code}:
    get:
      tags:
      - Invoice Hospitality Client Api V 1
      summary: Get an invoice hospitality detail
      description: Get an invoice hospitality detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNonRoom'
      deprecated: true
  /api/client/v1/invoice-properties:
    get:
      tags:
      - Invoice Property Client Api V 1
      summary: List invoices property
      description: List invoices property.
      parameters:
      - name: pageNumber
        in: query
        schema:
          format: int32
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePagination'
      deprecated: true
    post:
      tags:
      - Invoice Property Client Api V 1
      summary: Create invoice property
      description: Create invoice property with system-generated `code`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProperty'
      deprecated: true
  /api/client/v1/invoice-properties/{code}:
    get:
      tags:
      - Invoice Property Client Api V 1
      summary: Get an invoice property detail
      description: Get an invoice property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceProperty'
      deprecated: true
  /api/client/v1/properties:
    post:
      tags:
      - Property Client V 1
      summary: Update and add properties
      description: "Update and add properties, overwriting all attributes except `code`."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Property'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
      deprecated: true
  /api/v1/academy:
    get:
      tags:
      - Academy Api V 1
      summary: List academy
      description: List academy.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Academy'
  /api/v1/academy/{code}:
    get:
      tags:
      - Academy Api V 1
      summary: Get a Modular detail
      description: Get a Modular detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Academy'
  /api/v1/announcements:
    get:
      tags:
      - Announcement Api V 1
      summary: List announcements for customer
      description: List announcements for customer.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
  /api/v1/assets:
    get:
      tags:
      - Assets Api V 1
      summary: List Assets
      description: List Assets.
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetsListResponse'
  /api/v1/assets/non-room/{code}:
    get:
      tags:
      - Assets Api V 1
      summary: Get a Non Room detail
      description: Get a Non Room detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsNonRoomDetailResponse'
  /api/v1/assets/room/{code}:
    get:
      tags:
      - Assets Api V 1
      summary: Get a Room detail
      description: Get a Room detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsRoomDetailResponse'
  /api/v1/assets/{code}:
    get:
      tags:
      - Assets Api V 1
      summary: Get an Assets detail
      description: Get an Assets detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsDetailResponse'
  /api/v1/auth:
    delete:
      tags:
      - Auth Api V 1
      responses:
        "204":
          description: No Content
  /api/v1/auth/change/email:
    post:
      tags:
      - Auth Api V 1
      summary: Change Email
      description: Change Email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "201":
          description: Created
  /api/v1/auth/check:
    post:
      tags:
      - Auth Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "200":
          description: OK
  /api/v1/auth/check/{field}/login:
    get:
      tags:
      - Check Api V 1
      summary: Check if login exist
      description: Check if login exist
      parameters:
      - name: field
        in: path
        required: true
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
      deprecated: true
  /api/v1/auth/check/{field}/register:
    get:
      tags:
      - Check Api V 1
      summary: Check if register exist
      description: Check if register exist
      parameters:
      - name: field
        in: path
        required: true
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
      deprecated: true
  /api/v1/auth/check/{field}/verify:
    get:
      tags:
      - Check Api V 1
      summary: Check in verify
      description: Check if verify
      parameters:
      - name: field
        in: path
        required: true
        schema:
          default: ""
          type: string
      - name: locale
        in: query
        schema:
          default: id
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
  /api/v1/auth/firebase:
    post:
      tags:
      - Auth Api V 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                country:
                  type: string
                locale:
                  type: string
                timezone:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse_Simple_Nats'
  /api/v1/auth/forgot/password:
    post:
      tags:
      - Auth Api V 1
      summary: Forgot Password.
      description: Forgot Password.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "201":
          description: Created
  /api/v1/auth/forgot/password/email/pin:
    post:
      tags:
      - Auth Api V 1
      summary: Verify for request reset password email.
      description: Verify for request reset password email.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                pin:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/auth/forgot/password/mobile/pin:
    post:
      tags:
      - Auth Api V 1
      summary: Verify token for customer mobile
      description: Will call Firebase to confirm that mobile number is verified.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/auth/info:
    get:
      tags:
      - Auth Api V 1
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse_Simple_Nats'
  /api/v1/auth/mock:
    post:
      tags:
      - Auth Api V 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                country:
                  type: string
                locale:
                  type: string
                timezone:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse_Simple_Nats'
  /api/v1/auth/refresh-token:
    get:
      tags:
      - Auth Api V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/auth/reset/password:
    post:
      tags:
      - Auth Api V 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                password:
                  type: string
                token:
                  type: string
      responses:
        "201":
          description: Created
  /api/v1/auth/sync-firebase:
    post:
      tags:
      - Auth Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                code:
                  default: ""
                  type: string
                country:
                  type: string
                locale:
                  type: string
                timezone:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse_Simple_Nats'
  /api/v1/auth/verify/biometric:
    post:
      tags:
      - Auth Api V 1
      summary: Verify customer biometric
      description: Verify customer biometric.
      responses:
        "200":
          description: OK
  /api/v1/auth/verify/biometric/pin:
    post:
      tags:
      - Auth Api V 1
      summary: Verify PIN for customer activation biometric
      description: Verify PIN for customer activation biometric
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pin:
                  type: string
      responses:
        "200":
          description: OK
  /api/v1/auth/verify/email:
    post:
      tags:
      - Auth Api V 1
      summary: Verify customer email
      description: Verify customer email.
      responses:
        "201":
          description: Created
  /api/v1/auth/verify/email/pin:
    post:
      tags:
      - Auth Api V 1
      summary: Verify PIN for customer email
      description: Verify PIN for customer email.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pin:
                  type: string
      responses:
        "201":
          description: Created
  /api/v1/auth/verify/email/signup/pin:
    post:
      tags:
      - Auth Api V 1
      summary: Verify PIN for customer email signup
      description: Verify PIN for customer email signup
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                pin:
                  type: string
      responses:
        "200":
          description: OK
  /api/v1/auth/verify/kyc:
    post:
      tags:
      - Auth Api V 1
      summary: Verify Kyc
      description: Verify Kyc
      responses:
        "201":
          description: Created
  /api/v1/auth/verify/kyc/pin:
    post:
      tags:
      - Auth Api V 1
      summary: Verify KYC PIN for customer email
      description: Verify KYC PIN for customer email.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pin:
                  type: string
      responses:
        "201":
          description: Created
  /api/v1/auth/verify/mobile:
    post:
      tags:
      - Auth Api V 1
      summary: Verify token for customer mobile
      description: Will call Firebase to confirm that mobile number is verified.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "201":
          description: Created
  /api/v1/banks:
    post:
      tags:
      - Bank Api V 1
      summary: Add a bank account
      description: "Add a bank account. Returns the index of the created entity in\
        \ the list of bank accounts (it's called `code` and the type is string, but\
        \ internally it's used as a zero-based numerical index)."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBank'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
  /api/v1/banks/support:
    get:
      tags:
      - Bank Api V 1
      summary: Support data for bank accounts
      description: Support data for bank accounts.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankSupportResponse'
  /api/v1/banks/{code}:
    put:
      tags:
      - Bank Api V 1
      summary: Update a bank account
      description: Update a bank account. `code` is actually the index.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBank'
        required: true
      responses:
        "204":
          description: No Content
    delete:
      tags:
      - Bank Api V 1
      summary: Delete a bank account
      description: Delete a bank account. `code` is actually the index.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBank'
        required: true
      responses:
        "204":
          description: No Content
  /api/v1/customer-account/account:
    get:
      tags:
      - Customer Account Api V 1
      summary: Get the customer account
      description: Get the customer account
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericResponse'
  /api/v1/customer-account/account/set-priority:
    put:
      tags:
      - Customer Account Api V 1
      summary: Get the customer account
      description: Get the customer account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccount'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericResponse'
  /api/v1/dividend/properties:
    get:
      tags:
      - Dividend Property Api V 1
      summary: List portfolio dividend property
      description: List portfolio dividend property.
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
      deprecated: true
  /api/v1/dividend/properties/{invoiceCode}:
    get:
      tags:
      - Dividend Property Api V 1
      summary: List portfolio dividend property
      description: List portfolio dividend property.
      parameters:
      - name: invoiceCode
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDividendDetailResponse'
      deprecated: true
  /api/v1/due-diligence/{code}:
    get:
      tags:
      - Due Diligence Api V 1
      summary: Get due diligence detail
      description: Get due diligence detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DueDiligenceResponse'
  /api/v1/eoi/modulars:
    post:
      tags:
      - Eoi Modular Api V 1
      summary: Add a modular transaction
      description: "Add a modular transaction. In the app, this is the Enquire button."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EoiModularRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DueDiligence'
  /api/v1/fcm-guest:
    post:
      tags:
      - Guest Notification Api V 1
      summary: Add FCM token to guest
      description: Add FCM token to guest.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestFcms'
        required: true
      responses:
        "201":
          description: Created
  /api/v1/invoice-hospitality:
    get:
      tags:
      - Invoice Hospitality Api V 1
      summary: List invoice hospitality
      description: List invoice hospitality.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceNonRoom'
  /api/v1/invoice-hospitality/report/pdf:
    post:
      tags:
      - Invoice Hospitality Api V 1
      summary: Download PDF invoice hospitality.
      description: Download PDF invoice hospitality.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCodeRequest'
        required: true
      responses:
        "200":
          description: OK
  /api/v1/invoice-hospitality/{code}:
    get:
      tags:
      - Invoice Hospitality Api V 1
      summary: Get invoice hospitality transaction detail
      description: Get invoice hospitality transaction detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquityHospitalityResponse'
  /api/v1/invoice-property/report/pdf:
    post:
      tags:
      - Invoice Property Api V 1
      summary: Download PDF invoice property.
      description: Download PDF invoice property.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCodeRequest'
      responses:
        "200":
          description: OK
  /api/v1/invoice-property/{code}:
    get:
      tags:
      - Invoice Property Api V 1
      summary: Get invoice property transaction detail
      description: Get invoice property transaction detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquityPropertyResponse'
  /api/v1/invoice-property/{code}/asset:
    get:
      tags:
      - Invoice Property Api V 1
      summary: Get a portfolio Property detail
      description: Get a portfolio Property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDetailPropertyResponse'
  /api/v1/kyc/biometric-verification/callback:
    post:
      tags:
      - Kyc Api V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/kyc/biometric-verification/result:
    get:
      tags:
      - Kyc Api V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/kyc/face-comparison/callback:
    post:
      tags:
      - Kyc Api V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/kyc/ocr:
    post:
      tags:
      - Kyc Api V 1
      summary: Submit image to Xendit for OCR
      description: Submit KTP/passport image to Xendit for OCR.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/v1/kyc/ocr/callback:
    post:
      tags:
      - Kyc Api V 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrCallbackRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrCallbackRequest'
  /api/v1/kyc/ocr/result:
    get:
      tags:
      - Kyc Api V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/kyc/rdf-account/callback:
    post:
      tags:
      - Kyc Api V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/kyc/rdf-customer:
    post:
      tags:
      - Kyc Api V 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/kyc/rdf-customer/callback:
    post:
      tags:
      - Kyc Api V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/kyc/rdf-customer/result:
    get:
      tags:
      - Kyc Api V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/loan-application:
    post:
      tags:
      - Loan Application Api V 1
      summary: Add a Loan Application Data to screener propert table.
      description: Add a Loan Application Data to screener propert table.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenerProperty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenerProperty'
  /api/v1/me/avatar:
    post:
      tags:
      - Me Api V 1
      summary: Add profile picture
      description: Add profile picture.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/v1/me/fcms:
    post:
      tags:
      - Me Api V 1
      summary: Add FCM token to current customer
      description: Add FCM token to current customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fcm'
        required: true
      responses:
        "201":
          description: Created
  /api/v1/me/kyc/foreigner:
    put:
      tags:
      - Me Api V 1
      summary: Submit KYC data for current customer
      description: "Submit KYC data for current customer. The data goes to temporary\
        \ storage, and will be approved by admin using another API."
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/me/kyc/local:
    put:
      tags:
      - Me Api V 1
      summary: Submit KYC data for current customer
      description: "Submit KYC data for current customer. The data goes to temporary\
        \ storage, and will be approved by admin using another API."
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/me/privy:
    post:
      tags:
      - Me Api V 1
      summary: Submit KYC data for current customer
      description: "Submit KYC data for current customer. The data goes to temporary\
        \ storage, and will be approved by admin using another API."
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/me/selfie:
    put:
      tags:
      - Me Api V 1
      summary: Submit Selfie
      description: Update Selfie
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/me/updateLocale:
    put:
      tags:
      - Me Api V 1
      summary: Update Locale of Customer
      description: Update Locale of Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: OK
  /api/v1/me/{code}/deleted:
    post:
      tags:
      - Me Api V 1
      summary: Account deletion for customer
      description: Account deletion for customer.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "201":
          description: Created
  /api/v1/media-cnf:
    get:
      tags:
      - Media Cnf Api V 1
      summary: Get Media Service Protection url
      description: Get Media Service Protection url
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      - name: url
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/modulars:
    get:
      tags:
      - Modular Api V 1
      summary: List Modulars
      description: List Modulars.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModularResponse'
  /api/v1/modulars/{code}:
    get:
      tags:
      - Modular Api V 1
      summary: Get a Modular detail
      description: Get a Modular detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modular'
  /api/v1/notifications:
    get:
      tags:
      - Notification Api V 1
      summary: List notifications by customer
      description: List notifications by customer.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponseCustomer'
  /api/v1/notifications/{code}:
    get:
      tags:
      - Notification Api V 1
      summary: Get a notification detail
      description: Get a notification detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCustomer'
  /api/v1/notifications/{code}/read:
    post:
      tags:
      - Notification Api V 1
      summary: Notification read by customer
      description: Notification read by customer.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCustomer'
      responses:
        "201":
          description: Created
  /api/v1/overviews:
    get:
      tags:
      - Overview Api V 1
      summary: "Get total investment,total savings,total loans"
      description: "Get total investment,total savings,total loans"
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
  /api/v1/overviews/home:
    get:
      tags:
      - Overview Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeResponse'
      deprecated: true
  /api/v1/overviews/summary:
    get:
      tags:
      - Overview Api V 1
      summary: Get summary investment
      description: Get summary investment
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
  /api/v1/overviews/summary/non-room:
    get:
      tags:
      - Overview Api V 1
      summary: Get summary non room
      description: Get summary non room
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: assetType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/NonRoomType'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryNonRoomResponse'
  /api/v1/overviews/summary/room:
    get:
      tags:
      - Overview Api V 1
      summary: Get summary room
      description: Get summary room
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryRoomResponse'
  /api/v1/pay-loan:
    post:
      tags:
      - Pay Loan Api V 1
      summary: Pay loan
      description: Pay loan.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayLoan'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayLoan'
      deprecated: true
  /api/v1/pay-loan/hospitality:
    get:
      tags:
      - Pay Loan Api V 1
      summary: List pay loan hospitality
      description: List pay loan hospitality.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayLoanResponse'
      deprecated: true
  /api/v1/pay-loan/interest:
    post:
      tags:
      - Pay Loan Api V 1
      summary: Pay loan interest
      description: Pay loan interest.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayLoan'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayLoan'
      deprecated: true
  /api/v1/pay-loan/property:
    get:
      tags:
      - Pay Loan Api V 1
      summary: List pay loan property
      description: List pay loan property.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayLoanResponse'
      deprecated: true
  /api/v1/pay-loan/{code}/loan:
    get:
      tags:
      - Pay Loan Api V 1
      summary: Get a portfolio loan detail
      description: Get a portfolio loan detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioLoanDetailResponse'
      deprecated: true
  /api/v1/pay-loan/{code}/monthly-hospitality:
    get:
      tags:
      - Pay Loan Api V 1
      summary: List loan interest monthly hospitality
      description: List loan interest monthly hospitality.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanInterestMonthly'
      deprecated: true
  /api/v1/pay-loan/{code}/monthly-property:
    get:
      tags:
      - Pay Loan Api V 1
      summary: List loan interest monthly property
      description: List loan interest monthly property.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanInterestMonthly'
      deprecated: true
  /api/v1/payments/disbursement/callback:
    post:
      tags:
      - Payment Api V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/v1/portfolio/hospitality/{revenueDate}:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: revenueDate
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalityPortfolioResponse'
      deprecated: true
  /api/v1/portfolio/non-room:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: assetType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/NonRoomType'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NonRoomPortfolioResponse'
  /api/v1/portfolio/non-room/detail/{invoiceCode}:
    get:
      tags:
      - Portfolio Api V 1
      summary: List portfolio revenue non room
      description: List portfolio revenue non room.
      parameters:
      - name: invoiceCode
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioRevenueNonRoomDetailResponse'
  /api/v1/portfolio/non-room/{dividenDate}:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: dividenDate
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: assetType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/NonRoomType'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonRoomPortfolioResponse'
  /api/v1/portfolio/room:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomPortfolioResponse'
  /api/v1/portfolio/room/calendar-booked:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: date
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MontlyRoomBookedResponse'
  /api/v1/portfolio/room/daily:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: date
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomPortfolioResponse3'
  /api/v1/portfolio/room/detail:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: propertyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDividendDetailResponse2'
  /api/v1/portfolio/room/detail/calendar-booked:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: date
        in: query
        required: true
        schema:
          type: string
      - name: propertyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MontlyRoomBookedResponse2'
  /api/v1/portfolio/room/detail/daily:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
      - name: propertyCode
        in: query
        required: true
        schema:
          type: string
      - name: to
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortfolioDividendResponse2'
  /api/v1/portfolio/room/detail/monthly:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      - name: propertyCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortfolioDividendMonthlyResponse2'
  /api/v1/portfolio/room/{dividenDate}:
    get:
      tags:
      - Portfolio Api V 1
      parameters:
      - name: dividenDate
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomPortfolioResponse'
  /api/v1/privy/callback:
    get:
      tags:
      - Privy V 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - Privy V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/project:
    get:
      tags:
      - Project Api V 1
      summary: List projects.
      description: List projects.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
  /api/v1/project/{code}:
    get:
      tags:
      - Project Api V 1
      summary: Get project detail
      description: Get project detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetailResponse'
  /api/v1/revenue/hospitality/{code}:
    get:
      tags:
      - Revenue Hospitality Api V 1
      summary: List portfolio revenue hospitality
      description: List portfolio revenue hospitality.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
      deprecated: true
  /api/v1/transaction:
    get:
      tags:
      - Transaction Api V 1
      summary: List transactions
      description: List transactions.
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
  /api/v1/transaction/due-diligence/decline:
    post:
      tags:
      - Transaction Api V 1
      summary: Reject due diligence
      description: Reject due diligence.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCodeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DueDiligence'
  /api/v1/transaction/due-diligence/{code}:
    get:
      tags:
      - Transaction Api V 1
      summary: Get due diligence invoice transaction detail
      description: Get due diligence invoice transaction detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTxDueDiligenceResponse'
  /api/v1/transaction/invoice:
    post:
      tags:
      - Transaction Api V 1
      summary: Create invoice from due diligence
      description: Create invoice from due diligence.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceModularRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceModular'
  /api/v1/transaction/invoice/{code}:
    get:
      tags:
      - Transaction Api V 1
      summary: Get Invoice Modular transaction detail
      description: Get due diligence transaction detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetailResponse'
  /api/v1/verify/email:
    post:
      tags:
      - Verify Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                country:
                  type: string
                locale:
                  type: string
                timezone:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse_Simple_Nats'
  /api/v1/verify/firebase/mock:
    post:
      tags:
      - Verify Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/v1/verify/pin/email:
    post:
      tags:
      - Verify Api V 1
      summary: Check whether email exists
      description: "Check whether email exists. If it doesn't, will send a PIN to\
        \ the email."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                pin:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/vouchers:
    get:
      tags:
      - Voucher Api V 1
      summary: Check available voucher
      description: Check available voucher.
      parameters:
      - name: productCode
        in: query
        schema:
          type: string
      - name: voucherCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherCustomerResponse'
  /api/v1/wallet:
    get:
      tags:
      - Wallet Api V 1
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
  /api/v1/wallet-loan:
    get:
      tags:
      - Wallet Loan Api V 1
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletLoan'
  /api/v1/wallet-loan/interest:
    get:
      tags:
      - Wallet Loan Api V 1
      summary: List wallet loan history
      description: List wallet loan history.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletLoanInterestResponse'
  /api/v1/wallet-loan/transactions:
    get:
      tags:
      - Wallet Loan Api V 1
      summary: List wallet loan history
      description: List wallet loan history.
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/wallet-loan/txs:
    get:
      tags:
      - Wallet Loan Api V 1
      summary: List wallet loan history
      description: List wallet loan history.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletLoanTxResponse'
  /api/v1/wallet-loan/txs/completed:
    get:
      tags:
      - Wallet Loan Api V 1
      summary: List completed wallet loan transaction
      description: List completed wallet loan transaction.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletLoanTx'
  /api/v1/wallet-loan/txs/pending:
    get:
      tags:
      - Wallet Loan Api V 1
      summary: List pending wallet loan transaction
      description: List pending wallet loan transaction.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletLoanTx'
  /api/v1/wallet-loan/txs/{code}:
    get:
      tags:
      - Wallet Loan Api V 1
      summary: Get a history transaction detail
      description: Get a history transaction detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/v1/wallet/history:
    get:
      tags:
      - Wallet Api V 1
      summary: List wallet history by Date
      description: List wallet history by Date.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      - name: endDate
        in: query
        schema:
          default: ""
          type: string
      - name: kind
        in: query
        schema:
          default: ""
          type: string
      - name: startDate
        in: query
        schema:
          default: ""
          type: string
      - name: status
        in: query
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletTx'
  /api/v1/wallet/payment/callback:
    post:
      tags:
      - Wallet Api V 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
  /api/v1/wallet/rdf/support:
    get:
      tags:
      - Wallet Api V 1
      summary: Support data for RDF account creation
      description: List support data for RDF account creation. The data is fetched
        from `Info` with code `RSD_*`.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RdfSupportResponse'
  /api/v1/wallet/top-ups:
    post:
      tags:
      - Wallet Api V 1
      summary: Top up
      description: Top up to customer wallet.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTx'
  /api/v1/wallet/top-ups/{code}/evidences:
    post:
      tags:
      - Wallet Api V 1
      summary: Add a nota for proof of payment
      description: Add a for proof of payment.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartFormDataInput'
        required: true
      responses:
        "200":
          description: OK
  /api/v1/wallet/transactions:
    get:
      tags:
      - Wallet Api V 1
      summary: List wallet history
      description: List wallet history.
      parameters:
      - name: accountCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /api/v1/wallet/txs/completed:
    get:
      tags:
      - Wallet Api V 1
      summary: List completed wallet transaction
      description: List completed wallet transaction.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletTxDividendResponse'
  /api/v1/wallet/txs/pending:
    get:
      tags:
      - Wallet Api V 1
      summary: List pending wallet transaction
      description: List pending wallet transaction.
      parameters:
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletTxDividendResponse'
  /api/v1/wallet/txs/{code}:
    get:
      tags:
      - Wallet Api V 1
      summary: Get a history transaction detail
      description: Get a history transaction detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /api/v1/wallet/txs/{code}/dividend/property:
    get:
      tags:
      - Wallet Api V 1
      summary: Get a history transaction dividend property detail
      description: Get a history transaction dividend property detail.
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      - name: accountCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTxDividendResponse'
  /api/v1/wallet/withdrawals:
    post:
      tags:
      - Wallet Api V 1
      summary: Withdraw
      description: Withdraw from customer wallet.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletRequest'
        required: true
      responses:
        "201":
          description: Created
  /ping:
    get:
      tags:
      - Ping Api
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /schedule/add/dividend-properties:
    get:
      tags:
      - Yoda Schedule
      summary: add dividend properties
      description: add dividend properties
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /schedule/add/revenue-non-room:
    get:
      tags:
      - Yoda Schedule
      summary: Create revenue non room
      description: Create revenue non room.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
components:
  schemas:
    AbstractBank:
      description: Many places have references to a 'bank'. This is the shared properties.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        logo:
          description: Logo attached to this bank. Use the other API to add logo.
          type: object
          allOf:
          - $ref: '#/components/schemas/Media'
        description:
          description: Description bank
          type: string
          example: Bank Central Asia
        status:
          description: Publish Status of Bank
          enum:
          - DRAFT
          - ACTIVE
          - DEACTIVE
          type: string
          example: DRAFT
    AbstractNotification:
      description: Many places have references to a 'notification'. This is the shared
        properties.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        title:
          type: string
        message:
          type: string
        read:
          type: boolean
        codeKind:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        kind:
          $ref: '#/components/schemas/NotificationKind'
    Academy:
      description: Academy
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        contents:
          description: Content Academy
          type: array
          items:
            $ref: '#/components/schemas/AcademyContent'
          example: ""
        category:
          description: Category of academy
          enum:
          - INTRODUCTION
          - RISK_LEVEL
          - INVESTMENT
          type: string
          allOf:
          - $ref: '#/components/schemas/CategoryKind'
          example: INTRODUCTION
        level:
          description: Level of academy
          enum:
          - BEGINNER
          - INTERMEDIATE
          - ADVANCED
          type: string
          allOf:
          - $ref: '#/components/schemas/AcademyKind'
          example: BEGINNER
        duration:
          description: Academy video duration
          type: string
          example: 3m
        createdAt:
          description: Record the time when created the Academy
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Academy
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Academy
          type: string
          example: admin
    AcademyContent:
      description: Academy Content
      required:
      - locale
      type: object
      properties:
        locale:
          maxLength: 20
          type: string
        title:
          type: string
        description:
          type: string
        video:
          $ref: '#/components/schemas/Media'
        level:
          type: string
        category:
          type: string
        pdf:
          $ref: '#/components/schemas/Media'
    AcademyKind:
      enum:
      - BEGINNER
      - INTERMEDIATE
      - ADVANCED
      type: string
    AcademyRequest:
      type: object
      properties:
        code:
          description: Code using UUID
          type: string
          example: h0pqI2B9zUuN9lKl9WhWA
        titleId:
          description: Indonesian Title
          type: string
          example: Pengenalan Aplikasi Briix
        titleEn:
          description: English Title
          type: string
          example: Introduction to the Briix Platflorm
        descriptionId:
          description: Indonesian Description
          type: string
          example: Video ini akan menjelaskan tentang Aplikasi Briix
        descriptionEn:
          description: English Description
          type: string
          example: This video will tell you about Briix Platform
        videoId:
          description: Indonesian Video
          type: string
        videoEn:
          description: English Video
          type: string
        category:
          description: "Category Academy contains INTRODUCTION, RISK_LEVEL and INVESTMENT"
          type: string
          allOf:
          - $ref: '#/components/schemas/CategoryKind'
          example: INTRODUCTION
        level:
          description: "Level Academy contains BEGINNER, INTERMEDIATE and ADVANCED"
          type: string
          allOf:
          - $ref: '#/components/schemas/AcademyKind'
          example: BEGINNER
        duration:
          description: Video Duration
          type: string
          example: 3m
    Account:
      description: Account.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        email:
          type: string
          example: thomas@wiradikusuma.com
        wallet:
          $ref: '#/components/schemas/Wallet'
        kind:
          $ref: '#/components/schemas/AccountKind'
        walletLoan:
          $ref: '#/components/schemas/WalletLoan'
        company:
          $ref: '#/components/schemas/Company'
        deleted:
          type: boolean
        banks:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBank'
        zoho:
          $ref: '#/components/schemas/CustomerZoho'
        demo:
          type: boolean
    Account1:
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Account2:
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Account3:
      type: object
      properties:
        code:
          type: string
    AccountCodeRequest:
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
        account:
          $ref: '#/components/schemas/Account1'
    AccountKind:
      enum:
      - S
      - I
      type: string
    Address:
      type: object
      properties:
        street:
          type: string
        district:
          type: string
        village:
          type: string
        rtrw:
          type: string
        postal_code:
          type: string
    Address_Simple_Nats:
      type: object
      properties:
        street:
          type: string
        district:
          type: string
        village:
          type: string
        rtrw:
          type: string
        postal_code:
          type: string
    Amenity:
      description: Amenity
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        icon:
          description: Icon url for amenity
          type: string
          example: icon_garden.svg
        value:
          description: Value of unit
          type: string
          example: "200"
        unit:
          description: Unit for icon
          type: string
          example: m2
        status:
          description: "Status true = active, false = deactive"
          type: boolean
          example: true
        company:
          description: Relation of Amenity belongs to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
        brand:
          description: Transient column Brand used for Modular
          type: array
          items:
            $ref: '#/components/schemas/Brand'
    Amenity_Simple_Nats:
      description: Amenity
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        icon:
          description: Icon url for amenity
          type: string
          example: icon_garden.svg
        value:
          description: Value of unit
          type: string
          example: "200"
        unit:
          description: Unit for icon
          type: string
          example: m2
        status:
          description: "Status true = active, false = deactive"
          type: boolean
          example: true
        company:
          description: Relation of Amenity belongs to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company_Simple_Nats'
          example: 1
        brand:
          description: Transient column Brand used for Modular
          type: array
          items:
            $ref: '#/components/schemas/Brand_Simple_Nats'
    Announcement:
      description: Announcement
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        publishedDate:
          description: Record the date and time when Announcement published
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          example: 2023-07-05 18:12:20.000000
        variant:
          description: Variant of Announcement
          enum:
          - NEUTRAL
          - SUCCESS
          - WARNING
          - ERROR
          type: string
          allOf:
          - $ref: '#/components/schemas/AnnouncementKind'
          example: NEUTRAL
        status:
          description: Announcement status
          enum:
          - DRAFT
          - ACTIVE
          - DEACTIVE
          type: string
          example: ACTIVE
        messages:
          description: "Contains Locale, Title and Message in Array Json"
          type: array
          items:
            $ref: '#/components/schemas/AnnouncementMessage'
        createdBy:
          description: Record the user who created Announcement
          type: string
          example: admin
        createdAt:
          description: Record the time when Announcement created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Announcement
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
    AnnouncementKind:
      enum:
      - NEUTRAL
      - SUCCESS
      - WARNING
      - ERROR
      type: string
    AnnouncementMessage:
      description: Announcement Body Message
      required:
      - locale
      type: object
      properties:
        locale:
          description: Locale to display announcements according to the language used
            in the application
          maxLength: 20
          type: string
          example: id
        title:
          description: Title for Announcement
          type: string
          example: Public Holiday
        message:
          description: Message for Announcement
          type: string
          example: You got 30% discount for a new member
    AnnouncementRequest:
      type: object
      properties:
        code:
          type: string
        titleId:
          type: string
        titleEn:
          type: string
        publishedDate:
          $ref: '#/components/schemas/LocalDateTime'
        messageId:
          type: string
        messageEn:
          type: string
        variant:
          $ref: '#/components/schemas/AnnouncementKind'
        status:
          $ref: '#/components/schemas/AnnouncementStatus'
    AnnouncementStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    ApprovalGeneralStatus:
      enum:
      - 200
      - 0
      - 100
      - 400
      type: string
    ApprovalGeneralStatus_Simple_Nats:
      enum:
      - 200
      - 0
      - 100
      - 400
      type: string
    ApprovalLoanStatus:
      enum:
      - 100
      - 200
      - 201
      - 400
      type: string
    Assets:
      description: Assets
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        company:
          $ref: '#/components/schemas/Company'
        value:
          type: number
        totalUnits:
          format: int32
          type: integer
        totalLandSize:
          type: number
        totalBuildingSize:
          type: number
        buildYear:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/AssetsStatus'
        medias:
          description: "Photos attached to this assets. Use the other API to add photos.\
            \ Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        deleted:
          type: boolean
        createdBy:
          description: Record the user who created Assets
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Assets
          type: string
          example: admin
        roomCodeList:
          type: array
          items:
            type: string
        nonRoomCodeList:
          type: array
          items:
            type: string
    AssetsDetailResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        totalAssetValue:
          type: number
        totalVillaUnits:
          format: int32
          type: integer
        buildYear:
          format: int32
          type: integer
        totalLandSize:
          type: number
        totalBuildingSize:
          type: number
        status:
          $ref: '#/components/schemas/AssetsStatus'
        media:
          $ref: '#/components/schemas/Media'
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room1'
        nonRooms:
          type: array
          items:
            $ref: '#/components/schemas/NonRoom2'
    AssetsListResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        totalAssetValue:
          type: number
        totalVillaUnits:
          format: int32
          type: integer
        totalBuildingSize:
          type: number
        totalLandSize:
          type: number
        status:
          $ref: '#/components/schemas/AssetsStatus'
        media:
          $ref: '#/components/schemas/Media'
    AssetsNonRoomDetailResponse:
      type: object
      properties:
        code:
          type: string
        invoiceCode:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        nonRoomValue:
          type: number
        interest:
          type: number
        pb1:
          type: number
        serviceCharge:
          type: number
        grossOperationalProfitShare:
          type: number
        corporateTax:
          type: number
        location:
          type: string
        nonRoomType:
          $ref: '#/components/schemas/NonRoomType'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    AssetsResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        totalUnits:
          format: int32
          type: integer
        totalLandSize:
          type: number
        totalBuildingSize:
          type: number
        value:
          type: number
        buildYear:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/AssetsStatus'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        roomList:
          type: array
          items:
            $ref: '#/components/schemas/Room'
        nonRoomList:
          type: array
          items:
            $ref: '#/components/schemas/NonRoom1'
    AssetsRoomDetailResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        roomValue:
          type: number
        specification:
          type: array
          items:
            $ref: '#/components/schemas/Specification'
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        averageDailyRate:
          type: number
        earningTax:
          type: number
        roomManagement:
          type: number
        roomManagementTax:
          type: number
        financialManagement:
          type: number
        pb1:
          type: number
        serviceCharge:
          type: number
        location:
          type: string
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    AssetsStatus:
      enum:
      - GROUNDBREAKING
      - DEVELOPMENT
      - OPERATING
      - RENOVATING
      - CLOSED_PERMANENTLY
      type: string
    AssetsStatus_Simple_Nats:
      enum:
      - GROUNDBREAKING
      - DEVELOPMENT
      - OPERATING
      - RENOVATING
      - CLOSED_PERMANENTLY
      type: string
    Assets_Simple_Nats:
      description: Assets
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        company:
          $ref: '#/components/schemas/Company_Simple_Nats'
        value:
          type: number
        totalUnits:
          format: int32
          type: integer
        totalLandSize:
          type: number
        totalBuildingSize:
          type: number
        buildYear:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/AssetsStatus_Simple_Nats'
        medias:
          description: "Photos attached to this assets. Use the other API to add photos.\
            \ Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media_Simple_Nats'
        deleted:
          type: boolean
        createdBy:
          description: Record the user who created Assets
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Assets
          type: string
          example: admin
        roomCodeList:
          type: array
          items:
            type: string
        nonRoomCodeList:
          type: array
          items:
            type: string
    BankSupportResponse:
      description: Support data for bank accounts.
      type: object
      properties:
        withdrawalBanks:
          type: array
          items:
            $ref: '#/components/schemas/WithdrawalBank'
    BasePagination:
      type: object
      properties:
        totalItems:
          format: int64
          type: integer
        totalPages:
          format: int32
          type: integer
        currentPage:
          format: int32
          type: integer
        data: {}
    BessLoanResponse:
      type: object
      properties:
        mbOrderId:
          type: string
        nomorAplikasi:
          type: string
    BillingInvoice:
      description: Invoice that will be seen by customer.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        invoiceModular:
          $ref: '#/components/schemas/InvoiceModular'
        invoiceDueDiligence:
          $ref: '#/components/schemas/InvoiceDueDiligence'
        remainingAmount:
          description: Invoice Remaining Amount
          type: number
          example: 1000000000
        amount:
          description: Invoice Billed Amount
          type: number
          example: 1000000000
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        kind:
          $ref: '#/components/schemas/InvoiceKind'
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        paymentProof:
          $ref: '#/components/schemas/Media'
        issuedDate:
          $ref: '#/components/schemas/OffsetDateTime'
        dueDate:
          $ref: '#/components/schemas/OffsetDateTime'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
    BillingInvoiceRequest:
      type: object
      properties:
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty1'
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom1'
        invoiceModular:
          $ref: '#/components/schemas/InvoiceModular1'
        amount:
          type: number
    Brand:
      description: Brand
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        logo:
          description: File image for Brand Logo in Json
          type: object
          allOf:
          - $ref: '#/components/schemas/Media'
        company:
          description: Relation of Brand belongs to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
        status:
          description: Publish status
          enum:
          - DRAFT
          - ACTIVE
          - DEACTIVE
          type: string
          example: DRAFT
    Brand_Simple_Nats:
      description: Brand
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        logo:
          description: File image for Brand Logo in Json
          type: object
          allOf:
          - $ref: '#/components/schemas/Media_Simple_Nats'
        company:
          description: Relation of Brand belongs to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company_Simple_Nats'
          example: 1
        status:
          description: Publish status
          enum:
          - DRAFT
          - ACTIVE
          - DEACTIVE
          type: string
          example: DRAFT
    BusinessException:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        extra: {}
        cause:
          type: object
    BusinessException_Expanded_Simple_Nats:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode_Expanded_Simple_Nats'
        extra: {}
        cause:
          type: object
    CategoryKind:
      enum:
      - INTRODUCTION
      - RISK_LEVEL
      - INVESTMENT
      type: string
    ChannelProperties:
      type: object
      properties:
        branch_opening_location_code:
          type: string
        monthly_income_range:
          type: string
    ChannelProperties_Simple_Nats:
      type: object
      properties:
        branch_opening_location_code:
          type: string
        monthly_income_range:
          type: string
    CodeResponse:
      description: "Generic container to return the identifier of an entity, for example,\
        \ after being created. The identifier is NOT a DB PK (as we don't expose them).\
        \ It's usually a `code` or even a list index."
      type: object
      properties:
        code:
          type: string
    Collateral:
      type: object
      properties:
        collateralType:
          type: string
        collateralOwnershipKind:
          type: string
        collateralOwnerName:
          type: string
        collateralAddress:
          type: string
        collateralRt:
          type: string
        collateralRw:
          type: string
        collateralAddressNumber:
          type: string
        collateralPoscodeAddress:
          type: string
        collateralWard:
          type: string
        collateralSubdistrict:
          type: string
        collateralProvince:
          type: string
        collateralMunicipality:
          type: string
        collateralLandAndPropertyCertificateType:
          type: string
        collateralLocation:
          type: string
        collateralRelationship:
          type: string
        collateralCertificateNumber:
          type: string
        collateralCertificateYear:
          type: string
        collateralLandArea:
          type: string
        collateralBuildingArea:
          type: string
    Company:
      description: Company.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        sector:
          description: ' in Bess field bidangUsaha get list from api usaha bess'
          type: string
          example: "e50905: Apartemen Hotel"
        phone:
          type: string
        phoneOffice:
          type: string
        npwp:
          type: string
        type:
          description: ' in Bess field invJenisPerusahaan'
          type: string
          example: Hotel
        ownership:
          description: ' in Bess field invPemilikanUsaha'
          type: string
          example: sendiri
        ownershipPlace:
          description: ' in Bess field invStatTemp'
          type: string
          example: milik_sendiri
        durationSince:
          format: int32
          type: integer
        since:
          format: int32
          type: integer
        sectorEconomy:
          description: ' in Bess field sektorEkonom get list from api usaha ekonomi'
          type: string
          example: e509
        emergencyContact:
          $ref: '#/components/schemas/EmergencyContactBess'
        addressAreaCode:
          description: ' Area Code from bess'
          type: string
          example: 0A.02.03.02
        address:
          description: Address
          type: string
          example: "Jl. Jend. Sudirman No.Kav 54-55, RT.5/RW.3, Senayan, Kec. Kby.\
            \ Baru, Kota Jakarta Selatan, Daerah Khusus Ibukota Jakarta 12190"
        rtRw:
          description: Address RT/RW
          type: string
          example: 01/01
        province:
          description: province
          type: string
          example: DKI Jakarta
        city:
          description: city
          type: string
          example: Jakarta Selatan
        subDistrict:
          description: sub district
          type: string
          example: Kebayoran Baru
        ward:
          description: ward
          type: string
          example: Kebayoran
        addressNumber:
          description: Address number
          type: string
          example: "10"
        postalCode:
          description: Postal code
          type: string
          example: "11730"
        businessForm:
          type: string
        businessLicenseNumber:
          type: string
        initialActNumber:
          type: string
        initialActDate:
          $ref: '#/components/schemas/LocalDate'
        finalActNumber:
          type: string
        finalActDate:
          $ref: '#/components/schemas/LocalDate'
    Company_Expanded_Simple_Nats:
      description: Company.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Expanded_Simple_Nats'
        id:
          format: int64
          type: integer
        sector:
          description: ' in Bess field bidangUsaha get list from api usaha bess'
          type: string
          example: "e50905: Apartemen Hotel"
        phone:
          type: string
        phoneOffice:
          type: string
        npwp:
          type: string
        type:
          description: ' in Bess field invJenisPerusahaan'
          type: string
          example: Hotel
        ownership:
          description: ' in Bess field invPemilikanUsaha'
          type: string
          example: sendiri
        ownershipPlace:
          description: ' in Bess field invStatTemp'
          type: string
          example: milik_sendiri
        durationSince:
          format: int32
          type: integer
        since:
          format: int32
          type: integer
        sectorEconomy:
          description: ' in Bess field sektorEkonom get list from api usaha ekonomi'
          type: string
          example: e509
        emergencyContact:
          $ref: '#/components/schemas/EmergencyContactBess_Expanded_Simple_Nats'
        addressAreaCode:
          description: ' Area Code from bess'
          type: string
          example: 0A.02.03.02
        address:
          description: Address
          type: string
          example: "Jl. Jend. Sudirman No.Kav 54-55, RT.5/RW.3, Senayan, Kec. Kby.\
            \ Baru, Kota Jakarta Selatan, Daerah Khusus Ibukota Jakarta 12190"
        rtRw:
          description: Address RT/RW
          type: string
          example: 01/01
        province:
          description: province
          type: string
          example: DKI Jakarta
        city:
          description: city
          type: string
          example: Jakarta Selatan
        subDistrict:
          description: sub district
          type: string
          example: Kebayoran Baru
        ward:
          description: ward
          type: string
          example: Kebayoran
        addressNumber:
          description: Address number
          type: string
          example: "10"
        postalCode:
          description: Postal code
          type: string
          example: "11730"
        businessForm:
          type: string
        businessLicenseNumber:
          type: string
        initialActNumber:
          type: string
        initialActDate:
          $ref: '#/components/schemas/LocalDate_Expanded_Simple_Nats'
        finalActNumber:
          type: string
        finalActDate:
          $ref: '#/components/schemas/LocalDate_Expanded_Simple_Nats'
    Company_Simple_Nats:
      description: Company.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        sector:
          description: ' in Bess field bidangUsaha get list from api usaha bess'
          type: string
          example: "e50905: Apartemen Hotel"
        phone:
          type: string
        phoneOffice:
          type: string
        npwp:
          type: string
        type:
          description: ' in Bess field invJenisPerusahaan'
          type: string
          example: Hotel
        ownership:
          description: ' in Bess field invPemilikanUsaha'
          type: string
          example: sendiri
        ownershipPlace:
          description: ' in Bess field invStatTemp'
          type: string
          example: milik_sendiri
        durationSince:
          format: int32
          type: integer
        since:
          format: int32
          type: integer
        sectorEconomy:
          description: ' in Bess field sektorEkonom get list from api usaha ekonomi'
          type: string
          example: e509
        emergencyContact:
          $ref: '#/components/schemas/EmergencyContactBess_Simple_Nats'
        addressAreaCode:
          description: ' Area Code from bess'
          type: string
          example: 0A.02.03.02
        address:
          description: Address
          type: string
          example: "Jl. Jend. Sudirman No.Kav 54-55, RT.5/RW.3, Senayan, Kec. Kby.\
            \ Baru, Kota Jakarta Selatan, Daerah Khusus Ibukota Jakarta 12190"
        rtRw:
          description: Address RT/RW
          type: string
          example: 01/01
        province:
          description: province
          type: string
          example: DKI Jakarta
        city:
          description: city
          type: string
          example: Jakarta Selatan
        subDistrict:
          description: sub district
          type: string
          example: Kebayoran Baru
        ward:
          description: ward
          type: string
          example: Kebayoran
        addressNumber:
          description: Address number
          type: string
          example: "10"
        postalCode:
          description: Postal code
          type: string
          example: "11730"
        businessForm:
          type: string
        businessLicenseNumber:
          type: string
        initialActNumber:
          type: string
        initialActDate:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        finalActNumber:
          type: string
        finalActDate:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
    Corporation:
      description: Corporation.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        url:
          description: URL website of the Corporation
          type: string
          example: https://briix.com
        company:
          description: Relation of Corporation belongs to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
    Corporation_Expanded_Simple_Nats:
      description: Corporation.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Expanded_Simple_Nats'
        id:
          format: int64
          type: integer
        url:
          description: URL website of the Corporation
          type: string
          example: https://briix.com
        company:
          description: Relation of Corporation belongs to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company_Expanded_Simple_Nats'
          example: 1
    Corporation_Simple_Nats:
      description: Corporation.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        url:
          description: URL website of the Corporation
          type: string
          example: https://briix.com
        company:
          $ref: '#/components/schemas/Company_Simple_Nats'
    CustomField:
      type: object
      properties:
        value: {}
        name:
          type: string
        id:
          type: string
    Customer:
      description: Customer.
      required:
      - country
      - locale
      - timezone
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        email:
          type: string
          example: thomas@wiradikusuma.com
        mobile:
          description: "Prefixed with country code, without plus sign."
          type: string
          example: "6288812345"
        country:
          type: string
          example: ID
        locale:
          maxLength: 20
          type: string
        timezone:
          description: Timezone in the format understood by Java.
          maxLength: 50
          type: string
          example: Asia/Jakarta
        fcms:
          type: array
          items:
            $ref: '#/components/schemas/Fcm'
        lastName:
          description: "Name field is for first name, this one is for last name."
          maxLength: 100
          type: string
          example: Wayne
        rawEmail:
          description: Unverified email.
          type: string
          example: thomas@wiradikusuma.com
        rawMobile:
          description: "Unverified mobile. Prefixed with country code, without plus\
            \ sign."
          type: string
          example: "6288812345"
        password:
          type: string
        foreigner:
          description: Whether this customer is non-Indonesian.
          type: boolean
        nik:
          description: NIK. Digits only.
          maxLength: 16
          minLength: 16
          type: string
          example: "1234567890123456"
        gender:
          $ref: '#/components/schemas/Gender'
        marital:
          $ref: '#/components/schemas/Marital'
        religion:
          $ref: '#/components/schemas/Religion'
        birthplace:
          type: string
        motherName:
          type: string
        dob:
          $ref: '#/components/schemas/LocalDate'
        address:
          type: string
        district:
          type: string
        village:
          type: string
        rtRw:
          type: string
        postalCode:
          type: string
        job:
          type: string
        jobIndustry:
          $ref: '#/components/schemas/JobIndustry'
        expiryNik:
          type: string
        issuingCityNik:
          type: string
        bankBranchOpeningCity:
          type: string
        monthlyIncomeRange:
          type: string
        education:
          type: string
        deleted:
          type: boolean
        whitelist:
          type: boolean
        referralCode:
          type: string
        myReferral:
          type: string
        npwp:
          description: NPWP. Digits only.
          maxLength: 16
          minLength: 16
          type: string
          example: "1234567890123456"
        avatar:
          $ref: '#/components/schemas/Media'
        openAccountReason:
          $ref: '#/components/schemas/OpenAccountReason'
        sourceOfFund:
          $ref: '#/components/schemas/SourceOfFund'
        kyc:
          description: Null if there's no KYC data to process.
          type: object
          allOf:
          - $ref: '#/components/schemas/CustomerKyc'
        passport:
          $ref: '#/components/schemas/Media'
        ktp:
          $ref: '#/components/schemas/Media'
        selfie:
          $ref: '#/components/schemas/Media'
        xendit:
          $ref: '#/components/schemas/CustomerXendit'
        privy:
          $ref: '#/components/schemas/CustomerPrivy'
        zoho:
          $ref: '#/components/schemas/CustomerZoho'
        customerPassport:
          description: Null if there's no use Ocr Passport
          type: object
          allOf:
          - $ref: '#/components/schemas/CustomerPassport'
        banks:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBank'
        wallet:
          $ref: '#/components/schemas/Wallet'
        walletLoan:
          $ref: '#/components/schemas/WalletLoan'
        firstName:
          type: string
        middleName:
          type: string
        fullName:
          type: string
        demo:
          type: boolean
        kycPrivate:
          $ref: '#/components/schemas/CustomerKyc'
        salutation:
          $ref: '#/components/schemas/Salutation'
        sourceOfFundPrivate:
          $ref: '#/components/schemas/SourceOfFund'
        openAccountReasonPrivate:
          $ref: '#/components/schemas/OpenAccountReason'
    CustomerAccount:
      description: Customer Account.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        customer:
          description: Relation to Customer on column customer_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Customer'
          example: 1
        account:
          description: Relation to Account on column account_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Account'
          example: 1
        priority:
          format: int32
          type: integer
    CustomerBank:
      description: "Bank registered under customer, for withdrawals."
      type: object
      properties:
        account:
          type: string
        name:
          type: string
        bankCode:
          description: "Bank code, must exist in WithdrawalBank. Not object relationship\
            \ because this model is serialized as JSON."
          type: string
        overseas:
          description: Whether the account belongs to an overseas bank.
          type: boolean
        swift:
          description: "For overseas bank account, SWIFT code is required."
          type: string
        accountCode:
          type: string
    CustomerBank_Simple_Nats:
      description: "Bank registered under customer, for withdrawals."
      type: object
      properties:
        account:
          type: string
        name:
          type: string
        bankCode:
          description: "Bank code, must exist in WithdrawalBank. Not object relationship\
            \ because this model is serialized as JSON."
          type: string
        overseas:
          description: Whether the account belongs to an overseas bank.
          type: boolean
        swift:
          description: "For overseas bank account, SWIFT code is required."
          type: string
        accountCode:
          type: string
    CustomerKyc:
      description: Temporary storage for user-submitted KYC data.
      type: object
      properties:
        nik:
          type: string
        name:
          type: string
        lastName:
          type: string
        dob:
          $ref: '#/components/schemas/LocalDate'
        birthplace:
          type: string
        address:
          type: string
        passportCountry:
          type: string
        passportNumber:
          type: string
        passportIssueDate:
          $ref: '#/components/schemas/LocalDate'
        passportExpiryDate:
          $ref: '#/components/schemas/LocalDate'
        passportIssuer:
          type: string
        fullName:
          type: string
    CustomerKyc_Simple_Nats:
      description: Temporary storage for user-submitted KYC data.
      type: object
      properties:
        nik:
          type: string
        name:
          type: string
        lastName:
          type: string
        dob:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        birthplace:
          type: string
        address:
          type: string
        passportCountry:
          type: string
        passportNumber:
          type: string
        passportIssueDate:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        passportExpiryDate:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        passportIssuer:
          type: string
        fullName:
          type: string
    CustomerPassport:
      description: Passport from a Ocr Xendit
      type: object
      properties:
        country:
          type: string
        number:
          type: string
        dateOfIssue:
          $ref: '#/components/schemas/LocalDate'
        dateOfExpiry:
          $ref: '#/components/schemas/LocalDate'
        issuingAuthority:
          type: string
        isTampered:
          type: boolean
        tampered:
          type: boolean
    CustomerPassport_Simple_Nats:
      description: Passport from a Ocr Xendit
      type: object
      properties:
        country:
          type: string
        number:
          type: string
        dateOfIssue:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        dateOfExpiry:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        issuingAuthority:
          type: string
        isTampered:
          type: boolean
        tampered:
          type: boolean
    CustomerPrivy:
      description: Related to Privy integration.
      type: object
      properties:
        id:
          description: Privy Id. from response register Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        token:
          description: Privy Token. from response register Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        response:
          description: Response callback Register privy
          type: object
          additionalProperties: {}
        documentResponse:
          description: Response callback document privy
          type: object
          additionalProperties: {}
        documentToken:
          description: Privy Document Token. from response send document Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        document:
          description: Privy Document Token. from response send document Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        status:
          $ref: '#/components/schemas/PrivyStatus'
    CustomerPrivy_Simple_Nats:
      description: Related to Privy integration.
      type: object
      properties:
        id:
          description: Privy Id. from response register Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        token:
          description: Privy Token. from response register Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        response:
          description: Response callback Register privy
          type: object
          additionalProperties: {}
        documentResponse:
          description: Response callback document privy
          type: object
          additionalProperties: {}
        documentToken:
          description: Privy Document Token. from response send document Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        document:
          description: Privy Document Token. from response send document Privy
          type: string
          example: dn1thu8sz9rtetazf7pt9fvwwd88s886phryedk99bczffhpfcxsq83mf8fs0ite
        status:
          $ref: '#/components/schemas/PrivyStatus_Simple_Nats'
    CustomerRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        religion:
          $ref: '#/components/schemas/Religion'
        avatar:
          $ref: '#/components/schemas/Media'
        mobile:
          type: string
        country:
          type: string
        locale:
          type: string
        timeZone:
          type: string
    CustomerResponse_Simple_Nats:
      type: object
      properties:
        env:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/Customer_Simple_Nats'
        completedTxs: {}
        pendingTxs: {}
        invoiceProperties:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePropertyResponse_Simple_Nats'
        notification:
          type: array
          items:
            $ref: '#/components/schemas/NotificationCustomerResponse_Simple_Nats'
        portfolioLoan:
          $ref: '#/components/schemas/PortfolioLoanResponse_Simple_Nats'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property_Simple_Nats'
        walletOwned:
          type: object
          additionalProperties: {}
        walletLoanOwned:
          type: object
          additionalProperties: {}
        documentPrefix:
          type: string
        imagePrefix:
          type: string
        topUpInfos:
          type: array
          items:
            $ref: '#/components/schemas/Info_Simple_Nats'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/GenericResponse_Simple_Nats'
        totalInvestments:
          type: number
        totalLoans:
          type: number
        refreshDate:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
    CustomerXendit:
      description: "Related to Xendit integration. Customer-specific data, e.g. KTP,\
        \ even if returned from Xendit API, will be put directly in CustomerKyc (pending\
        \ approval) or Customer (after approved)."
      type: object
      properties:
        ocrKtpId:
          description: Ocr ID. from response xendit Create Ocr
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        ocrKtpResponse:
          description: Ocr Response. from response CallBack Xendit Ocr
          type: object
          additionalProperties: {}
        ocrKtpStatus:
          $ref: '#/components/schemas/XenditStatus'
        ocrStatus:
          $ref: '#/components/schemas/XenditStatus'
        ocrTaxId:
          description: Ocr ID. from response xendit Create Ocr NPWP
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        ocrTaxIdResponse:
          description: Ocr Response. from response CallBack Xendit Ocr Npwp
          type: object
          additionalProperties: {}
        ocrTaxIdStatus:
          $ref: '#/components/schemas/XenditStatus'
        ocrPassportId:
          description: Ocr Passport ID. from response xendit Create Ocr
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        ocrPassportResponse:
          description: Ocr Passport Response. from response CallBack Xendit Ocr
          type: object
          additionalProperties: {}
        ocrPassportStatus:
          $ref: '#/components/schemas/XenditStatus'
        kycId:
          description: Biometric Verification Id. from response xendit Create Biometric
            Verification
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        kycResponse:
          description: Biometric Verification Response. from response CallBack Xendit
            Biometric Verification
          type: object
          additionalProperties: {}
        kycStatus:
          $ref: '#/components/schemas/XenditStatus'
        rdfRequest:
          description: Rdf request
          type: object
          allOf:
          - $ref: '#/components/schemas/XenditRdfCustomerRequest'
        rdfCustomerId:
          description: Rdf Customer Id. from response xendit Create Rdf Customer
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        rdfCustomerResponse:
          description: Rdf Customer Response. from response CallBack Xendit Rdf Customer
          type: object
          additionalProperties: {}
        rdfCustomerStatus:
          $ref: '#/components/schemas/XenditStatus'
        rdfAccountId:
          description: Rdf Account Id. from response xendit Create Rdf Account
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        rdfAccountResponse:
          description: Rdf Account Response. from response CallBack Xendit Rdf Account
          type: object
          additionalProperties: {}
        faceComparisonId:
          description: Face comparison. from response xendit Create Face comparison
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        faceComparisonResponse:
          description: Face comparison Response. from response CallBack Xendit Face
            comparison
          type: object
          additionalProperties: {}
        faceComparisonStatus:
          $ref: '#/components/schemas/XenditStatus'
        faceComparisonScore:
          format: double
          type: number
        rdfAccountStatus:
          $ref: '#/components/schemas/XenditStatus'
    CustomerXendit_Simple_Nats:
      description: "Related to Xendit integration. Customer-specific data, e.g. KTP,\
        \ even if returned from Xendit API, will be put directly in CustomerKyc (pending\
        \ approval) or Customer (after approved)."
      type: object
      properties:
        ocrKtpId:
          description: Ocr ID. from response xendit Create Ocr
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        ocrKtpResponse:
          description: Ocr Response. from response CallBack Xendit Ocr
          type: object
          additionalProperties: {}
        ocrKtpStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        ocrStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        ocrTaxId:
          description: Ocr ID. from response xendit Create Ocr NPWP
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        ocrTaxIdResponse:
          description: Ocr Response. from response CallBack Xendit Ocr Npwp
          type: object
          additionalProperties: {}
        ocrTaxIdStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        ocrPassportId:
          description: Ocr Passport ID. from response xendit Create Ocr
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        ocrPassportResponse:
          description: Ocr Passport Response. from response CallBack Xendit Ocr
          type: object
          additionalProperties: {}
        ocrPassportStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        kycId:
          description: Biometric Verification Id. from response xendit Create Biometric
            Verification
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        kycStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        rdfCustomerId:
          description: Rdf Customer Id. from response xendit Create Rdf Customer
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        rdfCustomerStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        rdfAccountId:
          description: Rdf Account Id. from response xendit Create Rdf Account
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        rdfAccountResponse:
          description: Rdf Account Response. from response CallBack Xendit Rdf Account
          type: object
          additionalProperties: {}
        faceComparisonId:
          description: Face comparison. from response xendit Create Face comparison
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        faceComparisonResponse:
          description: Face comparison Response. from response CallBack Xendit Face
            comparison
          type: object
          additionalProperties: {}
        faceComparisonStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        faceComparisonScore:
          format: double
          type: number
        rdfAccountStatus:
          $ref: '#/components/schemas/XenditStatus_Simple_Nats'
        kycResponse:
          type: object
          additionalProperties: {}
        rdfRequest:
          $ref: '#/components/schemas/XenditRdfCustomerRequest_Simple_Nats'
        rdfCustomerResponse:
          type: object
          additionalProperties: {}
    CustomerZoho:
      description: Related to Zoho CRM integration.
      type: object
      properties:
        zohoCustomerId:
          description: Zoho Customer Id.
          type: string
        zohoLeadId:
          description: Zoho Lead Id.
          type: string
    CustomerZoho_Simple_Nats:
      description: Related to Zoho CRM integration.
      type: object
      properties:
        zohoCustomerId:
          description: Zoho Customer Id.
          type: string
        zohoLeadId:
          description: Zoho Lead Id.
          type: string
    Customer_Simple_Nats:
      description: Customer.
      required:
      - country
      - locale
      - timezone
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        email:
          type: string
          example: thomas@wiradikusuma.com
        mobile:
          description: "Prefixed with country code, without plus sign."
          type: string
          example: "6288812345"
        country:
          type: string
          example: ID
        locale:
          maxLength: 20
          type: string
        timezone:
          description: Timezone in the format understood by Java.
          maxLength: 50
          type: string
          example: Asia/Jakarta
        fcms:
          type: array
          items:
            $ref: '#/components/schemas/Fcm_Simple_Nats'
        lastName:
          description: "Name field is for first name, this one is for last name."
          maxLength: 100
          type: string
          example: Wayne
        rawEmail:
          description: Unverified email.
          type: string
          example: thomas@wiradikusuma.com
        rawMobile:
          description: "Unverified mobile. Prefixed with country code, without plus\
            \ sign."
          type: string
          example: "6288812345"
        password:
          type: string
        foreigner:
          description: Whether this customer is non-Indonesian.
          type: boolean
        nik:
          description: NIK. Digits only.
          maxLength: 16
          minLength: 16
          type: string
          example: "1234567890123456"
        gender:
          $ref: '#/components/schemas/Gender_Simple_Nats'
        marital:
          $ref: '#/components/schemas/Marital_Simple_Nats'
        religion:
          $ref: '#/components/schemas/Religion_Simple_Nats'
        birthplace:
          type: string
        motherName:
          type: string
        dob:
          $ref: '#/components/schemas/LocalDate_Simple_Nats'
        address:
          type: string
        district:
          type: string
        village:
          type: string
        rtRw:
          type: string
        postalCode:
          type: string
        job:
          type: string
        jobIndustry:
          $ref: '#/components/schemas/JobIndustry_Simple_Nats'
        expiryNik:
          type: string
        issuingCityNik:
          type: string
        bankBranchOpeningCity:
          type: string
        monthlyIncomeRange:
          type: string
        education:
          type: string
        deleted:
          type: boolean
        whitelist:
          type: boolean
        referralCode:
          type: string
        myReferral:
          type: string
        npwp:
          description: NPWP. Digits only.
          maxLength: 16
          minLength: 16
          type: string
          example: "1234567890123456"
        avatar:
          $ref: '#/components/schemas/Media_Simple_Nats'
        openAccountReason:
          $ref: '#/components/schemas/OpenAccountReason_Simple_Nats'
        sourceOfFund:
          $ref: '#/components/schemas/SourceOfFund_Simple_Nats'
        kyc:
          description: Null if there's no KYC data to process.
          type: object
          allOf:
          - $ref: '#/components/schemas/CustomerKyc_Simple_Nats'
        xendit:
          $ref: '#/components/schemas/CustomerXendit_Simple_Nats'
        privy:
          $ref: '#/components/schemas/CustomerPrivy_Simple_Nats'
        zoho:
          $ref: '#/components/schemas/CustomerZoho_Simple_Nats'
        customerPassport:
          description: Null if there's no use Ocr Passport
          type: object
          allOf:
          - $ref: '#/components/schemas/CustomerPassport_Simple_Nats'
        banks:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBank_Simple_Nats'
        wallet:
          $ref: '#/components/schemas/Wallet_Simple_Nats'
        walletLoan:
          $ref: '#/components/schemas/WalletLoan_Simple_Nats'
        firstName:
          type: string
        middleName:
          type: string
        fullName:
          type: string
        demo:
          type: boolean
        kycPrivate:
          $ref: '#/components/schemas/CustomerKyc_Simple_Nats'
        salutation:
          $ref: '#/components/schemas/Salutation_Simple_Nats'
        passport:
          $ref: '#/components/schemas/Media_Simple_Nats'
        sourceOfFundPrivate:
          $ref: '#/components/schemas/SourceOfFund_Simple_Nats'
        openAccountReasonPrivate:
          $ref: '#/components/schemas/OpenAccountReason_Simple_Nats'
        ktp:
          $ref: '#/components/schemas/Media_Simple_Nats'
        selfie:
          $ref: '#/components/schemas/Media_Simple_Nats'
    Data:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
        updated:
          type: string
        status:
          type: string
        type:
          type: string
        result:
          $ref: '#/components/schemas/Result'
        reference_id:
          type: string
        failure_reason: {}
    DevelopmentStatus:
      enum:
      - 0
      - 100
      - 200
      type: string
    DevelopmentStatus_Simple_Nats:
      enum:
      - 0
      - 100
      - 200
      type: string
    DividendProductStatus:
      enum:
      - 0
      - 200
      - 201
      type: string
    DividendProperty:
      description: Dividend Property
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoiceProperty:
          description: Relation to Invoice Property on column invoice_property_id
          type: object
          allOf:
          - $ref: '#/components/schemas/InvoiceProperty'
          example: 1
        loanInterest:
          type: number
        fixedOperationalFee:
          description: Fixed operational cost.
          type: number
        status:
          $ref: '#/components/schemas/DividendPropertyStatus'
        dividendDate:
          $ref: '#/components/schemas/LocalDateTime'
        month:
          format: int32
          type: integer
          example: 5
        year:
          format: int32
          type: integer
          example: 2022
        onlineTravelAgency:
          $ref: '#/components/schemas/OnlineTravelAgency'
        totalRate:
          description: 10% of asset rate.
          type: number
        assetRate:
          description: Base asset room value.
          type: number
        serviceCharge:
          description: 10% of asset rate.
          type: number
        pb1:
          description: PB1 tax.
          type: number
        netRoomRate:
          description: Net Rate. Final daily room rate nett.
          type: number
        earningBeforeTax:
          description: Earning before tax.
          type: number
        netRevenue:
          description: Net Revenue. Daily revenue nett.
          type: number
        otaFee:
          description: Travel agent fee.
          type: number
        otaTaxFee:
          description: Travel agent tax fee.
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        yodaStatus:
          $ref: '#/components/schemas/YodaRoomStatus'
    DividendPropertyMonthly:
      description: Dividend Property monthly
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoice:
          $ref: '#/components/schemas/InvoiceProperty'
        month:
          format: int32
          type: integer
          example: 5
        year:
          format: int32
          type: integer
          example: 2022
        status:
          $ref: '#/components/schemas/DividendStatus'
        dividendDate:
          $ref: '#/components/schemas/LocalDateTime'
        netRoomRate:
          description: Net Room Rate Or GOP = SUM day 1 s/d day 28 / 29 / 30 / 31
            (depends on the month)
          type: number
        managementFee:
          description: Management Fee = 20% x Net Rate
          type: number
        ebit:
          description: Earning Before Interest and Tax (EBIT) = Net Room Rate - Management
            Fee
          type: number
        interestFee:
          description: Interest Fee = 7.5% / 365 x (28 / 29 / 30 / 31 (depends on
            the month)) x Debt Value
          type: number
        ebt:
          description: Earning Before Tax (EBT) = EBIT - Interest Fee
          type: number
        corporateTax:
          description: Earning Tax = 22% x EBT
          type: number
        netIncome:
          description: Net Operation Profit After Tax (NOPAT) or Net Income or FCF
            = EBT - Corporate Tax
          type: number
        opex:
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
    DividendPropertyStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    DividendStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    DueDiligence:
      description: Due Diligence
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        eoiModular:
          $ref: '#/components/schemas/EoiModular'
        dueDiligenceReport:
          $ref: '#/components/schemas/DueDiligenceReport'
        dueDiligenceTimeline:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligenceTimeline'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligencePayment'
        salesTimeline:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligenceSalesTimeline'
        status:
          $ref: '#/components/schemas/DueDiligenceStatus'
        publish:
          type: boolean
        invoiceStatus:
          $ref: '#/components/schemas/InvoiceStatus'
        projectStatus:
          $ref: '#/components/schemas/ProjectStatus'
        projectManagementRateCommision:
          type: number
        salesRateCommision:
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedBy:
          type: string
    DueDiligencePayment:
      description: Due Diligence Payment
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        year:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        invoiceDevelopment:
          type: number
        projectDevelopment:
          type: number
        invoiceFile:
          $ref: '#/components/schemas/Media'
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedBy:
          type: string
    DueDiligenceReport:
      description: Due Diligence Report
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        report:
          description: reporting media
          type: object
          allOf:
          - $ref: '#/components/schemas/Media'
          example: pdf
        preDevelopmentCost:
          description: Pre Development Cost
          type: array
          items:
            $ref: '#/components/schemas/GenericItem'
        modularCost:
          description: Modular Cost
          type: array
          items:
            $ref: '#/components/schemas/GenericItem'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedBy:
          type: string
        totalPredevelopmentCost:
          type: number
        totalModularCost:
          type: number
        purchasePrice:
          type: number
    DueDiligenceRequest:
      type: object
      properties:
        dueDiligenceReport:
          $ref: '#/components/schemas/DueDiligenceReport'
        dueDiligenceTimeline:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligenceTimeline'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligencePayment'
        salesTimeline:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligenceSalesTimeline'
        publish:
          type: boolean
        projectManagementRateCommision:
          type: number
        salesRateCommision:
          type: number
    DueDiligenceResponse:
      type: object
      properties:
        code:
          type: string
        eoiModular:
          $ref: '#/components/schemas/EoiModular'
        dueDiligenceReport:
          $ref: '#/components/schemas/DueDiligenceReport'
    DueDiligenceSalesTimeline:
      description: Due Diligence Sales Timeline
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        year:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        salesRevenue:
          type: number
        salesCommission:
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedBy:
          type: string
        netIncome:
          type: number
    DueDiligenceStatus:
      enum:
      - 0
      - 100
      - 200
      - 400
      type: string
    DueDiligenceTimeline:
      description: Due Diligence Timeline
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        year:
          format: int32
          type: integer
        month:
          format: int32
          type: integer
        description:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedBy:
          type: string
        active:
          type: boolean
    EmergencyContactBess:
      description: Related to base
      type: object
      properties:
        name:
          description: Emergency Contact Name
          type: string
          example: John Doe
        phone:
          description: Emergency Contact Phone
          type: string
          example: "08123456789"
        officePhone:
          description: Emergency Contact Phone
          type: string
          example: "08123456789"
        addressAreaCode:
          description: Emergency Contact Area Code
          type: string
          example: 0A.02.03.02
        address:
          description: Emergency Address
          type: string
          example: "Jl. Jend. Sudirman No.Kav 54-55, RT.5/RW.3, Senayan, Kec. Kby.\
            \ Baru, Kota Jakarta Selatan, Daerah Khusus Ibukota Jakarta 12190"
        number:
          description: Emergency Address number
          type: string
          example: "10"
        rtRw:
          description: Emergency Address RT/RW
          type: string
          example: 01/01
        city:
          description: city
          type: string
          example: Jakarta Selatan
        subDistrict:
          description: sub district
          type: string
          example: Kebayoran Baru
        province:
          description: province
          type: string
          example: DKI JAKARTA
        postalCode:
          description: postal code
          type: string
          example: "11730"
        ward:
          description: ""
          type: string
          example: Kebayoran
    EmergencyContactBess_Expanded_Simple_Nats:
      description: Related to base
      type: object
      properties:
        name:
          description: Emergency Contact Name
          type: string
          example: John Doe
        phone:
          description: Emergency Contact Phone
          type: string
          example: "08123456789"
        officePhone:
          description: Emergency Contact Phone
          type: string
          example: "08123456789"
        addressAreaCode:
          description: Emergency Contact Area Code
          type: string
          example: 0A.02.03.02
        address:
          description: Emergency Address
          type: string
          example: "Jl. Jend. Sudirman No.Kav 54-55, RT.5/RW.3, Senayan, Kec. Kby.\
            \ Baru, Kota Jakarta Selatan, Daerah Khusus Ibukota Jakarta 12190"
        number:
          description: Emergency Address number
          type: string
          example: "10"
        rtRw:
          description: Emergency Address RT/RW
          type: string
          example: 01/01
        city:
          description: city
          type: string
          example: Jakarta Selatan
        subDistrict:
          description: sub district
          type: string
          example: Kebayoran Baru
        province:
          description: province
          type: string
          example: DKI JAKARTA
        postalCode:
          description: postal code
          type: string
          example: "11730"
        ward:
          description: ""
          type: string
          example: Kebayoran
    EmergencyContactBess_Simple_Nats:
      description: Related to base
      type: object
      properties:
        name:
          description: Emergency Contact Name
          type: string
          example: John Doe
        phone:
          description: Emergency Contact Phone
          type: string
          example: "08123456789"
        officePhone:
          description: Emergency Contact Phone
          type: string
          example: "08123456789"
        addressAreaCode:
          description: Emergency Contact Area Code
          type: string
          example: 0A.02.03.02
        address:
          description: Emergency Address
          type: string
          example: "Jl. Jend. Sudirman No.Kav 54-55, RT.5/RW.3, Senayan, Kec. Kby.\
            \ Baru, Kota Jakarta Selatan, Daerah Khusus Ibukota Jakarta 12190"
        number:
          description: Emergency Address number
          type: string
          example: "10"
        rtRw:
          description: Emergency Address RT/RW
          type: string
          example: 01/01
        city:
          description: city
          type: string
          example: Jakarta Selatan
        subDistrict:
          description: sub district
          type: string
          example: Kebayoran Baru
        province:
          description: province
          type: string
          example: DKI JAKARTA
        postalCode:
          description: postal code
          type: string
          example: "11730"
        ward:
          description: ""
          type: string
          example: Kebayoran
    EoiModular:
      description: Modular EOI.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        modular:
          $ref: '#/components/schemas/Modular'
        account:
          $ref: '#/components/schemas/Account'
        invoiceEstimationModular:
          $ref: '#/components/schemas/InvoiceEstimationModular'
        invoiceModular:
          $ref: '#/components/schemas/InvoiceModular'
        variant:
          type: array
          items:
            $ref: '#/components/schemas/VariantModular'
        questionnaire:
          type: array
          items:
            $ref: '#/components/schemas/Questionnaire'
        status:
          $ref: '#/components/schemas/ApprovalGeneralStatus'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
    EoiModular1:
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    EoiModularRequest:
      type: object
      properties:
        modular:
          $ref: '#/components/schemas/Modular'
        account:
          $ref: '#/components/schemas/Account'
        variant:
          type: array
          items:
            $ref: '#/components/schemas/VariantModular'
        questionnaire:
          type: array
          items:
            $ref: '#/components/schemas/Questionnaire'
        salePrice:
          type: number
        vat:
          type: number
        mortgageFee:
          type: number
        purchasePrice:
          type: number
        totalLoan:
          type: number
        totalEquity:
          type: number
        applicationFee:
          type: number
        voucherCode:
          type: string
        nameApplier:
          type: string
        emailApplier:
          type: string
        mobileApplier:
          type: string
    EoiNonRoom:
      description: EOI Non Room.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        nonRoom:
          $ref: '#/components/schemas/NonRoom'
        account:
          $ref: '#/components/schemas/Account'
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        cash:
          description: Down Payment
          type: number
          example: 1000000000
        loan:
          description: Loan Request
          type: number
          example: 1000000000
        hasValidInvoice:
          type: boolean
        snapshot:
          description: Snapshot of the Hospitality for this transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/NonRoom'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
        status:
          $ref: '#/components/schemas/ApprovalGeneralStatus'
        zohoDeal:
          $ref: '#/components/schemas/ZohoDeal'
    EoiProperty:
      description: Property EOI.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        property:
          $ref: '#/components/schemas/Property'
        account:
          $ref: '#/components/schemas/Account'
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
        cash:
          description: Down Payment
          type: number
          example: 1000000000
        loan:
          description: Loan Request
          type: number
          example: 1000000000
        hasValidInvoice:
          type: boolean
        snapshot:
          description: Snapshot of the property for this transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/Property'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
        status:
          $ref: '#/components/schemas/ApprovalGeneralStatus'
        zohoDeal:
          $ref: '#/components/schemas/ZohoDeal'
        propertyId:
          format: int64
          type: integer
    EoiPropertyResponse_Simple_Nats:
      type: object
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        property:
          $ref: '#/components/schemas/Property_Simple_Nats'
        cash:
          type: number
        loan:
          type: number
        hasValidInvoice:
          type: boolean
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        createdBy:
          type: string
        updatedBy:
          type: string
        status:
          $ref: '#/components/schemas/ApprovalGeneralStatus_Simple_Nats'
    EquityHospitalityResponse:
      type: object
      properties:
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        transactionHistory:
          $ref: '#/components/schemas/TransactionHistoryResponse'
        transactionHistoryLoan:
          $ref: '#/components/schemas/TransactionHistoryResponse'
    EquityPropertyResponse:
      type: object
      properties:
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
        transactionHistory:
          $ref: '#/components/schemas/TransactionHistoryResponse'
        transactionHistoryLoan:
          $ref: '#/components/schemas/TransactionHistoryResponse'
    ErrorCode:
      enum:
      - ERROR_GENERIC
      - ERROR_ENTITY
      - ERROR_NOT_FOUND_GENERIC
      - ERROR_NOT_FOUND_USER
      - ERROR_NOT_FOUND_PROPERTY
      - ERROR_NOT_FOUND_FIXED_INCOME_BANK
      - ERROR_NOT_FOUND_WALLET_TX
      - ERROR_NOT_FOUND_WITHDRAWAL_BANK
      - ERROR_NOT_FOUND_WALLET
      - ERROR_NOT_FOUND_ROLE
      - ERROR_NOT_FOUND_MENU_AUTHORITY
      - ERROR_NOT_FOUND_PROJECT_MONTHLY_UPDATE
      - ERROR_NOT_FOUND_SPECIFICATION
      - ERROR_NOT_FOUND_PAY_LOAN
      - ERROR_NOT_FOUND_COMPANY
      - ERROR_NOT_FOUND_DIVIDEND_PROPERTY
      - ERROR_NOT_FOUND_SHARED_DIVIDEND_PROPERTY
      - ERROR_NOT_FOUND_SHARED_DIVIDEND_MODULAR
      - ERROR_NOT_FOUND_INVOICE
      - ERROR_NOT_FOUND_INVOICE_PAYMENT
      - ERROR_NOT_FOUND_EOI_PROPERTY
      - ERROR_NOT_FOUND_WALLET_LOAN
      - ERROR_NOT_FOUND_NOTIFICATION
      - ERROR_NOT_FOUND_OTA
      - ERROR_NOT_FOUND_SCREENER_PROPERTY
      - ERROR_NOT_FOUND_NON_ROOM
      - ERROR_NOT_FOUND_REVENUE_NON_ROOM
      - ERROR_NOT_FOUND_ANNOUNCEMENT
      - ERROR_NOT_FOUND_CORPORATION
      - ERROR_NOT_FOUND_CUSTOMER_DETAIL_ACCOUNT
      - ERROR_NOT_FOUND_STAFF_COMPANY
      - ERROR_NOT_FOUND_LOAN_APPROVAL
      - ERROR_NOT_FOUND_ROLE_COMPANY
      - ERROR_NOT_FOUND_ACCOUNT
      - ERROR_NOT_FOUND_BRAND
      - ERROR_NOT_FOUND_VARIANT_MODULAR
      - ERROR_NOT_FOUND_MODULAR
      - ERROR_NOT_FOUND_ACADEMY
      - ERROR_NOT_FOUND_PROMO_PROGRAM
      - ERROR_NOT_FOUND_VOUCHER
      - ERROR_NOT_FOUND_PROMO_BUDGETING
      - ERROR_NOT_FOUND_PROMOTION
      - ERROR_NOT_FOUND_PROMOTION_CUSTOMER
      - ERROR_NOT_FOUND_HISTORY_VOUCHER
      - ERROR_NOT_FOUND_PROMO_BUDGETING_HISTORY
      - ERROR_NOT_FOUND_DUE_DILIGENCE
      - ERROR_NOT_FOUND_REVENUE
      - ERROR_NOT_FOUND_PROPERTY_ACCOUNT
      - ERROR_NOT_FOUND_NON_ROOM_ACCOUNT
      - ERROR_NOT_FOUND_EOI_NON_ROOM
      - ERROR_NOT_FOUND_REVENUE_NON_ROOM_MONTHLY
      - ERROR_NOT_FOUND_FILE
      - ERROR_NOT_FOUND_ASSET
      - ERROR_DUPLICATE_GENERIC
      - ERROR_DUPLICATE_TRANSACTION
      - ERROR_DUPLICATE_INVOICE
      - ERROR_MISSING_PARAM_GENERIC
      - ERROR_IN_USE_GENERIC
      - ERROR_IN_USE_PROMOTION
      - ERROR_PROMOTION_EXPIRED
      - ERROR_INVALID_GENERIC
      - ERROR_NOTHING_TO_VERIFY
      - ERROR_INVALID_PIN
      - ERROR_INVALID_EOI
      - ERROR_EMAIL_TAKEN
      - ERROR_INVALID_COMPANY_AUTHORIZATION
      - ERROR_INVALID_ACCOUNT_AUTHORIZATION
      - ERROR_INVALID_UPDATE
      - ERROR_NOT_VERIFY
      - ERROR_INVALID_VOUCHER
      - ERROR_AUTHENTICATION_GENERIC
      - ERROR_AUTHENTICATION_COMPANY
      - ERROR_OTP_MARK_FAILED_X
      - ERROR_OTP_MARK_IP_X
      - ERROR_OCR_GENERIC
      - ERROR_OCR_INVALID_DOCUMENT
      - ERROR_FACE_COMPARISON
      - ERROR_KYC_GENERIC
      - ERROR_RDF_GENERIC
      - ERROR_FIREBASE_GENERIC
      - ERROR_MOBILE_EXISTS
      - ERROR_MOBILE_EXISTS_VERIFY
      - ERROR_EMAIL_EXISTS
      - ERROR_EMAIL_EXISTS_VERIFY
      - ERROR_EMAIL_NOT_EXISTS
      - ERROR_EMAIL_NOT_VALID
      - ERROR_WRONG_KEY_RESET_PASSWORD
      - ERROR_ACCOUNT_INACTIVE
      - ERROR_TXN_STATUS
      - ERROR_INSUFFICIENT_WALLET
      - ERROR_INSUFFICIENT_WALLET_LOAN
      - ERROR_INSUFFICIENT_NOMINAL_BUDGET
      - ERROR_INSUFFICIENT_WALLET_MINIMUM
      - ERROR_NO_PERMISSION_BANK_ACCESS
      - ERROR_KIND_WALLET
      - ERROR_KIND_WALLET_TX
      - ERROR_STATUS_WALLET_TX
      - ERROR_STATUS_INSTALMENT
      - ERROR_STATUS_PAY_LOAN
      - ERROR_STATUS_FOREIGNER
      - ERROR_PRIVY_GENERIC
      - ERROR_PRIVY_REGISTER
      - ERROR_PRIVY_STATUS
      - ERROR_PRIVY_DOCUMENT_SEND
      - ERROR_PRIVY_DOCUMENT_SIGN
      - ERROR_GOOGLE_ANALYTIC
      - ERROR_ZOHO_LEAD
      - ERROR_ZOHO_PRODUCT
      - ERROR_BFS
      - ERROR_AKK_COMPANY_EXIST
      - ERROR_AKK_APPLICATION_NOT_EXIST
      - ERROR_JAMINAN_EXIST
      - ERROR_NOT_FOUND_AREA
      type: string
    ErrorCode_Expanded_Simple_Nats:
      enum:
      - ERROR_GENERIC
      - ERROR_ENTITY
      - ERROR_NOT_FOUND_GENERIC
      - ERROR_NOT_FOUND_USER
      - ERROR_NOT_FOUND_PROPERTY
      - ERROR_NOT_FOUND_FIXED_INCOME_BANK
      - ERROR_NOT_FOUND_WALLET_TX
      - ERROR_NOT_FOUND_WITHDRAWAL_BANK
      - ERROR_NOT_FOUND_WALLET
      - ERROR_NOT_FOUND_ROLE
      - ERROR_NOT_FOUND_MENU_AUTHORITY
      - ERROR_NOT_FOUND_PROJECT_MONTHLY_UPDATE
      - ERROR_NOT_FOUND_SPECIFICATION
      - ERROR_NOT_FOUND_PAY_LOAN
      - ERROR_NOT_FOUND_COMPANY
      - ERROR_NOT_FOUND_DIVIDEND_PROPERTY
      - ERROR_NOT_FOUND_SHARED_DIVIDEND_PROPERTY
      - ERROR_NOT_FOUND_SHARED_DIVIDEND_MODULAR
      - ERROR_NOT_FOUND_INVOICE
      - ERROR_NOT_FOUND_INVOICE_PAYMENT
      - ERROR_NOT_FOUND_EOI_PROPERTY
      - ERROR_NOT_FOUND_WALLET_LOAN
      - ERROR_NOT_FOUND_NOTIFICATION
      - ERROR_NOT_FOUND_OTA
      - ERROR_NOT_FOUND_SCREENER_PROPERTY
      - ERROR_NOT_FOUND_NON_ROOM
      - ERROR_NOT_FOUND_REVENUE_NON_ROOM
      - ERROR_NOT_FOUND_ANNOUNCEMENT
      - ERROR_NOT_FOUND_CORPORATION
      - ERROR_NOT_FOUND_CUSTOMER_DETAIL_ACCOUNT
      - ERROR_NOT_FOUND_STAFF_COMPANY
      - ERROR_NOT_FOUND_LOAN_APPROVAL
      - ERROR_NOT_FOUND_ROLE_COMPANY
      - ERROR_NOT_FOUND_ACCOUNT
      - ERROR_NOT_FOUND_BRAND
      - ERROR_NOT_FOUND_VARIANT_MODULAR
      - ERROR_NOT_FOUND_MODULAR
      - ERROR_NOT_FOUND_ACADEMY
      - ERROR_NOT_FOUND_PROMO_PROGRAM
      - ERROR_NOT_FOUND_VOUCHER
      - ERROR_NOT_FOUND_PROMO_BUDGETING
      - ERROR_NOT_FOUND_PROMOTION
      - ERROR_NOT_FOUND_PROMOTION_CUSTOMER
      - ERROR_NOT_FOUND_HISTORY_VOUCHER
      - ERROR_NOT_FOUND_PROMO_BUDGETING_HISTORY
      - ERROR_NOT_FOUND_DUE_DILIGENCE
      - ERROR_NOT_FOUND_REVENUE
      - ERROR_NOT_FOUND_PROPERTY_ACCOUNT
      - ERROR_NOT_FOUND_NON_ROOM_ACCOUNT
      - ERROR_NOT_FOUND_EOI_NON_ROOM
      - ERROR_NOT_FOUND_REVENUE_NON_ROOM_MONTHLY
      - ERROR_NOT_FOUND_FILE
      - ERROR_NOT_FOUND_ASSET
      - ERROR_DUPLICATE_GENERIC
      - ERROR_DUPLICATE_TRANSACTION
      - ERROR_DUPLICATE_INVOICE
      - ERROR_MISSING_PARAM_GENERIC
      - ERROR_IN_USE_GENERIC
      - ERROR_IN_USE_PROMOTION
      - ERROR_PROMOTION_EXPIRED
      - ERROR_INVALID_GENERIC
      - ERROR_NOTHING_TO_VERIFY
      - ERROR_INVALID_PIN
      - ERROR_INVALID_EOI
      - ERROR_EMAIL_TAKEN
      - ERROR_INVALID_COMPANY_AUTHORIZATION
      - ERROR_INVALID_ACCOUNT_AUTHORIZATION
      - ERROR_INVALID_UPDATE
      - ERROR_NOT_VERIFY
      - ERROR_INVALID_VOUCHER
      - ERROR_AUTHENTICATION_GENERIC
      - ERROR_AUTHENTICATION_COMPANY
      - ERROR_OTP_MARK_FAILED_X
      - ERROR_OTP_MARK_IP_X
      - ERROR_OCR_GENERIC
      - ERROR_OCR_INVALID_DOCUMENT
      - ERROR_FACE_COMPARISON
      - ERROR_KYC_GENERIC
      - ERROR_RDF_GENERIC
      - ERROR_FIREBASE_GENERIC
      - ERROR_MOBILE_EXISTS
      - ERROR_MOBILE_EXISTS_VERIFY
      - ERROR_EMAIL_EXISTS
      - ERROR_EMAIL_EXISTS_VERIFY
      - ERROR_EMAIL_NOT_EXISTS
      - ERROR_EMAIL_NOT_VALID
      - ERROR_WRONG_KEY_RESET_PASSWORD
      - ERROR_ACCOUNT_INACTIVE
      - ERROR_TXN_STATUS
      - ERROR_INSUFFICIENT_WALLET
      - ERROR_INSUFFICIENT_WALLET_LOAN
      - ERROR_INSUFFICIENT_NOMINAL_BUDGET
      - ERROR_INSUFFICIENT_WALLET_MINIMUM
      - ERROR_NO_PERMISSION_BANK_ACCESS
      - ERROR_KIND_WALLET
      - ERROR_KIND_WALLET_TX
      - ERROR_STATUS_WALLET_TX
      - ERROR_STATUS_INSTALMENT
      - ERROR_STATUS_PAY_LOAN
      - ERROR_STATUS_FOREIGNER
      - ERROR_PRIVY_GENERIC
      - ERROR_PRIVY_REGISTER
      - ERROR_PRIVY_STATUS
      - ERROR_PRIVY_DOCUMENT_SEND
      - ERROR_PRIVY_DOCUMENT_SIGN
      - ERROR_GOOGLE_ANALYTIC
      - ERROR_ZOHO_LEAD
      - ERROR_ZOHO_PRODUCT
      - ERROR_BFS
      - ERROR_AKK_COMPANY_EXIST
      - ERROR_AKK_APPLICATION_NOT_EXIST
      - ERROR_JAMINAN_EXIST
      - ERROR_NOT_FOUND_AREA
      type: string
    Fcm:
      description: "Firebase Cloud Messaging (FCM) token passed from client, categorized\
        \ by `kind` (e.g. `A` for Android)."
      required:
      - code
      - kind
      type: object
      properties:
        code:
          type: string
          example: (random code)
        kind:
          $ref: '#/components/schemas/FcmKind'
    FcmKind:
      enum:
      - A
      - I
      - W
      type: string
    FcmKind_Simple_Nats:
      enum:
      - A
      - I
      - W
      type: string
    Fcm_Simple_Nats:
      description: "Firebase Cloud Messaging (FCM) token passed from client, categorized\
        \ by `kind` (e.g. `A` for Android)."
      required:
      - code
      - kind
      type: object
      properties:
        code:
          type: string
          example: (random code)
        kind:
          $ref: '#/components/schemas/FcmKind_Simple_Nats'
    FixedIncomeBank:
      description: Banks used in Fixed Income.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        logo:
          description: Logo attached to this bank. Use the other API to add logo.
          type: object
          allOf:
          - $ref: '#/components/schemas/Media'
        description:
          description: Description bank
          type: string
          example: Bank Central Asia
        status:
          description: Publish Status of Bank
          enum:
          - DRAFT
          - ACTIVE
          - DEACTIVE
          type: string
          example: DRAFT
    Gender:
      enum:
      - M
      - F
      type: string
    Gender_Simple_Nats:
      enum:
      - M
      - F
      type: string
    GenericCustomer:
      type: object
      properties:
        code:
          description: Customer Code
          type: string
          example: h6csdxLxcPa33jnFCxAgYBu08q62
        name:
          description: Customer Name
          type: string
          example: Lesley
    GenericItem:
      type: object
      properties:
        name:
          description: item name
          type: string
          example: road or bathroom
        amount:
          description: item amount
          type: number
          example: 100000
    GenericResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    GenericResponse_Simple_Nats:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    GuestFcms:
      description: Guest FCMS.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        fcm:
          type: string
        deviceId:
          type: string
    HistoryVoucher:
      description: History Voucher.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        customer:
          description: Relation to Customer on customer_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Customer'
          example: 5
        voucher:
          description: Relation to Voucher
          type: object
          allOf:
          - $ref: '#/components/schemas/Voucher'
          example: 1
        billingInvoice:
          description: Relation to Billing Invoice
          type: object
          allOf:
          - $ref: '#/components/schemas/BillingInvoice'
          example: 2
        amount:
          description: Amount voucher
          type: number
          example: 5000000
        createdAt:
          description: Record the time when History Voucher created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created History Voucher
          type: string
          example: customer
    HomeHospitalityAllResponse:
      type: object
      properties:
        memberDate:
          $ref: '#/components/schemas/LocalDate'
        netIncome:
          type: number
        growth:
          type: number
        portfolioList:
          type: array
          items:
            type: object
            additionalProperties: {}
    HomeHospitalityDailyResponse:
      type: object
      properties:
        revenueDate:
          $ref: '#/components/schemas/LocalDate'
        itemRevenue:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        total:
          type: number
        fixedFee:
          type: number
        revenue:
          type: number
        portfolioList:
          type: array
          items:
            type: object
            additionalProperties: {}
    HomeHospitalityMonthlyResponse:
      type: object
      properties:
        revenueDate:
          $ref: '#/components/schemas/LocalDate'
        netIncome:
          type: number
        revenue:
          type: number
        costOfGoodsSold:
          type: number
        total:
          type: number
        managementFee:
          type: number
        earningBeforeTax:
          type: number
        corporateTax:
          type: number
        portfolioList:
          type: array
          items:
            type: object
            additionalProperties: {}
    HomeHospitalityResponse:
      type: object
      properties:
        daily:
          $ref: '#/components/schemas/HomeHospitalityDailyResponse'
        monthly:
          $ref: '#/components/schemas/HomeHospitalityMonthlyResponse'
        all:
          $ref: '#/components/schemas/HomeHospitalityAllResponse'
    HomeResponse:
      type: object
      properties:
        room:
          $ref: '#/components/schemas/HomeRoomResponse'
        hospitality:
          $ref: '#/components/schemas/HomeHospitalityResponse'
        demo:
          type: boolean
        walletDemo:
          type: boolean
        walletLoanDemo:
          type: boolean
    HomeRoomAllResponse:
      type: object
      properties:
        memberDate:
          $ref: '#/components/schemas/LocalDate'
        occupancyRate:
          type: number
        netIncome:
          type: number
        growth:
          type: number
        roomOccupied:
          format: int64
          type: integer
        roomOwn:
          format: int64
          type: integer
        portfolioList:
          type: array
          items:
            type: object
            additionalProperties: {}
    HomeRoomDailyResponse:
      type: object
      properties:
        revenueDate:
          $ref: '#/components/schemas/LocalDate'
        occupancyRate:
          type: number
        totalRate:
          type: number
        netRoomRate:
          type: number
        serviceCharge:
          type: number
        restaurantHotelTax:
          type: number
        bookingAgentFee:
          type: number
        valueAddedTax:
          type: number
        fixedOperationalFee:
          type: number
        income:
          type: number
        roomOccupied:
          format: int64
          type: integer
        roomOwn:
          format: int64
          type: integer
        portfolioList:
          type: array
          items:
            type: object
            additionalProperties: {}
    HomeRoomMonthlyResponse:
      type: object
      properties:
        revenueDate:
          $ref: '#/components/schemas/LocalDate'
        occupancyRate:
          type: number
        netIncome:
          type: number
        totalIncome:
          type: number
        managementFee:
          type: number
        earningBeforeInterestTax:
          type: number
        interestFee:
          type: number
        earningBeforeTax:
          type: number
        corporateTax:
          type: number
        opex:
          type: number
        roomOccupied:
          format: int64
          type: integer
        roomOwn:
          format: int64
          type: integer
        portfolioList:
          type: array
          items:
            type: object
            additionalProperties: {}
    HomeRoomResponse:
      type: object
      properties:
        daily:
          $ref: '#/components/schemas/HomeRoomDailyResponse'
        monthly:
          $ref: '#/components/schemas/HomeRoomMonthlyResponse'
        all:
          $ref: '#/components/schemas/HomeRoomAllResponse'
    HospitalityDailyRevenueResponse:
      type: object
      properties:
        dailyDate:
          type: string
        netRevenue:
          type: number
        name:
          type: string
        code:
          type: string
        imageUrl:
          type: string
    HospitalityPortfolioResponse:
      type: object
      properties:
        revenueDate:
          type: string
        totalRevenue:
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/HospitalityDailyRevenueResponse'
    Info:
      description: Copy in the app that needs to be loaded from the server (not hardcoded).
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        active:
          type: boolean
        logo:
          $ref: '#/components/schemas/Media'
        kind:
          $ref: '#/components/schemas/InfoKind'
        items:
          description: Items.
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
    InfoItem:
      description: Item for the info.
      required:
      - title
      - content
      type: object
      properties:
        title:
          type: string
          example: Mobile Banking
        content:
          type: string
          example: Access your **mobile banking app** from your mobile phone.
    InfoItem_Simple_Nats:
      description: Item for the info.
      required:
      - title
      - content
      type: object
      properties:
        title:
          type: string
          example: Mobile Banking
        content:
          type: string
          example: Access your **mobile banking app** from your mobile phone.
    InfoKind:
      enum:
      - TUB
      - RSD
      - FO
      - VC
      type: string
    InfoKind_Simple_Nats:
      enum:
      - TUB
      - RSD
      - FO
      - VC
      type: string
    Info_Simple_Nats:
      description: Copy in the app that needs to be loaded from the server (not hardcoded).
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        active:
          type: boolean
        logo:
          $ref: '#/components/schemas/Media_Simple_Nats'
        kind:
          $ref: '#/components/schemas/InfoKind_Simple_Nats'
        items:
          description: Items.
          type: array
          items:
            $ref: '#/components/schemas/InfoItem_Simple_Nats'
    InputPart:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/MultivaluedMapStringString'
        bodyAsString:
          type: string
        body:
          format: binary
          type: string
        fileName:
          type: string
        mediaType:
          $ref: '#/components/schemas/MediaType'
        contentTypeFromMessage:
          type: boolean
    InvoiceAmountHistory:
      type: object
      properties:
        code:
          type: string
        date:
          $ref: '#/components/schemas/OffsetDateTime'
        amount:
          type: number
    InvoiceAmountResponse:
      type: object
      properties:
        amount:
          type: number
        paidAmount:
          type: number
        payments:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceAmountHistory'
        remainingAmount:
          type: number
    InvoiceDetailResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        status:
          type: object
          additionalProperties:
            type: string
        paymentStatus:
          type: object
          additionalProperties:
            type: string
        date:
          $ref: '#/components/schemas/OffsetDateTime'
        purchasePrice:
          type: number
        mortgageFee:
          type: number
        grandTotal:
          type: number
        totalLoan:
          type: number
        totalEquity:
          type: number
        equity:
          $ref: '#/components/schemas/InvoiceAmountResponse'
        loan:
          $ref: '#/components/schemas/InvoiceAmountResponse'
        url:
          type: string
    InvoiceDueDiligence:
      description: Invoice Due Diligence
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        dueDiligence:
          $ref: '#/components/schemas/DueDiligence'
        amount:
          type: number
        voucherCode:
          type: string
        voucherAmount:
          type: number
        totalPayment:
          type: number
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
    InvoiceEstimationModular:
      description: Invoice Estimation Modular
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        salePrice:
          type: number
        vat:
          type: number
        mortgageFee:
          type: number
        purchasePrice:
          type: number
        totalLoan:
          type: number
        totalEquity:
          type: number
        applicationFee:
          type: number
        totalPayment:
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
    InvoiceKind:
      enum:
      - DDM
      - LIP
      - LPP
      - CPP
      - CPH
      type: string
    InvoiceLoanRemaining:
      description: Invoice Loan Remaining.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        loanRemaining:
          description: Loan Amount Remaining
          type: number
          example: "10,000,000"
        invoiceCode:
          description: Invoice Code
          type: string
          example: INV-PR-0007030
        invoiceId:
          format: int64
          description: Invoice Id
          type: integer
          example: 2
        createdAt:
          description: Record the time when Invoice created
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Invoice
          type: string
          example: admin
    InvoiceModular:
      description: Invoice Modular
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        purchasePrice:
          description: Purchase Price
          type: number
          example: 1000000000
        mortgageFee:
          description: Mortgage Fee
          type: number
          example: 1000000000
        totalLoan:
          description: Total Loan
          type: number
          example: 1000000000
        totalEquity:
          description: Total Equity
          type: number
          example: 1000000000
        totalLoanRepaid:
          description: Total Loan Repaid
          type: number
          example: 1000000000
        cashPaymentStatus:
          description: "Cash Payment status contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        loanPaymentStatus:
          description: "Loan Payment status contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        invoiceStatus:
          description: "Invoice status (Final status based on Cash Payment Status\
            \ and Loan Payment Status) contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        createdAt:
          description: Record the time when Invoice created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Invoice
          type: string
          example: admin
        updatedBy:
          description: Record the user who updated Invoice
          type: string
          example: admin
        grandTotal:
          type: number
    InvoiceModular1:
      type: object
      properties:
        code:
          type: string
    InvoiceModularRequest:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account2'
        eoiModular:
          $ref: '#/components/schemas/EoiModular1'
        mortgageFee:
          type: number
        totalLoan:
          type: number
        totalEquity:
          type: number
    InvoiceNonRoom:
      description: Invoice Non Room.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        eoiNonRoom:
          $ref: '#/components/schemas/EoiNonRoom'
        projectPrice:
          description: Non Room Value
          type: number
          example: 1000000000
        loanAmount:
          description: Loan Request
          type: number
          example: 1000000000
        loanPercentage:
          format: float
          description: Loan Percentage
          type: number
          example: 0.7
        loanFee:
          description: Loan fee
          type: number
          example: 200000
        adminFee:
          description: Admin fee
          type: number
          example: 200000
        vat:
          description: VAT
          type: number
          example: 200000
        equity:
          description: equity
          type: number
          example: 200000
        totalInvoice:
          description: total invoice
          type: number
          example: 200000
        totalPaidInvoice:
          description: total paid invoice
          type: number
          example: 200000
        createdAt:
          description: Record the time when Invoice created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Invoice
          type: string
          example: admin
        updatedBy:
          description: Record the user who updated Invoice
          type: string
          example: admin
        cashPaymentStatus:
          description: "Cash Payment status contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        loanPaymentStatus:
          description: "Loan Payment status contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        invoiceStatus:
          description: "Invoice status (Final status based on Cash Payment Status\
            \ and Loan Payment Status) contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        totalLoan:
          description: total loan for pay loan reduction
          type: number
          example: 2000000
    InvoiceNonRoom1:
      type: object
      properties:
        code:
          type: string
    InvoicePaymentHospitality:
      description: Invoice payment hospitality by customer.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        account:
          $ref: '#/components/schemas/Account'
        remainingAmount:
          description: Remaining Amount
          type: number
          example: 1000000000
        paymentAmount:
          description: Payment Amount
          type: number
          example: 1000000000
        paymentProof:
          $ref: '#/components/schemas/Media'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
    InvoicePaymentProperty:
      description: Invoice payment property by account.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
        account:
          $ref: '#/components/schemas/Account'
        remainingAmount:
          description: Remaining Amount
          type: number
          example: 1000000000
        paymentAmount:
          description: Payment Amount
          type: number
          example: 1000000000
        paymentProof:
          $ref: '#/components/schemas/Media'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        updatedBy:
          type: string
    InvoiceProperty:
      description: Invoice property that will be seen by customer.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        eoiProperty:
          $ref: '#/components/schemas/EoiProperty'
        projectPrice:
          description: Property Value
          type: number
          example: 1000000000
        loanAmount:
          description: Loan Request
          type: number
          example: 1000000000
        loanPercentage:
          format: float
          description: Loan Percentage
          type: number
          example: 0.7
        loanFee:
          description: Loan fee
          type: number
          example: 200000
        adminFee:
          description: Admin fee
          type: number
          example: 200000
        vat:
          description: VAT
          type: number
          example: 200000
        equity:
          description: equity
          type: number
          example: 200000
        totalInvoice:
          description: total invoice
          type: number
          example: 200000
        totalPaidInvoice:
          description: total paid invoice
          type: number
          example: 200000
        createdAt:
          description: Record the time when Invoice created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Invoice
          type: string
          example: admin
        updatedBy:
          description: Record the user who updated Invoice
          type: string
          example: admin
        cashPaymentStatus:
          description: "Cash Payment status contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        loanPaymentStatus:
          description: "Loan Payment status contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        invoiceStatus:
          description: "Invoice status (Final status based on Cash Payment Status\
            \ and Loan Payment Status) contains UNPAID, PENDING, PROCESSED, PAID_PARTIALLY,\
            \ PAID_ALL and CANCELLED"
          type: string
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          example: UNPAID
        totalLoan:
          description: total loan for pay loan reduction
          type: number
          example: 2000000
    InvoiceProperty1:
      type: object
      properties:
        code:
          type: string
    InvoicePropertyResponse_Simple_Nats:
      type: object
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        eoiProperty:
          $ref: '#/components/schemas/EoiPropertyResponse_Simple_Nats'
        projectPrice:
          type: number
        loanAmount:
          type: number
        loanPercentage:
          format: float
          type: number
        loanFee:
          type: number
        adminFee:
          type: number
        vat:
          type: number
        equity:
          type: number
        totalInvoice:
          type: number
        totalPaidInvoice:
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        createdBy:
          type: string
        updatedBy:
          type: string
        cashPaymentStatus:
          $ref: '#/components/schemas/InvoiceStatus_Simple_Nats'
        loanPaymentStatus:
          $ref: '#/components/schemas/InvoiceStatus_Simple_Nats'
        invoiceStatus:
          $ref: '#/components/schemas/InvoiceStatus_Simple_Nats'
        totalLoan:
          type: number
    InvoiceStatus:
      enum:
      - 200
      - 100
      - 300
      - 500
      - 400
      - 0
      type: string
    InvoiceStatus_Simple_Nats:
      enum:
      - 200
      - 100
      - 300
      - 500
      - 400
      - 0
      type: string
    ItemRevenue:
      type: object
      properties:
        item:
          description: Revenue item
          type: string
          example: Spa/Food/Beverages
        revenue:
          description: Revenue value
          type: number
          example: 5000000
    JobIndustry:
      enum:
      - PRIVATE_SECTOR_EMPLOYEE
      - STATE_OWNED_ENTERPRISE_EMPLOYEE
      - NATIONAL_MILITARY_OR_POLICE_OFFICER
      - BUSINESS_OWNER
      - TRADER
      - FARMER_OR_FISHERMAN
      - STUDENT
      - HOUSEWIFE
      - UNEMPLOYED
      - EMPLOYEE
      - ENTREPRENEUR
      - STATE_OFFICIAL
      - ACCOUNTANT
      - LAWYER_OR_NOTARY
      - PROFESSION
      - RETIREE
      - PRIVATE_LECTURER _OR_TEACHER
      - PUBLIC_LECTURER_OR_TEACHER
      - DOCTOR
      - BNI_EMPLOYEE
      - BNI_AFFILIATE_UNIT
      - GOVERNMENT_EMPLOYEE
      - OTHER
      type: string
    JobIndustry_Simple_Nats:
      enum:
      - PRIVATE_SECTOR_EMPLOYEE
      - STATE_OWNED_ENTERPRISE_EMPLOYEE
      - NATIONAL_MILITARY_OR_POLICE_OFFICER
      - BUSINESS_OWNER
      - TRADER
      - FARMER_OR_FISHERMAN
      - STUDENT
      - HOUSEWIFE
      - UNEMPLOYED
      - EMPLOYEE
      - ENTREPRENEUR
      - STATE_OFFICIAL
      - ACCOUNTANT
      - LAWYER_OR_NOTARY
      - PROFESSION
      - RETIREE
      - PRIVATE_LECTURER _OR_TEACHER
      - PUBLIC_LECTURER_OR_TEACHER
      - DOCTOR
      - BNI_EMPLOYEE
      - BNI_AFFILIATE_UNIT
      - GOVERNMENT_EMPLOYEE
      - OTHER
      type: string
    JsonNode:
      type: object
      properties:
        empty:
          type: boolean
        valueNode:
          type: boolean
        containerNode:
          type: boolean
        missingNode:
          type: boolean
        array:
          type: boolean
        object:
          type: boolean
        nodeType:
          $ref: '#/components/schemas/JsonNodeType'
        pojo:
          type: boolean
        number:
          type: boolean
        integralNumber:
          type: boolean
        floatingPointNumber:
          type: boolean
        short:
          type: boolean
        int:
          type: boolean
        long:
          type: boolean
        float:
          type: boolean
        double:
          type: boolean
        bigDecimal:
          type: boolean
        bigInteger:
          type: boolean
        textual:
          type: boolean
        boolean:
          type: boolean
        "null":
          type: boolean
        binary:
          type: boolean
    JsonNodeType:
      enum:
      - ARRAY
      - BINARY
      - BOOLEAN
      - MISSING
      - "NULL"
      - NUMBER
      - OBJECT
      - POJO
      - STRING
      type: string
    KycApprovalRequest:
      type: object
      properties:
        code:
          type: string
        status:
          $ref: '#/components/schemas/XenditStatus'
        remark:
          type: string
    ListPortfolio_Simple_Nats:
      type: object
      properties:
        invoiceCode:
          type: string
        name:
          type: string
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media_Simple_Nats'
        propertyValue:
          type: number
        loanAmount:
          type: number
        loanInterest:
          type: number
        financingAmount:
          type: number
    ListTransactionLoanInterestResponse:
      type: object
      properties:
        transactionLoanInterest:
          type: array
          items:
            $ref: '#/components/schemas/TransactionLoanInterestResponse'
    ListTransactionLoanResponse:
      type: object
      properties:
        transactionLoan:
          type: array
          items:
            $ref: '#/components/schemas/TransactionLoanResponse'
    LoanApproval:
      description: Loan Approval.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        txnId:
          format: int64
          description: Loan Application Number
          type: integer
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          description: Staff Id that approved / reject
          type: string
        updateAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updateBy:
          description: Staff Id that update
          type: string
        loanValueRequested:
          type: number
        loanValueApproved:
          type: number
        loanQtyRequested:
          format: int32
          type: integer
        loanQtyApproved:
          format: int32
          type: integer
        txnType:
          $ref: '#/components/schemas/TxnType'
        approvalLoanStatus:
          $ref: '#/components/schemas/ApprovalLoanStatus'
    LoanInterestMonthly:
      type: object
      properties:
        month:
          type: string
        loanInterest:
          type: number
    LoanInvoicePropertyResponse:
      type: object
      properties:
        loanAbleStatus:
          type: string
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
    LoanRequest:
      type: object
      properties:
        invoiceCode:
          type: string
        tenor:
          format: int32
          type: integer
        insurance:
          type: number
        fidusiaFee:
          type: number
        financingFee:
          type: number
        notaryFee:
          type: number
        legalityFee:
          type: number
        bpnFee:
          type: number
        provisionFee:
          type: number
        status:
          $ref: '#/components/schemas/ApprovalLoanStatus'
        code:
          type: string
        collateral:
          $ref: '#/components/schemas/Collateral'
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    LocalDate_Expanded_Simple_Nats:
      format: date
      type: string
      example: 2022-03-10
    LocalDate_Simple_Nats:
      format: date
      type: string
      example: 2022-03-10
    Marital:
      enum:
      - S
      - M
      - WM
      - WF
      type: string
    Marital_Simple_Nats:
      enum:
      - S
      - M
      - WM
      - WF
      type: string
    Media:
      description: "Uploaded media (pictures, documents, etc)."
      type: object
      properties:
        kind:
          type: string
          allOf:
          - $ref: '#/components/schemas/MediaKind'
          example: PDF
        filename:
          description: 'file name '
          type: string
          example: abc.pdf or scenery.webp
        url:
          description: 'file url '
          type: string
          example: /document/abc.pdf or /images/scenery.webp
    MediaKind:
      enum:
      - JPG
      - PDF
      - PNG
      - WEBP
      - AVI
      - MP4
      - MPEG
      - OGV
      - WEBM
      type: string
    MediaKind_Simple_Nats:
      enum:
      - JPG
      - PDF
      - PNG
      - WEBP
      - AVI
      - MP4
      - MPEG
      - OGV
      - WEBM
      type: string
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        hash:
          format: int32
          type: integer
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
    Media_Simple_Nats:
      description: "Uploaded media (pictures, documents, etc)."
      type: object
      properties:
        kind:
          type: string
          allOf:
          - $ref: '#/components/schemas/MediaKind_Simple_Nats'
          example: PDF
        filename:
          description: 'file name '
          type: string
          example: abc.pdf or scenery.webp
        url:
          description: 'file url '
          type: string
          example: /document/abc.pdf or /images/scenery.webp
    MenuAuthority:
      description: Menu Authority.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        description:
          type: string
        company:
          $ref: '#/components/schemas/Company'
    MenuAuthorityList:
      type: object
      properties:
        menuAuthority:
          $ref: '#/components/schemas/MenuAuthorityRequest'
        create:
          type: boolean
        update:
          type: boolean
        view:
          type: boolean
        delete:
          type: boolean
    MenuAuthorityList_Simple_Nats:
      type: object
      properties:
        menuAuthority:
          $ref: '#/components/schemas/MenuAuthorityRequest_Simple_Nats'
        create:
          type: boolean
        update:
          type: boolean
        view:
          type: boolean
        delete:
          type: boolean
    MenuAuthorityRequest:
      type: object
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        name:
          type: string
        description:
          type: string
    MenuAuthorityRequest_Simple_Nats:
      type: object
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        name:
          type: string
        description:
          type: string
    Modular:
      description: Modular
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        description:
          type: string
        variant:
          type: array
          items:
            $ref: '#/components/schemas/VariantModular'
        virtualTour:
          description: "Virtual Tour attached to this Modular. Use the other API to\
            \ add photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        videos:
          description: "Videos attached to this Modular. Use the other API to add\
            \ photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        medias:
          description: "Medias attached to this Modular. Use the other API to add\
            \ photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        floorPlan:
          description: "Floor Plan attached to this Modular. Use the other API to\
            \ add photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        company:
          $ref: '#/components/schemas/Company'
        monthlyFee:
          type: number
        loan:
          type: boolean
        maxLoan:
          type: number
        maxLoanAmount:
          type: number
        vat:
          type: number
        earningsTax:
          type: number
        modularManagement:
          type: number
        financialManagement:
          type: number
        bsi:
          type: number
        loanFee:
          type: number
        loanInterest:
          type: number
        serviceCharge:
          type: number
        pb1:
          type: number
        modularManagementTaxFee:
          type: number
        financialManagementTaxFee:
          type: number
        status:
          $ref: '#/components/schemas/ModularStatus'
    ModularResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        minPrice:
          type: number
        maxPrice:
          type: number
        status:
          $ref: '#/components/schemas/ModularStatus'
        media:
          $ref: '#/components/schemas/Media'
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
    ModularStatus:
      enum:
      - 0
      - 100
      - 200
      - 201
      type: string
    MontlyRoomBookedResponse:
      type: object
      properties:
        roomBooked:
          type: array
          items:
            $ref: '#/components/schemas/RoomBookedResponse1'
    MontlyRoomBookedResponse2:
      type: object
      properties:
        roomBooked:
          type: array
          items:
            $ref: '#/components/schemas/RoomBookedResponse'
    MultipartFormDataInput:
      type: object
      properties:
        parts:
          type: array
          items:
            $ref: '#/components/schemas/InputPart'
        preamble:
          type: string
        formDataMap:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/InputPart'
    MultivaluedMapStringString:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    NonRoom:
      description: Non Room.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        value:
          description: Amount value of Non Room
          type: number
          example: 2500000000
        company:
          description: Relation to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
        type:
          description: "Non Room Type contains FNB, ANCILLARY, MICE, OTHER"
          type: string
          allOf:
          - $ref: '#/components/schemas/NonRoomType'
          example: ANCILLARY
        loan:
          type: boolean
        maximumLoan:
          description: Maximum loan percentage
          type: number
          example: 70
        medias:
          description: "Photos attached to this non room. Use the other API to add\
            \ photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        vatPurchaseCost:
          type: number
        buyersTax:
          type: number
        loanArrangement:
          type: number
        serviceCharge:
          type: number
        interest:
          type: number
        pb1:
          type: number
        grossOperationalProfitShare:
          type: number
        corporateTax:
          type: number
        address:
          type: string
        locationCoordinate:
          type: string
        publishStatus:
          $ref: '#/components/schemas/PropertyStatus'
        createdBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/OffsetDateTime'
        updatedBy:
          type: string
        integrateYoda:
          $ref: '#/components/schemas/NonRoomYoda'
        zohoProduct:
          $ref: '#/components/schemas/ZohoProduct'
        assets:
          $ref: '#/components/schemas/Assets'
    NonRoom1:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        price:
          type: number
        type:
          $ref: '#/components/schemas/NonRoomType'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    NonRoom2:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        value:
          type: number
        nonRoomType:
          $ref: '#/components/schemas/NonRoomType'
        media:
          $ref: '#/components/schemas/Media'
    NonRoomAccount:
      description: Non Room Account.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/Account'
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        nonRoom:
          $ref: '#/components/schemas/NonRoom'
        ownedDate:
          $ref: '#/components/schemas/OffsetDateTime'
        releaseDate:
          $ref: '#/components/schemas/OffsetDateTime'
        cashStatus:
          $ref: '#/components/schemas/InvoiceStatus'
        loanStatus:
          $ref: '#/components/schemas/InvoiceStatus'
    NonRoomDailyRevenueResponse:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/OffsetDateTime'
        totalRevenue:
          type: number
        name:
          type: string
        code:
          type: string
        imageUrl:
          type: string
    NonRoomPortfolioResponse:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/LocalDate'
        totalGrossRevenue:
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/NonRoomDailyRevenueResponse'
    NonRoomType:
      enum:
      - FNB
      - ANCILLARY
      - MICE
      - OTHER
      type: string
    NonRoomYoda:
      description: Related to Yoda integration. Non Room and Item Category
      type: object
      properties:
        propertyCode:
          description: Property Code.
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        itemCategoryCode:
          description: Item Category Code.
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        status:
          type: boolean
    NotificationCustomer:
      description: Notification Customer.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        title:
          type: string
        message:
          type: string
        read:
          type: boolean
        codeKind:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        kind:
          $ref: '#/components/schemas/NotificationKind'
        customer:
          $ref: '#/components/schemas/Customer'
    NotificationCustomerResponse_Simple_Nats:
      type: object
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        title:
          type: string
        message:
          type: string
        read:
          type: boolean
        codeKind:
          type: string
        media:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        kind:
          $ref: '#/components/schemas/NotificationKind_Simple_Nats'
    NotificationKind:
      enum:
      - A
      - F
      - G
      - L
      - M
      - R
      - S
      - SA
      - SR
      - T
      - TA
      - TR
      - W
      type: string
    NotificationKind_Simple_Nats:
      enum:
      - A
      - F
      - G
      - L
      - M
      - R
      - S
      - SA
      - SR
      - T
      - TA
      - TR
      - W
      type: string
    NotificationResponseCustomer:
      type: object
      properties:
        title:
          type: string
        message:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        read:
          type: boolean
        media:
          $ref: '#/components/schemas/Media'
        code:
          type: string
        kind:
          $ref: '#/components/schemas/NotificationKind'
        codeKind:
          type: string
        route:
          type: string
    NotificationResponseStaff:
      type: object
      properties:
        title:
          type: string
        message:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        read:
          type: boolean
        media:
          $ref: '#/components/schemas/Media'
        code:
          type: string
        kind:
          $ref: '#/components/schemas/NotificationKind'
        codeKind:
          type: string
    NotificationStaff:
      description: Notification Staff.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        title:
          type: string
        message:
          type: string
        read:
          type: boolean
        codeKind:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        kind:
          $ref: '#/components/schemas/NotificationKind'
    OcrCallbackRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data'
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    OffsetDateTime_Expanded_Simple_Nats:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    OffsetDateTime_Simple_Nats:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    OnlineTravelAgency:
      description: Online Travel Agency
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        fee:
          type: number
        vat:
          type: number
        yodaName:
          type: string
        status:
          $ref: '#/components/schemas/ProductStatus'
        image:
          $ref: '#/components/schemas/Media'
        company:
          $ref: '#/components/schemas/Company'
    OpenAccountReason:
      enum:
      - INVESTMENTS
      - SAVINGS
      - TRANSACTIONS
      type: string
    OpenAccountReason_Simple_Nats:
      enum:
      - INVESTMENTS
      - SAVINGS
      - TRANSACTIONS
      type: string
    PanacheEntityBase:
      type: object
    PayLoan:
      description: Pay Loan.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/Account'
        status:
          $ref: '#/components/schemas/PayLoanStatus'
        payLoanAmount:
          description: Loan Amount
          type: number
          example: "10,000,000"
        transactionCode:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        evidence:
          $ref: '#/components/schemas/Media'
        period:
          type: string
    PayLoanResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        loanAmount:
          type: number
        loanInterest:
          type: number
    PayLoanStatus:
      enum:
      - 0
      - 200
      - 201
      - 400
      type: string
    PaymentBessRequest:
      type: object
      properties:
        nomorKontrak:
          type: string
        angsuranKe:
          format: int32
          type: integer
        kodeCabang:
          type: string
        tanggalAkhir:
          $ref: '#/components/schemas/LocalDate'
        tanggalJatuhTempo:
          $ref: '#/components/schemas/LocalDate'
        tanggalBayar:
          $ref: '#/components/schemas/LocalDate'
        tanggalVoucher:
          $ref: '#/components/schemas/LocalDate'
        angsuran:
          type: number
        nomorKwitansi:
          type: string
        denda:
          type: number
        bunga1:
          type: number
        bunga0:
          type: number
    PaymentMethod:
      enum:
      - BC
      - BA
      type: string
    PortfolioDetailPropertyResponse:
      type: object
      properties:
        projectPrice:
          type: number
        receivedDividend:
          type: number
        monthlyUpdateList:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMonthlyUpdateProperty'
        snapshot:
          $ref: '#/components/schemas/Property'
        report:
          type: array
          items:
            $ref: '#/components/schemas/ReportPropertyDetailResponse'
    PortfolioDividendDetailResponse:
      type: object
      properties:
        name:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        status:
          $ref: '#/components/schemas/DividendProductStatus'
        listedSince:
          $ref: '#/components/schemas/LocalDateTime'
        netIncomeSinceListed:
          type: number
        occupancySinceListed:
          type: number
        roomOccupiedSinceListed:
          format: int64
          type: integer
        roomOwnSinceListed:
          format: int64
          type: integer
        yieldAnnualised:
          type: number
        netIncomeLastMonth:
          type: number
        occupancyLastMonth:
          type: number
        roomOccupiedLastMonth:
          format: int64
          type: integer
        roomOwnLastMonth:
          format: int64
          type: integer
        daily:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioDividendResponse'
        weekly:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioDividendWeeklyResponse'
        monthly:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioDividendMonthlyResponse'
    PortfolioDividendDetailResponse2:
      type: object
      properties:
        name:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        listedSince:
          $ref: '#/components/schemas/OffsetDateTime'
        netIncomeSinceListed:
          type: number
        occupancySinceListed:
          type: number
        roomOccupiedSinceListed:
          format: int64
          type: integer
        roomOwnSinceListed:
          format: int64
          type: integer
        yieldAnnualised:
          type: number
        netIncomeLastMonth:
          type: number
        occupancyLastMonth:
          type: number
        roomOccupiedLastMonth:
          format: int64
          type: integer
        roomOwnLastMonth:
          format: int64
          type: integer
    PortfolioDividendMonthlyResponse:
      type: object
      properties:
        dividendDate:
          $ref: '#/components/schemas/LocalDateTime'
        netIncome:
          type: number
        netRoomRate:
          type: number
        managementFee:
          type: number
        earningBeforeInterestTax:
          type: number
        interestFee:
          type: number
        earningBeforeTax:
          type: number
        corporateTax:
          type: number
    PortfolioDividendMonthlyResponse2:
      type: object
      properties:
        dividendDate:
          $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          type: number
        gop:
          type: number
        opex:
          type: number
        netRoomRate:
          type: number
        netIncome:
          type: number
        managementFee:
          type: number
        earningBeforeInterestTax:
          type: number
        interestFee:
          type: number
        earningBeforeTax:
          type: number
        corporateTax:
          type: number
    PortfolioDividendResponse:
      type: object
      properties:
        dividendDate:
          $ref: '#/components/schemas/LocalDate'
        agency:
          $ref: '#/components/schemas/OnlineTravelAgency'
        totalRate:
          type: number
        serviceCharge:
          type: number
        restaurantHotelTax:
          type: number
        bookingAgentFee:
          type: number
        valueAddedTax:
          type: number
        fixedOperationalFee:
          type: number
        netRoomRate:
          type: number
    PortfolioDividendResponse2:
      type: object
      properties:
        dividendDate:
          $ref: '#/components/schemas/OffsetDateTime'
        status:
          $ref: '#/components/schemas/YodaRoomStatus'
        agency:
          $ref: '#/components/schemas/Media'
        totalGrossRate:
          type: number
        serviceCharge:
          type: number
        restaurantHotelTax:
          type: number
        bookingAgentFee:
          type: number
        valueAddedTax:
          type: number
        fixedOperationalFee:
          type: number
        netRoomRate:
          type: number
    PortfolioDividendWeeklyResponse:
      type: object
      properties:
        dividendDate:
          type: string
        weekNumber:
          type: string
        weekStart:
          type: string
        weekEnd:
          type: string
        totalRate:
          type: number
        serviceCharge:
          type: number
        restaurantHotelTax:
          type: number
        bookingAgentFee:
          type: number
        valueAddedTax:
          type: number
        fixedOperationalFee:
          type: number
        netRoomRate:
          type: number
    PortfolioLoanDetailResponse:
      type: object
      properties:
        transaction:
          $ref: '#/components/schemas/Transaction1'
    PortfolioLoanResponse_Simple_Nats:
      type: object
      properties:
        totalLoanAmount:
          type: number
        totalLoanInterest:
          type: number
        listPortfolios:
          type: array
          items:
            $ref: '#/components/schemas/ListPortfolio_Simple_Nats'
    PortfolioRevenueNonRoomDetailResponse:
      type: object
      properties:
        name:
          description: Non Room Name
          type: string
        listedSince:
          description: Listed Since
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        totalRevenueSinceListed:
          description: Total Revenue Since Listed
          type: number
        media:
          description: image
          type: object
          allOf:
          - $ref: '#/components/schemas/Media'
        daily:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioRevenueNonRoomResponse'
        weekly:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioRevenueNonRoomWeeklyResponse'
        monthly:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioRevenueNonRoomMonthlyResponse'
    PortfolioRevenueNonRoomMonthlyResponse:
      type: object
      properties:
        revenueDate:
          description: Month Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        costOfGoods:
          description: COGS
          type: number
        operationalExpenditure:
          description: OPEX
          type: number
        grossOperatingProfit:
          description: GOP
          type: number
        managementFee:
          description: Management Fee
          type: number
        earningBeforeInterestTax:
          description: EBIT
          type: number
        interestFee:
          description: Interest Fee
          type: number
        earningBeforeTax:
          description: EBT
          type: number
        tax:
          description: Tax
          type: number
        netIncome:
          description: Net Income
          type: number
    PortfolioRevenueNonRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        itemRevenues:
          description: 'Item Revenues '
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        serviceCharge:
          description: Service Charge (10%)
          type: number
        pb1:
          description: PB1 (10%)
          type: number
        totalNetIncome:
          description: Total Net Income
          type: number
    PortfolioRevenueNonRoomWeeklyResponse:
      type: object
      properties:
        weekNumber:
          description: Week
          type: string
        weekStart:
          description: Week Start Date
          type: string
        weekEnd:
          description: Week End Date
          type: string
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        itemRevenues:
          description: Item Revenues
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        serviceCharge:
          description: Service Charge (10%)
          type: number
        pb1:
          description: PB1 (10%)
          type: number
        totalNetIncome:
          description: Total Net Income
          type: number
    PrivyStatus:
      enum:
      - 0
      - 100
      - 200
      - 201
      - 202
      - 400
      - 401
      - 402
      - 450
      type: string
    PrivyStatus_Simple_Nats:
      enum:
      - 0
      - 100
      - 200
      - 201
      - 202
      - 400
      - 401
      - 402
      - 450
      type: string
    ProductStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    Project:
      type: object
      properties:
        shortName:
          type: string
        name:
          type: string
        id:
          type: string
        type:
          type: string
    ProjectDetailResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        totalAssetValue:
          type: number
        totalVillaUnits:
          format: int32
          type: integer
        equity:
          type: number
        loan:
          type: number
        interestRate:
          type: number
        totalLoanRepaid:
          type: number
        projectStart:
          $ref: '#/components/schemas/LocalDate'
        estimatedFinish:
          $ref: '#/components/schemas/LocalDate'
        timelines:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligenceTimeline'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligencePayment'
        sales:
          type: array
          items:
            $ref: '#/components/schemas/DueDiligenceSalesTimeline'
        status:
          type: object
          additionalProperties:
            type: string
        url:
          type: string
    ProjectMonthlyUpdateProperty:
      description: Project Monthly Update for Property V2.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        description:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        month:
          format: int32
          type: integer
          example: 5
        year:
          format: int32
          type: integer
          example: 2022
        property:
          $ref: '#/components/schemas/Property'
    ProjectResponse:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        price:
          type: number
        unit:
          format: int32
          type: integer
        url:
          type: string
        status:
          type: object
          additionalProperties:
            type: string
        estimatedFinishDate:
          $ref: '#/components/schemas/LocalDate'
    ProjectStatus:
      enum:
      - 0
      - 100
      - 200
      type: string
    PromoBudgeting:
      description: Promo Budgeting.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        staffCompany:
          description: Relation to Staff Company on column staff_company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/StaffCompany'
          example: 1
        nominalBudget:
          description: Nominal Budget for Promotion
          type: number
          example: 5000000
        createdAt:
          description: Record the time when Promo Budgeting created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Promo Budgeting
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
    PromoBudgetingHistory:
      description: Promo Budgeting History
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        promoBudgeting:
          description: Relation to Promo Budgeting on column promo_budgeting_id
          type: object
          allOf:
          - $ref: '#/components/schemas/PromoBudgeting'
          example: 1
        nominal:
          description: Nominal amount
          type: number
          example: 5000000
        kind:
          description: Promo Budgeting History Kind
          enum:
          - ADD
          - REFUND
          - DEDUCTION
          type: string
          allOf:
          - $ref: '#/components/schemas/PromoBudgetingHistoryKind'
          example: ADD
        createdAt:
          description: Record the time when Promo Budgeting History created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Promo Budgeting History
          type: string
          example: admin
    PromoBudgetingHistoryKind:
      enum:
      - ADD
      - REFUND
      - DEDUCTION
      type: string
    PromoProgram:
      description: Promo Program.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        prefixCode:
          description: Prefix code for Promo Program code
          type: string
          example: DD
        createdBy:
          description: Record the user who created Promo Program
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Promo Program using staff code
          type: string
          example: admin
    PromoStatus:
      enum:
      - 200
      - 400
      type: string
    Promotion:
      description: Promotion.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        promoProgram:
          description: Relation to Promo Program on column promo_program_id
          type: object
          allOf:
          - $ref: '#/components/schemas/PromoProgram'
          example: 1
        promoBudgeting:
          description: Relation to Promo Budgeting on column promo_budgeting_id
          type: object
          allOf:
          - $ref: '#/components/schemas/PromoBudgeting'
          example: 1
        maxDiscount:
          description: Maximal Discount amount on Promotion
          type: number
          example: 5000000
        minPurchase:
          description: Minimum Purchase amount of transaction
          type: number
          example: 5000000
        discountPercentage:
          description: Discount Percentage
          type: number
          example: 10%
        maxUsed:
          format: int32
          description: Maximum Used Voucher per User
          type: integer
          example: 10
        totalVoucher:
          format: int32
          description: Total Voucher
          type: integer
          example: 10
        startDate:
          description: 'Record the time when Promotion Started '
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          example: 2023-02-07 03:59:48.049411
        endDate:
          description: 'Record the time when Promotion End '
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Promotion
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Promotion
          type: string
          example: admin
        status:
          description: Promotion Status contains ACTIVE and DEACTIVE
          type: string
          allOf:
          - $ref: '#/components/schemas/PromoStatus'
          example: ACTIVE
        voucherKind:
          description: Voucher Kind contains GENERATE and INSERT only 1 character
          type: string
          allOf:
          - $ref: '#/components/schemas/VoucherKind'
          example: G
        segmentRules:
          description: "If segment rules is true, check whether customer available\
            \ on table Promotion Customer"
          type: boolean
          example: true
        customers:
          type: array
          items:
            $ref: '#/components/schemas/GenericCustomer'
        usedVoucher:
          format: int32
          description: Count voucher has been used
          type: integer
          example: 20
        voucherCode:
          description: Code voucher
          type: string
          example: DD_V12345
    PromotionCustomer:
      description: Promotion Customer.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        customer:
          $ref: '#/components/schemas/Customer'
        promotion:
          $ref: '#/components/schemas/Promotion'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
    PromotionVoucherRequest:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/GenericCustomer'
        voucherCode:
          type: string
        promotion:
          $ref: '#/components/schemas/Promotion'
    Property:
      description: Property
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        price:
          type: integer
          example: 2500000000
        developedBy:
          $ref: '#/components/schemas/Corporation'
        managedBy:
          $ref: '#/components/schemas/Corporation'
        company:
          $ref: '#/components/schemas/Company'
        specification:
          type: array
          items:
            $ref: '#/components/schemas/Specification'
        suggestedAverageDailyRateMin:
          type: number
        suggestedAverageDailyRateMax:
          type: number
        averageDailyRateMax:
          type: number
        suggestedOccupancyMin:
          type: number
        suggestedOccupancyMax:
          type: number
        occupancyMax:
          type: number
        suggestedCapitalGainMin:
          type: number
        suggestedCapitalGainMax:
          type: number
        capitalGainMax:
          type: number
        loan:
          type: boolean
        maxLoan:
          type: number
        maxLoanAmount:
          type: number
        vat:
          type: number
        earningsTax:
          type: number
        propertyManagement:
          type: number
        financialManagement:
          type: number
        bsi:
          type: number
        loanFee:
          type: number
        loanInterest:
          type: number
        serviceCharge:
          type: number
        pb1:
          type: number
        propertyManagementTaxFee:
          type: number
        financialManagementTaxFee:
          type: number
        address:
          type: string
        location:
          type: string
        kind:
          $ref: '#/components/schemas/PropertyKind'
        publishStatus:
          $ref: '#/components/schemas/PropertyStatus'
        propertyStatus:
          $ref: '#/components/schemas/DevelopmentStatus'
        riskLevel:
          $ref: '#/components/schemas/RiskLevelStatus'
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        medias:
          description: "Photos attached to this property. Use the other API to add\
            \ photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
        integrateYoda:
          $ref: '#/components/schemas/PropertyYoda'
        zohoProduct:
          $ref: '#/components/schemas/ZohoProduct'
        assets:
          $ref: '#/components/schemas/Assets'
    PropertyAccount:
      description: Property Account.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/Account'
        invoiceProperty:
          $ref: '#/components/schemas/InvoiceProperty'
        property:
          $ref: '#/components/schemas/Property'
        ownedDate:
          $ref: '#/components/schemas/OffsetDateTime'
        releaseDate:
          $ref: '#/components/schemas/OffsetDateTime'
        cashStatus:
          $ref: '#/components/schemas/InvoiceStatus'
        loanStatus:
          $ref: '#/components/schemas/InvoiceStatus'
    PropertyKind:
      enum:
      - H
      - T
      - C
      - V
      type: string
    PropertyKind_Simple_Nats:
      enum:
      - H
      - T
      - C
      - V
      type: string
    PropertyStatus:
      enum:
      - 0
      - 200
      - 201
      - 400
      type: string
    PropertyStatus_Simple_Nats:
      enum:
      - 0
      - 200
      - 201
      - 400
      type: string
    PropertyYoda:
      description: Related to Yoda integration. Room and properties
      type: object
      properties:
        propertyCode:
          description: Property Code.
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        roomCode:
          description: Room Code.
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        status:
          type: boolean
    PropertyYoda_Simple_Nats:
      description: Related to Yoda integration. Room and properties
      type: object
      properties:
        propertyCode:
          description: Property Code.
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        roomCode:
          description: Room Code.
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        status:
          type: boolean
    Property_Simple_Nats:
      description: Property
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        price:
          type: integer
          example: 2500000000
        developedBy:
          $ref: '#/components/schemas/Corporation_Simple_Nats'
        managedBy:
          $ref: '#/components/schemas/Corporation_Simple_Nats'
        company:
          $ref: '#/components/schemas/Company_Simple_Nats'
        specification:
          type: array
          items:
            $ref: '#/components/schemas/Specification_Simple_Nats'
        suggestedAverageDailyRateMin:
          type: number
        suggestedAverageDailyRateMax:
          type: number
        averageDailyRateMax:
          type: number
        suggestedOccupancyMin:
          type: number
        suggestedOccupancyMax:
          type: number
        occupancyMax:
          type: number
        suggestedCapitalGainMin:
          type: number
        suggestedCapitalGainMax:
          type: number
        capitalGainMax:
          type: number
        loan:
          type: boolean
        maxLoan:
          type: number
        maxLoanAmount:
          type: number
        vat:
          type: number
        earningsTax:
          type: number
        propertyManagement:
          type: number
        financialManagement:
          type: number
        bsi:
          type: number
        loanFee:
          type: number
        loanInterest:
          type: number
        serviceCharge:
          type: number
        pb1:
          type: number
        propertyManagementTaxFee:
          type: number
        financialManagementTaxFee:
          type: number
        address:
          type: string
        location:
          type: string
        kind:
          $ref: '#/components/schemas/PropertyKind_Simple_Nats'
        publishStatus:
          $ref: '#/components/schemas/PropertyStatus_Simple_Nats'
        propertyStatus:
          $ref: '#/components/schemas/DevelopmentStatus_Simple_Nats'
        riskLevel:
          $ref: '#/components/schemas/RiskLevelStatus_Simple_Nats'
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity_Simple_Nats'
        medias:
          description: "Photos attached to this property. Use the other API to add\
            \ photos. Once added, rearrange/delete photos by modifying this list."
          type: array
          items:
            $ref: '#/components/schemas/Media_Simple_Nats'
        integrateYoda:
          $ref: '#/components/schemas/PropertyYoda_Simple_Nats'
        zohoProduct:
          $ref: '#/components/schemas/ZohoProduct_Simple_Nats'
        assets:
          $ref: '#/components/schemas/Assets_Simple_Nats'
    Questionnaire:
      description: Questionnaire.
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
    RdfSupportResponse:
      description: Support data for RDF account creation.
      type: object
      properties:
        company:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        job:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        education:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        income:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        branch:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        reason:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        source:
          type: array
          items:
            $ref: '#/components/schemas/InfoItem'
        tnc:
          type: string
    Religion:
      enum:
      - IS
      - CH
      - CA
      - HI
      - BU
      - CO
      type: string
    Religion_Simple_Nats:
      enum:
      - IS
      - CH
      - CA
      - HI
      - BU
      - CO
      type: string
    ReportDownLoadDate:
      type: object
      properties:
        date:
          type: string
        iosDownload:
          format: int64
          type: integer
        androidDownload:
          format: int64
          type: integer
    ReportPropertyDetailResponse:
      type: object
      properties:
        totalDividend:
          type: number
        month:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/DividendStatus'
    Reporter:
      type: object
      properties:
        login:
          type: string
        ringId:
          type: string
        id:
          type: string
        type:
          type: string
    Result:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        id_card_number:
          type: string
        city:
          type: string
        rtrw:
          type: string
        gender:
          type: string
        village:
          type: string
        district:
          type: string
        province:
          type: string
        religion:
          type: string
        birthdate:
          type: string
        birthplace:
          type: string
        occupation:
          type: string
        expiry_date:
          type: string
        marital_status:
          type: string
        tax_id_number:
          type: string
        registration_office:
          type: string
        country:
          type: string
        passport_number:
          type: string
        given_name:
          type: string
        surname:
          type: string
        date_of_issue:
          type: string
        date_of_expiry:
          type: string
        issuing_authority:
          type: string
        is_tampered:
          type: string
    Revenue:
      description: Revenue.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        company:
          description: Relation to Company on company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
        item:
          description: Revenue item
          type: string
          example: Spa/Food/Beverages
        icon:
          description: Url icon
          type: string
          example: icon_spa.svg
        status:
          description: "Status true = active, false = deactive"
          type: boolean
          example: true
        createdAt:
          description: Record the time when created the Revenue
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        createdBy:
          description: Record the user who created Revenue
          type: string
          example: admin
        updatedAt:
          description: Record the time when the change/update occurs
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-02-07 03:59:48.049411
        updatedBy:
          description: Record the user who updated Revenue
          type: string
          example: admin
    RevenueNonRoom:
      description: Revenue Non Room
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoiceNonRoom:
          $ref: '#/components/schemas/InvoiceNonRoom'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        revenueDate:
          $ref: '#/components/schemas/LocalDateTime'
        onlineTravelAgency:
          $ref: '#/components/schemas/OnlineTravelAgency'
        itemRevenue:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        totalGrossRevenue:
          type: number
        serviceCharge:
          type: number
        pb1:
          type: number
        otaFee:
          type: number
        otaTaxFee:
          type: number
        netDailyIncome:
          type: number
        status:
          $ref: '#/components/schemas/DividendPropertyStatus'
    RevenueNonRoomMonthly:
      description: Revenue Non Room Monthly
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        invoice:
          $ref: '#/components/schemas/InvoiceNonRoom'
        month:
          format: int32
          type: integer
          example: 5
        year:
          format: int32
          type: integer
          example: 2022
        status:
          $ref: '#/components/schemas/DividendStatus'
        revenueDate:
          $ref: '#/components/schemas/LocalDateTime'
        totalGrossRevenue:
          type: number
        cogs:
          type: number
        opex:
          type: number
        gop:
          type: number
        managementFee:
          type: number
        ebit:
          type: number
        interestFee:
          type: number
        ebt:
          type: number
        tax:
          type: number
        netIncome:
          description: Net Operation Profit After Tax (NOPAT) or Net Income or FCF
            = EBT - Corporate Tax
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
    RiskLevelStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    RiskLevelStatus_Simple_Nats:
      enum:
      - 0
      - 200
      - 400
      type: string
    Role:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        description:
          description: Description of Role
          type: string
          example: BFT Sales Role
        menuAuthority:
          description: List of Menu Authority in Array Json
          type: array
          items:
            $ref: '#/components/schemas/MenuAuthorityList'
    RoleCompany:
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        role:
          description: Relation to Role on role_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Role'
          example: 1
        company:
          description: Relation to Company on company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
    Role_Simple_Nats:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        description:
          description: Description of Role
          type: string
          example: BFT Sales Role
        menuAuthority:
          description: List of Menu Authority in Array Json
          type: array
          items:
            $ref: '#/components/schemas/MenuAuthorityList_Simple_Nats'
    Room:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        price:
          type: number
        landSize:
          type: number
        buildingSize:
          type: number
        type:
          $ref: '#/components/schemas/PropertyKind'
        status:
          $ref: '#/components/schemas/DevelopmentStatus'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    Room1:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        landSize:
          type: number
        buildingSize:
          type: number
        roomValue:
          type: number
        averageDailyRate:
          type: number
        media:
          $ref: '#/components/schemas/Media'
    RoomBookedResponse:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/OffsetDateTime'
        status:
          $ref: '#/components/schemas/YodaRoomStatus'
    RoomBookedResponse1:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/OffsetDateTime'
        booked:
          type: boolean
    RoomDailyRevenueResponse:
      type: object
      properties:
        dailyDate:
          type: string
        lastUpdate:
          type: string
        totalRate:
          type: number
        netRoomRate:
          type: number
        status:
          $ref: '#/components/schemas/DividendProductStatus'
        name:
          type: string
        code:
          type: string
        imageUrl:
          type: string
        otaImageUrl:
          type: string
    RoomDailyRevenueResponse2:
      type: object
      properties:
        lastUpdate:
          type: string
        totalRate:
          type: number
        code:
          type: string
        status:
          $ref: '#/components/schemas/DividendProductStatus'
        dailyDate:
          $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRate:
          type: number
        netRoomRate:
          type: number
        yodaStatus:
          $ref: '#/components/schemas/YodaRoomStatus'
        name:
          type: string
        invoiceCode:
          type: string
        propertyCode:
          type: string
        imageUrl:
          type: string
        otaImageUrl:
          type: string
    RoomDailyRevenueResponse3:
      type: object
      properties:
        dailyDate:
          $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRate:
          type: number
        netRoomRate:
          type: number
        status:
          $ref: '#/components/schemas/YodaRoomStatus'
        name:
          type: string
        invoiceCode:
          type: string
        propertyCode:
          type: string
        imageUrl:
          type: string
        otaImageUrl:
          type: string
    RoomPortfolioResponse:
      type: object
      properties:
        revenueDate:
          type: string
        totalNetRoomRate:
          type: number
        occupancyRate:
          type: string
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/RoomDailyRevenueResponse'
        occupiedRoom:
          format: int64
          type: integer
        roomOwn:
          format: int64
          type: integer
    RoomPortfolioResponse3:
      type: object
      properties:
        revenueDate:
          $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          type: number
        totalNetRoomRate:
          type: number
        occupancyRate:
          type: string
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/RoomDailyRevenueResponse3'
        occupiedRoom:
          format: int64
          type: integer
        roomOwn:
          format: int64
          type: integer
    Salutation:
      enum:
      - MR
      - MRS
      - MS
      type: string
    Salutation_Simple_Nats:
      enum:
      - MR
      - MRS
      - MS
      type: string
    ScreenerProperty:
      description: Screener Property.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        customerName:
          type: string
        email:
          type: string
        mobile:
          description: "Prefixed with country code, without plus sign."
          type: string
          example: "6288812345"
        source:
          type: string
        company:
          $ref: '#/components/schemas/Company'
        emailCc:
          type: array
          items:
            type: string
        data:
          description: Temporary
          type: object
          additionalProperties: {}
        createdBy:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        sendEmail:
          type: boolean
    SharedDividendProperty:
      description: Shared Dividend Property.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        snapshotDividend:
          description: Snapshot of the Dividend Property
          type: object
          allOf:
          - $ref: '#/components/schemas/DividendProperty'
        walletKind:
          $ref: '#/components/schemas/WalletKind'
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        totalPrice:
          description: Total price
          type: number
          example: 333333
        netRevenue:
          description: Net revenue
          type: number
          example: 333333
        loanInterest:
          description: Loan interest
          type: number
          example: 111111
        totalLoanInterest:
          description: Total Loan interest used for calculation pay loan interest
          type: number
          example: 111111
        status:
          $ref: '#/components/schemas/DividendStatus'
    SourceOfFund:
      enum:
      - SALARY
      - BUSINESS
      - INVESTMENT
      - GRANTS
      type: string
    SourceOfFund_Simple_Nats:
      enum:
      - SALARY
      - BUSINESS
      - INVESTMENT
      - GRANTS
      type: string
    Specification:
      description: Specification
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        icon:
          type: string
        value:
          type: string
        unit:
          type: string
        status:
          type: boolean
        medias:
          description: "Photos attached to this specification property. Use the other\
            \ API to add photos. Once added, rearrange/delete photos by modifying\
            \ this list."
          type: array
          items:
            $ref: '#/components/schemas/Media'
    Specification_Simple_Nats:
      description: Specification
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        icon:
          type: string
        value:
          type: string
        unit:
          type: string
        status:
          type: boolean
        medias:
          description: "Photos attached to this specification property. Use the other\
            \ API to add photos. Once added, rearrange/delete photos by modifying\
            \ this list."
          type: array
          items:
            $ref: '#/components/schemas/Media_Simple_Nats'
    Staff:
      description: Staff.
      required:
      - country
      - locale
      - timezone
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        email:
          type: string
          example: thomas@wiradikusuma.com
        mobile:
          description: "Prefixed with country code, without plus sign."
          type: string
          example: "6288812345"
        country:
          type: string
          example: ID
        salutation:
          $ref: '#/components/schemas/Salutation'
        locale:
          maxLength: 20
          type: string
        timezone:
          description: Timezone in the format understood by Java.
          maxLength: 50
          type: string
          example: Asia/Jakarta
        fcms:
          type: array
          items:
            $ref: '#/components/schemas/Fcm'
        status:
          description: "Staff Status contains DRAFT, ACTIVE and DEACTIVE"
          type: string
          allOf:
          - $ref: '#/components/schemas/StaffStatus'
          example: ACTIVE
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
    StaffCompany:
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        staff:
          description: Relation to Staff on column staff_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Staff'
          example: 1
        company:
          description: Relation to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
        status:
          description: "Status true = active, false = deactive"
          type: boolean
          example: true
    StaffResponse_Simple_Nats:
      type: object
      properties:
        env:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/Staff_Simple_Nats'
        documentPrefix:
          type: string
        managedCompanies:
          type: array
          items:
            $ref: '#/components/schemas/GenericResponse_Simple_Nats'
        imagePrefix:
          type: string
    StaffStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    StaffStatus_Simple_Nats:
      enum:
      - 0
      - 200
      - 400
      type: string
    Staff_Simple_Nats:
      description: Staff.
      required:
      - country
      - locale
      - timezone
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        email:
          type: string
          example: thomas@wiradikusuma.com
        mobile:
          description: "Prefixed with country code, without plus sign."
          type: string
          example: "6288812345"
        country:
          type: string
          example: ID
        salutation:
          $ref: '#/components/schemas/Salutation_Simple_Nats'
        locale:
          maxLength: 20
          type: string
        timezone:
          description: Timezone in the format understood by Java.
          maxLength: 50
          type: string
          example: Asia/Jakarta
        fcms:
          type: array
          items:
            $ref: '#/components/schemas/Fcm_Simple_Nats'
        status:
          description: "Staff Status contains DRAFT, ACTIVE and DEACTIVE"
          type: string
          allOf:
          - $ref: '#/components/schemas/StaffStatus_Simple_Nats'
          example: ACTIVE
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role_Simple_Nats'
    SummaryAllNonRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        netIncome:
          description: 'Net Income '
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/NonRoomDailyRevenueResponse'
    SummaryAllResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        netIncome:
          description: 'Net Income '
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
    SummaryAllRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        netIncome:
          description: 'Net Income '
          type: number
        occupancyRate:
          description: Avg Occupancy Rate
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/RoomDailyRevenueResponse2'
    SummaryDailyNonRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        serviceCharge:
          description: 'Service Charge (10%) '
          type: number
        restaurantHotelTax:
          description: 'PB1 (10%) '
          type: number
        bookingAgentFee:
          description: 'Booking Agent Fee '
          type: number
        valueAddedTax:
          description: VAT (11%)
          type: number
        netIncome:
          description: Net Daily Income
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/NonRoomDailyRevenueResponse'
    SummaryDailyResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        serviceCharge:
          description: 'Service Charge (10%) '
          type: number
        restaurantHotelTax:
          description: 'PB1 (10%) '
          type: number
        bookingAgentFee:
          description: 'Booking Agent Fee '
          type: number
        valueAddedTax:
          description: VAT (11%)
          type: number
        netIncome:
          description: Net Daily Income
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
    SummaryDailyRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        serviceCharge:
          description: 'Service Charge (10%) '
          type: number
        restaurantHotelTax:
          description: 'PB1 (10%) '
          type: number
        bookingAgentFee:
          description: 'Booking Agent Fee '
          type: number
        valueAddedTax:
          description: VAT (11%)
          type: number
        netIncome:
          description: Net Daily Income
          type: number
        occupancyRate:
          description: Avg Occupancy Rate
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/RoomDailyRevenueResponse2'
    SummaryMonthlyNonRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        operationalExpenditure:
          description: OPEX
          type: number
        managementFee:
          description: Management Fee (20%)
          type: number
        earningBeforeInterestTax:
          description: EBIT
          type: number
        interestFee:
          description: Loan Interest (7.5% pa)
          type: number
        earningBeforeTax:
          description: EBT
          type: number
        corporateTax:
          description: 'Corporate Tax (22%) '
          type: number
        totalNetIncome:
          description: 'Total Net Income '
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/NonRoomDailyRevenueResponse'
    SummaryMonthlyResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        operationalExpenditure:
          description: OPEX
          type: number
        managementFee:
          description: Management Fee (20%)
          type: number
        earningBeforeInterestTax:
          description: EBIT
          type: number
        interestFee:
          description: Loan Interest (7.5% pa)
          type: number
        earningBeforeTax:
          description: EBT
          type: number
        corporateTax:
          description: 'Corporate Tax (22%) '
          type: number
        totalNetIncome:
          description: 'Total Net Income '
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
    SummaryMonthlyRoomResponse:
      type: object
      properties:
        revenueDate:
          description: Revenue Date
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
        totalGrossRevenue:
          description: Total Gross Revenue
          type: number
        operationalExpenditure:
          description: OPEX
          type: number
        managementFee:
          description: Management Fee (20%)
          type: number
        earningBeforeInterestTax:
          description: EBIT
          type: number
        interestFee:
          description: Loan Interest (7.5% pa)
          type: number
        earningBeforeTax:
          description: EBT
          type: number
        corporateTax:
          description: 'Corporate Tax (22%) '
          type: number
        totalNetIncome:
          description: 'Total Net Income '
          type: number
        occupancyRate:
          description: Avg Occupancy Rate
          type: number
        projectedRevenueDate:
          description: Projected Revenue Date
          type: string
        projectedRevenue:
          description: Projected Revenue
          type: number
        portfolioList:
          type: array
          items:
            $ref: '#/components/schemas/ItemRevenue'
        assetList:
          type: array
          items:
            $ref: '#/components/schemas/RoomDailyRevenueResponse2'
    SummaryNonRoomResponse:
      type: object
      properties:
        daily:
          $ref: '#/components/schemas/SummaryDailyNonRoomResponse'
        monthly:
          $ref: '#/components/schemas/SummaryMonthlyNonRoomResponse'
        all:
          $ref: '#/components/schemas/SummaryAllNonRoomResponse'
    SummaryResponse:
      type: object
      properties:
        daily:
          $ref: '#/components/schemas/SummaryDailyResponse'
        monthly:
          $ref: '#/components/schemas/SummaryMonthlyResponse'
        all:
          $ref: '#/components/schemas/SummaryAllResponse'
    SummaryRoomResponse:
      type: object
      properties:
        daily:
          $ref: '#/components/schemas/SummaryDailyRoomResponse'
        monthly:
          $ref: '#/components/schemas/SummaryMonthlyRoomResponse'
        all:
          $ref: '#/components/schemas/SummaryAllRoomResponse'
    Transaction:
      type: object
      properties:
        code:
          type: string
        payment:
          type: number
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
    Transaction1:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        propertyValue:
          type: number
        developedBy:
          $ref: '#/components/schemas/Corporation'
        managedBy:
          $ref: '#/components/schemas/Corporation'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        loanAmount:
          type: number
        loanInterest:
          type: number
        financingAmount:
          type: number
        totalPaid:
          type: number
    TransactionHistoryResponse:
      type: object
      properties:
        amount:
          type: number
        totalPaid:
          type: number
        transaction:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    TransactionLoanInterestResponse:
      type: object
      properties:
        code:
          type: string
        totalLoanInterest:
          type: number
        name:
          type: string
    TransactionLoanResponse:
      type: object
      properties:
        code:
          type: string
        totalLoan:
          type: number
        name:
          type: string
    TransactionResponse:
      type: object
      properties:
        kind:
          type: string
        name:
          type: string
        code:
          type: string
        price:
          type: number
        url:
          type: string
        status:
          type: object
          additionalProperties:
            type: string
        paymentStatus:
          type: object
          additionalProperties:
            type: string
        date:
          $ref: '#/components/schemas/OffsetDateTime'
        route:
          type: string
    TxnType:
      enum:
      - VC
      - PH
      - FO
      - PR
      - MO
      - EOI_PR
      - EOI_HO
      - EOI_MO
      type: string
    Updater:
      type: object
      properties:
        login:
          type: string
        ringId:
          type: string
        id:
          type: string
        type:
          type: string
    VariantModular:
      description: Variant Modular
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        price:
          description: Price of variant modular
          type: number
          example: 2500000000
        specification:
          description: Specification
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        finishingMaterials:
          description: Finishing materials of variant modular
          type: array
          items:
            type: string
          example:
          - BIOSTEEL Steel Solution
          - DOSSAN Refined Bamboo
          - GYPSUM Ceiling
          - Bardi Light System
          - QUADRA Kitchen Counter
          - Italian Loose Furniture Interiors
          - UPVC Doors by Allure
        company:
          description: Relation to Company on column company_id
          type: object
          allOf:
          - $ref: '#/components/schemas/Company'
          example: 1
        quantity:
          format: int32
          type: integer
    Visibility:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    Voucher:
      description: Voucher.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        promotion:
          $ref: '#/components/schemas/Promotion'
        promoCode:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        usedAt:
          $ref: '#/components/schemas/LocalDateTime'
        kind:
          $ref: '#/components/schemas/VoucherKind'
    VoucherCustomerResponse:
      type: object
      properties:
        voucherCode:
          type: string
        price:
          type: number
        discountPrice:
          type: number
        percentage:
          type: number
        finalPrice:
          type: number
    VoucherKind:
      enum:
      - G
      - I
      type: string
    Wallet:
      description: Wallet.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        balance:
          description: Balance
          type: number
          example: "10,000,000"
        onHoldBalance:
          description: On Hold balance
          type: number
          example: "10,000,000"
        tempBalance:
          type: number
        kind:
          $ref: '#/components/schemas/WalletKind'
        accountNumber:
          type: string
        balanceAll:
          type: number
    WalletKind:
      enum:
      - M
      - R
      type: string
    WalletKind_Simple_Nats:
      enum:
      - M
      - R
      type: string
    WalletLoan:
      description: Wallet Loan.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        balance:
          description: Balance
          type: number
          example: "10,000,000"
        tempBalance:
          type: number
        accountNumber:
          type: string
    WalletLoanInterestResponse:
      type: object
      properties:
        balance:
          type: number
        totalInterest:
          type: number
    WalletLoanTx:
      description: Wallet loan transaction.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        status:
          $ref: '#/components/schemas/WalletLoanTxStatus'
        walletLoanTxKind:
          $ref: '#/components/schemas/WalletLoanTxKind'
        amount:
          description: Amount
          type: number
          example: "10,000,000"
        capturedAmount:
          description: Capture Prev Wallet Loan Amount Balance
          type: number
          example: "10,000,000"
    WalletLoanTxKind:
      enum:
      - I
      - F
      - L
      - O
      - "Y"
      - B
      - C
      - U
      - M
      - A
      type: string
    WalletLoanTxResponse:
      type: object
      properties:
        code:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        createdBy:
          type: string
        status:
          $ref: '#/components/schemas/WalletLoanTxStatus'
        walletLoanTxKind:
          $ref: '#/components/schemas/WalletLoanTxKind'
        amount:
          type: number
        to:
          $ref: '#/components/schemas/Corporation'
    WalletLoanTxStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    WalletLoan_Simple_Nats:
      description: Wallet Loan.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        balance:
          description: Balance
          type: number
          example: "10,000,000"
        tempBalance:
          type: number
        accountNumber:
          type: string
    WalletRequest:
      type: object
      properties:
        amount:
          type: number
        endpoint:
          $ref: '#/components/schemas/WalletTxEndpoint'
        account:
          $ref: '#/components/schemas/Account3'
    WalletTx:
      description: Wallet transaction.
      type: object
      properties:
        code:
          type: string
        id:
          format: int64
          type: integer
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        status:
          $ref: '#/components/schemas/WalletTxStatus'
        kind:
          $ref: '#/components/schemas/WalletTxKind'
        amount:
          description: Amount
          type: number
          example: "10,000,000"
        capturedAmount:
          description: Capture Prev Wallet Amount Balance
          type: number
          example: "10,000,000"
        walletKind:
          $ref: '#/components/schemas/WalletKind'
        source:
          description: "Details for the source. If it is the customer's RDF account,\
            \ it will be null."
          type: object
          allOf:
          - $ref: '#/components/schemas/WalletTxEndpoint'
        destination:
          description: "Details for the destination. If it is the customer's RDF account,\
            \ it will be null."
          type: object
          allOf:
          - $ref: '#/components/schemas/WalletTxEndpoint'
        evidence:
          $ref: '#/components/schemas/Media'
        notes:
          description: "Additional notes for tracing (exp : tracing dividend details)"
          type: string
        createdBy:
          type: string
    WalletTxAdminResponse:
      type: object
      properties:
        code:
          description: Code Wallet Transaction
          type: string
          example: 7a414687-f40f-41a6-ab0d-bcd6bd63209c
        email:
          description: Email Customer
          type: string
          example: ivander@briix.com
        createdAt:
          description: Record the date and time when Wallet Transaction created
          type: string
          allOf:
          - $ref: '#/components/schemas/OffsetDateTime'
          example: 2023-07-05 18:12:20.000000
        status:
          description: Wallet Transaction Status
          enum:
          - PENDING
          - SUCCESSFUL
          - REJECTED
          type: string
          example: PENDING
        kind:
          description: Wallet Transaction Kind
          enum:
          - TOP_UP("T")
          - WITHDRAWAL("W")
          type: string
          example: T
        amount:
          description: Amount of transaction
          type: number
          example: 2000000
        source:
          description: Source of transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/WalletTxEndpoint'
          example:
            bank: COMMONWEALTH
            account: "6784438"
            name: HSISV
        destination:
          description: Destination for transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/WalletTxEndpoint'
          example:
            bank: PT Bank Negara Indonesia (Persero) Tbk
            account: "1317654618"
            name: PT Briix Financial Technology
        evidence:
          $ref: '#/components/schemas/Media'
    WalletTxDividendResponse:
      type: object
      properties:
        code:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        status:
          $ref: '#/components/schemas/WalletTxStatus'
        kind:
          $ref: '#/components/schemas/WalletTxKind'
        amount:
          type: number
        walletKind:
          $ref: '#/components/schemas/WalletKind'
        from:
          $ref: '#/components/schemas/Corporation'
        source:
          $ref: '#/components/schemas/WalletTxEndpoint'
        destination:
          $ref: '#/components/schemas/WalletTxEndpoint'
        evidence:
          $ref: '#/components/schemas/Media'
    WalletTxDueDiligenceResponse:
      type: object
      properties:
        code:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        status:
          type: object
          additionalProperties:
            type: string
        paymentStatus:
          type: object
          additionalProperties:
            type: string
        fee:
          type: number
        totalPay:
          type: number
        walletKind:
          $ref: '#/components/schemas/WalletKind'
        from:
          $ref: '#/components/schemas/Corporation'
        destination:
          $ref: '#/components/schemas/WalletTxEndpoint'
        evidence:
          $ref: '#/components/schemas/Media'
        report:
          $ref: '#/components/schemas/Media'
    WalletTxEndpoint:
      type: object
      properties:
        bank:
          description: Bank name. Must be a valid `Bank.code`
          type: string
          example: BCA
        account:
          description: Account number
          type: string
          example: "1234567890"
        name:
          description: Name of the account holder
          type: string
          example: Bruce Wayne
    WalletTxKind:
      enum:
      - B
      - U
      - F
      - H
      - I
      - J
      - K
      - L
      - "N"
      - "Y"
      - T
      - W
      - V
      - R
      - DD
      - A
      - P
      - S
      type: string
    WalletTxStatus:
      enum:
      - 0
      - 200
      - 400
      type: string
    Wallet_Simple_Nats:
      description: Wallet.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime_Simple_Nats'
        id:
          format: int64
          type: integer
        balance:
          description: Balance
          type: number
          example: "10,000,000"
        onHoldBalance:
          description: On Hold balance
          type: number
          example: "10,000,000"
        tempBalance:
          type: number
        kind:
          $ref: '#/components/schemas/WalletKind_Simple_Nats'
        accountNumber:
          type: string
        balanceAll:
          type: number
    WithdrawalBank:
      description: List of banks to choose when customers create a bank account.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/OffsetDateTime'
        id:
          format: int64
          type: integer
        logo:
          description: Logo attached to this bank. Use the other API to add logo.
          type: object
          allOf:
          - $ref: '#/components/schemas/Media'
        description:
          description: Description bank
          type: string
          example: Bank Central Asia
        status:
          description: Publish Status of Bank
          enum:
          - DRAFT
          - ACTIVE
          - DEACTIVE
          type: string
          example: DRAFT
    XenditRdfCustomerRequest:
      type: object
      properties:
        reference_id:
          type: string
        iluma_biometric_verification_id:
          type: string
        title:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        tax_id_number:
          type: string
        domicile_country:
          type: string
        religion:
          type: string
        birthplace:
          type: string
        birthdate:
          type: string
        gender:
          type: string
        marital_status:
          type: string
        mother_maiden_name:
          type: string
        job_code:
          type: string
        education:
          type: string
        id_card_number:
          type: string
        id_issuing_city:
          type: string
        id_expiry_date:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        mobile_number:
          type: string
        phone_number:
          type: string
        office_phone_number:
          type: string
        fax_number:
          type: string
        email:
          type: string
        channel_properties:
          $ref: '#/components/schemas/ChannelProperties'
        monthly_income_range:
          type: string
    XenditRdfCustomerRequest_Simple_Nats:
      type: object
      properties:
        reference_id:
          type: string
        iluma_biometric_verification_id:
          type: string
        title:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        tax_id_number:
          type: string
        domicile_country:
          type: string
        religion:
          type: string
        birthplace:
          type: string
        birthdate:
          type: string
        gender:
          type: string
        marital_status:
          type: string
        mother_maiden_name:
          type: string
        job_code:
          type: string
        education:
          type: string
        id_card_number:
          type: string
        id_issuing_city:
          type: string
        id_expiry_date:
          type: string
        address:
          $ref: '#/components/schemas/Address_Simple_Nats'
        mobile_number:
          type: string
        phone_number:
          type: string
        office_phone_number:
          type: string
        fax_number:
          type: string
        email:
          type: string
        channel_properties:
          $ref: '#/components/schemas/ChannelProperties_Simple_Nats'
        monthly_income_range:
          type: string
    XenditStatus:
      enum:
      - 0
      - 40
      - 50
      - 100
      - 200
      - 400
      - 450
      type: string
    XenditStatus_Simple_Nats:
      enum:
      - 0
      - 40
      - 50
      - 100
      - 200
      - 400
      - 450
      type: string
    YodaRoomStatus:
      enum:
      - checked_in
      - checked_out
      - confirmed
      - not_confirmed
      - canceled
      - no_show
      - available
      - manual
      - NONE
      type: string
    YouTrackIssueResponse:
      type: object
      properties:
        created:
          format: int64
          type: integer
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
        idReadable:
          type: string
        summary:
          type: string
        updated:
          format: int64
          type: integer
        numberInProject:
          format: int32
          type: integer
        project:
          $ref: '#/components/schemas/Project'
        resolved: {}
        reporter:
          $ref: '#/components/schemas/Reporter'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        updater:
          $ref: '#/components/schemas/Updater'
        id:
          type: string
        type:
          type: string
    ZohoDeal:
      description: Related to Zoho Deal CRM integration.
      type: object
      properties:
        zohoDealId:
          description: Zoho Deal Id.
          type: string
    ZohoProduct:
      description: Related to Zoho Product CRM integration.
      type: object
      properties:
        zohoProductId:
          description: Zoho Product Id.
          type: string
    ZohoProduct_Simple_Nats:
      description: Related to Zoho Product CRM integration.
      type: object
      properties:
        zohoProductId:
          description: Zoho Product Id.
          type: string
  securitySchemes:
    jwt:
      type: http
      description: Authentication
      scheme: bearer
      bearerFormat: JWT
